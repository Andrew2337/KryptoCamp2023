{
	"id": "112156d17baabae4b779dda2dbde8010",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC-721A_flattened.sol": {
				"content": "\n// File: erc721a/contracts/IERC721A.sol\n\n\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Interface of ERC721A.\n */\ninterface IERC721A {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the\n     * ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    /**\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\n     */\n    error MintERC2309QuantityExceedsLimit();\n\n    /**\n     * The `extraData` cannot be set on an unintialized ownership slot.\n     */\n    error OwnershipNotInitializedForExtraData();\n\n    // =============================================================\n    //                            STRUCTS\n    // =============================================================\n\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Stores the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n        // Arbitrary data similar to `startTimestamp` that can be set via {_extraData}.\n        uint24 extraData;\n    }\n\n    // =============================================================\n    //                         TOKEN COUNTERS\n    // =============================================================\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n\n    // =============================================================\n    //                            IERC721\n    // =============================================================\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables\n     * (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`,\n     * checking first that contract recipients are aware of the ERC721 protocol\n     * to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move\n     * this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external payable;\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n     * whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external payable;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n\n    // =============================================================\n    //                           IERC2309\n    // =============================================================\n\n    /**\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n     * (inclusive) is transferred from `from` to `to`, as defined in the\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n     *\n     * See {_mintERC2309} for more details.\n     */\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\n}\n\n// File: erc721a/contracts/ERC721A.sol\n\n\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n\n/**\n * @dev Interface of ERC721 token receiver.\n */\ninterface ERC721A__IERC721Receiver {\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n/**\n * @title ERC721A\n *\n * @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n * Non-Fungible Token Standard, including the Metadata extension.\n * Optimized for lower gas during batch mints.\n *\n * Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n * starting from `_startTokenId()`.\n *\n * Assumptions:\n *\n * - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n * - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\n */\ncontract ERC721A is IERC721A {\n    // Bypass for a `--via-ir` bug (https://github.com/chiru-labs/ERC721A/pull/364).\n    struct TokenApprovalRef {\n        address value;\n    }\n\n    // =============================================================\n    //                           CONSTANTS\n    // =============================================================\n\n    // Mask of an entry in packed address data.\n    uint256 private constant _BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\n\n    // The bit position of `numberMinted` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_MINTED = 64;\n\n    // The bit position of `numberBurned` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_BURNED = 128;\n\n    // The bit position of `aux` in packed address data.\n    uint256 private constant _BITPOS_AUX = 192;\n\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\n    uint256 private constant _BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\n\n    // The bit position of `startTimestamp` in packed ownership.\n    uint256 private constant _BITPOS_START_TIMESTAMP = 160;\n\n    // The bit mask of the `burned` bit in packed ownership.\n    uint256 private constant _BITMASK_BURNED = 1 << 224;\n\n    // The bit position of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITPOS_NEXT_INITIALIZED = 225;\n\n    // The bit mask of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITMASK_NEXT_INITIALIZED = 1 << 225;\n\n    // The bit position of `extraData` in packed ownership.\n    uint256 private constant _BITPOS_EXTRA_DATA = 232;\n\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\n    uint256 private constant _BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\n\n    // The mask of the lower 160 bits for addresses.\n    uint256 private constant _BITMASK_ADDRESS = (1 << 160) - 1;\n\n    // The maximum `quantity` that can be minted with {_mintERC2309}.\n    // This limit is to prevent overflows on the address data entries.\n    // For a limit of 5000, a total of 3.689e15 calls to {_mintERC2309}\n    // is required to cause an overflow, which is unrealistic.\n    uint256 private constant _MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\n\n    // The `Transfer` event signature is given by:\n    // `keccak256(bytes(\"Transfer(address,address,uint256)\"))`.\n    bytes32 private constant _TRANSFER_EVENT_SIGNATURE =\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\n\n    // =============================================================\n    //                            STORAGE\n    // =============================================================\n\n    // The next token ID to be minted.\n    uint256 private _currentIndex;\n\n    // The number of tokens burned.\n    uint256 private _burnCounter;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to ownership details\n    // An empty struct value does not necessarily mean the token is unowned.\n    // See {_packedOwnershipOf} implementation for details.\n    //\n    // Bits Layout:\n    // - [0..159]   `addr`\n    // - [160..223] `startTimestamp`\n    // - [224]      `burned`\n    // - [225]      `nextInitialized`\n    // - [232..255] `extraData`\n    mapping(uint256 => uint256) private _packedOwnerships;\n\n    // Mapping owner address to address data.\n    //\n    // Bits Layout:\n    // - [0..63]    `balance`\n    // - [64..127]  `numberMinted`\n    // - [128..191] `numberBurned`\n    // - [192..255] `aux`\n    mapping(address => uint256) private _packedAddressData;\n\n    // Mapping from token ID to approved address.\n    mapping(uint256 => TokenApprovalRef) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // =============================================================\n    //                          CONSTRUCTOR\n    // =============================================================\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _currentIndex = _startTokenId();\n    }\n\n    // =============================================================\n    //                   TOKEN COUNTING OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the starting token ID.\n     * To change the starting token ID, please override this function.\n     */\n    function _startTokenId() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev Returns the next token ID to be minted.\n     */\n    function _nextTokenId() internal view virtual returns (uint256) {\n        return _currentIndex;\n    }\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        // Counter underflow is impossible as _burnCounter cannot be incremented\n        // more than `_currentIndex - _startTokenId()` times.\n        unchecked {\n            return _currentIndex - _burnCounter - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total amount of tokens minted in the contract.\n     */\n    function _totalMinted() internal view virtual returns (uint256) {\n        // Counter underflow is impossible as `_currentIndex` does not decrement,\n        // and it is initialized to `_startTokenId()`.\n        unchecked {\n            return _currentIndex - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total number of tokens burned.\n     */\n    function _totalBurned() internal view virtual returns (uint256) {\n        return _burnCounter;\n    }\n\n    // =============================================================\n    //                    ADDRESS DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        if (owner == address(0)) revert BalanceQueryForZeroAddress();\n        return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens minted by `owner`.\n     */\n    function _numberMinted(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_MINTED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens burned by or on behalf of `owner`.\n     */\n    function _numberBurned(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_BURNED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     */\n    function _getAux(address owner) internal view returns (uint64) {\n        return uint64(_packedAddressData[owner] >> _BITPOS_AUX);\n    }\n\n    /**\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     * If there are multiple variables, please pack them into a uint64.\n     */\n    function _setAux(address owner, uint64 aux) internal virtual {\n        uint256 packed = _packedAddressData[owner];\n        uint256 auxCasted;\n        // Cast `aux` with assembly to avoid redundant masking.\n        assembly {\n            auxCasted := aux\n        }\n        packed = (packed & _BITMASK_AUX_COMPLEMENT) | (auxCasted << _BITPOS_AUX);\n        _packedAddressData[owner] = packed;\n    }\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        // The interface IDs are constants representing the first 4 bytes\n        // of the XOR of all function selectors in the interface.\n        // See: [ERC165](https://eips.ethereum.org/EIPS/eip-165)\n        // (e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`)\n        return\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\n    }\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        if (!_exists(tokenId)) revert URIQueryForNonexistentToken();\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, it can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return '';\n    }\n\n    // =============================================================\n    //                     OWNERSHIPS OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        return address(uint160(_packedOwnershipOf(tokenId)));\n    }\n\n    /**\n     * @dev Gas spent here starts off proportional to the maximum mint batch size.\n     * It gradually moves to O(1) as tokens get transferred around over time.\n     */\n    function _ownershipOf(uint256 tokenId) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct at `index`.\n     */\n    function _ownershipAt(uint256 index) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnerships[index]);\n    }\n\n    /**\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\n     */\n    function _initializeOwnershipAt(uint256 index) internal virtual {\n        if (_packedOwnerships[index] == 0) {\n            _packedOwnerships[index] = _packedOwnershipOf(index);\n        }\n    }\n\n    /**\n     * Returns the packed ownership data of `tokenId`.\n     */\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {\n        uint256 curr = tokenId;\n\n        unchecked {\n            if (_startTokenId() <= curr)\n                if (curr < _currentIndex) {\n                    uint256 packed = _packedOwnerships[curr];\n                    // If not burned.\n                    if (packed & _BITMASK_BURNED == 0) {\n                        // Invariant:\n                        // There will always be an initialized ownership slot\n                        // (i.e. `ownership.addr != address(0) && ownership.burned == false`)\n                        // before an unintialized ownership slot\n                        // (i.e. `ownership.addr == address(0) && ownership.burned == false`)\n                        // Hence, `curr` will not underflow.\n                        //\n                        // We can directly compare the packed value.\n                        // If the address is zero, packed will be zero.\n                        while (packed == 0) {\n                            packed = _packedOwnerships[--curr];\n                        }\n                        return packed;\n                    }\n                }\n        }\n        revert OwnerQueryForNonexistentToken();\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct from `packed`.\n     */\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\n        ownership.addr = address(uint160(packed));\n        ownership.startTimestamp = uint64(packed >> _BITPOS_START_TIMESTAMP);\n        ownership.burned = packed & _BITMASK_BURNED != 0;\n        ownership.extraData = uint24(packed >> _BITPOS_EXTRA_DATA);\n    }\n\n    /**\n     * @dev Packs ownership data into a single uint256.\n     */\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // `owner | (block.timestamp << _BITPOS_START_TIMESTAMP) | flags`.\n            result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags))\n        }\n    }\n\n    /**\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\n     */\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\n        // For branchless setting of the `nextInitialized` flag.\n        assembly {\n            // `(quantity == 1) << _BITPOS_NEXT_INITIALIZED`.\n            result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\n        }\n    }\n\n    // =============================================================\n    //                      APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) public payable virtual override {\n        address owner = ownerOf(tokenId);\n\n        if (_msgSenderERC721A() != owner)\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\n                revert ApprovalCallerNotOwnerNorApproved();\n            }\n\n        _tokenApprovals[tokenId].value = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken();\n\n        return _tokenApprovals[tokenId].value;\n    }\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\n    }\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted. See {_mint}.\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return\n            _startTokenId() <= tokenId &&\n            tokenId < _currentIndex && // If within bounds,\n            _packedOwnerships[tokenId] & _BITMASK_BURNED == 0; // and not burned.\n    }\n\n    /**\n     * @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`.\n     */\n    function _isSenderApprovedOrOwner(\n        address approvedAddress,\n        address owner,\n        address msgSender\n    ) private pure returns (bool result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            msgSender := and(msgSender, _BITMASK_ADDRESS)\n            // `msgSender == owner || msgSender == approvedAddress`.\n            result := or(eq(msgSender, owner), eq(msgSender, approvedAddress))\n        }\n    }\n\n    /**\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\n     */\n    function _getApprovedSlotAndAddress(uint256 tokenId)\n        private\n        view\n        returns (uint256 approvedAddressSlot, address approvedAddress)\n    {\n        TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId];\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId].value`.\n        assembly {\n            approvedAddressSlot := tokenApproval.slot\n            approvedAddress := sload(approvedAddressSlot)\n        }\n    }\n\n    // =============================================================\n    //                      TRANSFER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner();\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        // The nested ifs save around 20+ gas over a compound boolean condition.\n        if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n            if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\n\n        if (to == address(0)) revert TransferToZeroAddress();\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // We can directly increment and decrement the balances.\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\n\n            // Updates:\n            // - `address` to the next owner.\n            // - `startTimestamp` to the timestamp of transfering.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, to, tokenId);\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        safeTransferFrom(from, to, tokenId, '');\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public payable virtual override {\n        transferFrom(from, to, tokenId);\n        if (to.code.length != 0)\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\n                revert TransferToNonERC721ReceiverImplementer();\n            }\n    }\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token IDs\n     * are about to be transferred. This includes minting.\n     * And also called before burning one token.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token IDs\n     * have been transferred. This includes minting.\n     * And also called after one token has been burned.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` has been minted for `to`.\n     * - When `to` is zero, `tokenId` has been burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n     *\n     * `from` - Previous owner of the given token ID.\n     * `to` - Target address that will receive the token.\n     * `tokenId` - Token ID to be transferred.\n     * `_data` - Optional data to send along with the call.\n     *\n     * Returns whether the call correctly returned the expected magic value.\n     */\n    function _checkContractOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\n            bytes4 retval\n        ) {\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                revert TransferToNonERC721ReceiverImplementer();\n            } else {\n                assembly {\n                    revert(add(32, reason), mload(reason))\n                }\n            }\n        }\n    }\n\n    // =============================================================\n    //                        MINT OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mint(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (quantity == 0) revert MintZeroQuantity();\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are incredibly unrealistic.\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\n        // `tokenId` has a maximum limit of 2**256.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            uint256 toMasked;\n            uint256 end = startTokenId + quantity;\n\n            // Use assembly to loop and emit the `Transfer` event for gas savings.\n            // The duplicated `log4` removes an extra check and reduces stack juggling.\n            // The assembly, together with the surrounding Solidity code, have been\n            // delicately arranged to nudge the compiler into producing optimized opcodes.\n            assembly {\n                // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n                toMasked := and(to, _BITMASK_ADDRESS)\n                // Emit the `Transfer` event.\n                log4(\n                    0, // Start of data (0, since no data).\n                    0, // End of data (0, since no data).\n                    _TRANSFER_EVENT_SIGNATURE, // Signature.\n                    0, // `address(0)`.\n                    toMasked, // `to`.\n                    startTokenId // `tokenId`.\n                )\n\n                // The `iszero(eq(,))` check ensures that large values of `quantity`\n                // that overflows uint256 will make the loop run out of gas.\n                // The compiler will optimize the `iszero` away for performance.\n                for {\n                    let tokenId := add(startTokenId, 1)\n                } iszero(eq(tokenId, end)) {\n                    tokenId := add(tokenId, 1)\n                } {\n                    // Emit the `Transfer` event. Similar to above.\n                    log4(0, 0, _TRANSFER_EVENT_SIGNATURE, 0, toMasked, tokenId)\n                }\n            }\n            if (toMasked == 0) revert MintToZeroAddress();\n\n            _currentIndex = end;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * This function is intended for efficient minting only during contract creation.\n     *\n     * It emits only one {ConsecutiveTransfer} as defined in\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n     * instead of a sequence of {Transfer} event(s).\n     *\n     * Calling this function outside of contract creation WILL make your contract\n     * non-compliant with the ERC721 standard.\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {ConsecutiveTransfer} event.\n     */\n    function _mintERC2309(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) revert MintToZeroAddress();\n        if (quantity == 0) revert MintZeroQuantity();\n        if (quantity > _MAX_MINT_ERC2309_QUANTITY_LIMIT) revert MintERC2309QuantityExceedsLimit();\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\n\n            _currentIndex = startTokenId + quantity;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n     * - `quantity` must be greater than 0.\n     *\n     * See {_mint}.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, quantity);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 end = _currentIndex;\n                uint256 index = end - quantity;\n                do {\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\n                        revert TransferToNonERC721ReceiverImplementer();\n                    }\n                } while (index < end);\n                // Reentrancy protection.\n                if (_currentIndex != end) revert();\n            }\n        }\n    }\n\n    /**\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\n     */\n    function _safeMint(address to, uint256 quantity) internal virtual {\n        _safeMint(to, quantity, '');\n    }\n\n    // =============================================================\n    //                        BURN OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_burn(tokenId, false)`.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        _burn(tokenId, false);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        address from = address(uint160(prevOwnershipPacked));\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        if (approvalCheck) {\n            // The nested ifs save around 20+ gas over a compound boolean condition.\n            if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n                if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\n        }\n\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // Updates:\n            // - `balance -= 1`.\n            // - `numberBurned += 1`.\n            //\n            // We can directly decrement the balance, and increment the number burned.\n            // This is equivalent to `packed -= 1; packed += 1 << _BITPOS_NUMBER_BURNED;`.\n            _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1;\n\n            // Updates:\n            // - `address` to the last owner.\n            // - `startTimestamp` to the timestamp of burning.\n            // - `burned` to `true`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                from,\n                (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, address(0), tokenId);\n        _afterTokenTransfers(from, address(0), tokenId, 1);\n\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\n        unchecked {\n            _burnCounter++;\n        }\n    }\n\n    // =============================================================\n    //                     EXTRA DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Directly sets the extra data for the ownership data `index`.\n     */\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal virtual {\n        uint256 packed = _packedOwnerships[index];\n        if (packed == 0) revert OwnershipNotInitializedForExtraData();\n        uint256 extraDataCasted;\n        // Cast `extraData` with assembly to avoid redundant masking.\n        assembly {\n            extraDataCasted := extraData\n        }\n        packed = (packed & _BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << _BITPOS_EXTRA_DATA);\n        _packedOwnerships[index] = packed;\n    }\n\n    /**\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\n     * Intended to be overridden by the cosumer contract.\n     *\n     * `previousExtraData` - the value of `extraData` before transfer.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _extraData(\n        address from,\n        address to,\n        uint24 previousExtraData\n    ) internal view virtual returns (uint24) {}\n\n    /**\n     * @dev Returns the next extra data for the packed ownership data.\n     * The returned result is shifted into position.\n     */\n    function _nextExtraData(\n        address from,\n        address to,\n        uint256 prevOwnershipPacked\n    ) private view returns (uint256) {\n        uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA);\n        return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA;\n    }\n\n    // =============================================================\n    //                       OTHER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the message sender (defaults to `msg.sender`).\n     *\n     * If you are writing GSN compatible contracts, you need to override this function.\n     */\n    function _msgSenderERC721A() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    /**\n     * @dev Converts a uint256 to its ASCII string decimal representation.\n     */\n    function _toString(uint256 value) internal pure virtual returns (string memory str) {\n        assembly {\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit), but\n            // we allocate 0xa0 bytes to keep the free memory pointer 32-byte word aligned.\n            // We will need 1 word for the trailing zeros padding, 1 word for the length,\n            // and 3 words for a maximum of 78 digits. Total: 5 * 0x20 = 0xa0.\n            let m := add(mload(0x40), 0xa0)\n            // Update the free memory pointer to allocate.\n            mstore(0x40, m)\n            // Assign the `str` to the end.\n            str := sub(m, 0x20)\n            // Zeroize the slot after the string.\n            mstore(str, 0)\n\n            // Cache the end of the memory to calculate the length later.\n            let end := str\n\n            // We write the string from rightmost digit to leftmost digit.\n            // The following is essentially a do-while loop that also handles the zero case.\n            // prettier-ignore\n            for { let temp := value } 1 {} {\n                str := sub(str, 1)\n                // Write the character to the pointer.\n                // The ASCII index of the '0' character is 48.\n                mstore8(str, add(48, mod(temp, 10)))\n                // Keep dividing `temp` until zero.\n                temp := div(temp, 10)\n                // prettier-ignore\n                if iszero(temp) { break }\n            }\n\n            let length := sub(end, str)\n            // Move the pointer 32 bytes leftwards to make room for the length.\n            str := sub(str, 0x20)\n            // Store the length.\n            mstore(str, length)\n        }\n    }\n}\n\n// File: contracts/ERC-721A.sol\n\n\n\npragma solidity ^0.8.17;\n\n\ncontract GasCompareERC721A is ERC721A {\n    constructor() ERC721A(\"Azuki\", \"AZUKI\") {}\n\n    function mint(uint256 quantity) external payable {\n        // `_mint`'s second argument now takes in a `quantity`, not a `tokenId`.\n        _mint(msg.sender, quantity);\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ERC-721A_flattened.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721A",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC-721A_flattened.sol\":9604:50056  contract ERC721A is IERC721A {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ERC-721A_flattened.sol\":13655:13809  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ERC-721A_flattened.sol\":13729:13734  name_ */\n  dup2\n    /* \"contracts/ERC-721A_flattened.sol\":13721:13726  _name */\n  0x02\n    /* \"contracts/ERC-721A_flattened.sol\":13721:13734  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/ERC-721A_flattened.sol\":13754:13761  symbol_ */\n  dup1\n    /* \"contracts/ERC-721A_flattened.sol\":13744:13751  _symbol */\n  0x03\n    /* \"contracts/ERC-721A_flattened.sol\":13744:13761  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/ERC-721A_flattened.sol\":13787:13802  _startTokenId() */\n  tag_9\n    /* \"contracts/ERC-721A_flattened.sol\":13787:13800  _startTokenId */\n  shl(0x20, tag_10)\n    /* \"contracts/ERC-721A_flattened.sol\":13787:13802  _startTokenId() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"contracts/ERC-721A_flattened.sol\":13771:13784  _currentIndex */\n  0x00\n    /* \"contracts/ERC-721A_flattened.sol\":13771:13802  _currentIndex = _startTokenId() */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ERC-721A_flattened.sol\":13655:13809  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/ERC-721A_flattened.sol\":9604:50056  contract ERC721A is IERC721A {... */\n  jump(tag_11)\n    /* \"contracts/ERC-721A_flattened.sol\":14135:14225  function _startTokenId() internal view virtual returns (uint256) {... */\ntag_10:\n    /* \"contracts/ERC-721A_flattened.sol\":14191:14198  uint256 */\n  0x00\n    /* \"contracts/ERC-721A_flattened.sol\":14135:14225  function _startTokenId() internal view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_13:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_14:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_15:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_16:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_17:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_18:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_19:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_20:\n    /* \"#utility.yul\":957:984   */\n  tag_54\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_18\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_56\n  tag_19\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1030:1118   */\ntag_55:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_21:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_58\n  tag_13\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_59\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_20\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_22:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_62\n  tag_19\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1434:1490   */\ntag_61:\n    /* \"#utility.yul\":1508:1537   */\n  tag_63\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_18\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_23:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_65:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_65)\ntag_67:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_24:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_69\n    /* \"#utility.yul\":1992:2041   */\n  tag_70\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_22\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1976:2042   */\n  tag_21\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_72\n  tag_17\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2117:2229   */\ntag_71:\n    /* \"#utility.yul\":2238:2290   */\n  tag_73\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_23\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_25:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_76\n  tag_16\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2399:2521   */\ntag_75:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_77\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_24\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3530   */\ntag_3:\n    /* \"#utility.yul\":2776:2782   */\n  0x00\n    /* \"#utility.yul\":2784:2790   */\n  dup1\n    /* \"#utility.yul\":2833:2835   */\n  0x40\n    /* \"#utility.yul\":2821:2830   */\n  dup4\n    /* \"#utility.yul\":2812:2819   */\n  dup6\n    /* \"#utility.yul\":2808:2831   */\n  sub\n    /* \"#utility.yul\":2804:2836   */\n  slt\n    /* \"#utility.yul\":2801:2920   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":2839:2918   */\n  tag_80\n  tag_14\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2801:2920   */\ntag_79:\n    /* \"#utility.yul\":2980:2981   */\n  0x00\n    /* \"#utility.yul\":2969:2978   */\n  dup4\n    /* \"#utility.yul\":2965:2982   */\n  add\n    /* \"#utility.yul\":2959:2983   */\n  mload\n    /* \"#utility.yul\":3010:3028   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3008   */\n  dup2\n    /* \"#utility.yul\":2999:3029   */\n  gt\n    /* \"#utility.yul\":2996:3113   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3032:3111   */\n  tag_82\n  tag_15\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2996:3113   */\ntag_81:\n    /* \"#utility.yul\":3137:3211   */\n  tag_83\n    /* \"#utility.yul\":3203:3210   */\n  dup6\n    /* \"#utility.yul\":3194:3200   */\n  dup3\n    /* \"#utility.yul\":3183:3192   */\n  dup7\n    /* \"#utility.yul\":3179:3201   */\n  add\n    /* \"#utility.yul\":3137:3211   */\n  tag_25\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3127:3211   */\n  swap3\n  pop\n    /* \"#utility.yul\":2930:3221   */\n  pop\n    /* \"#utility.yul\":3281:3283   */\n  0x20\n    /* \"#utility.yul\":3270:3279   */\n  dup4\n    /* \"#utility.yul\":3266:3284   */\n  add\n    /* \"#utility.yul\":3260:3285   */\n  mload\n    /* \"#utility.yul\":3312:3330   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3304:3310   */\n  dup2\n    /* \"#utility.yul\":3301:3331   */\n  gt\n    /* \"#utility.yul\":3298:3415   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":3334:3413   */\n  tag_85\n  tag_15\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3298:3415   */\ntag_84:\n    /* \"#utility.yul\":3439:3513   */\n  tag_86\n    /* \"#utility.yul\":3505:3512   */\n  dup6\n    /* \"#utility.yul\":3496:3502   */\n  dup3\n    /* \"#utility.yul\":3485:3494   */\n  dup7\n    /* \"#utility.yul\":3481:3503   */\n  add\n    /* \"#utility.yul\":3439:3513   */\n  tag_25\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3429:3513   */\n  swap2\n  pop\n    /* \"#utility.yul\":3231:3523   */\n  pop\n    /* \"#utility.yul\":2677:3530   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3536:3635   */\ntag_26:\n    /* \"#utility.yul\":3588:3594   */\n  0x00\n    /* \"#utility.yul\":3622:3627   */\n  dup2\n    /* \"#utility.yul\":3616:3628   */\n  mload\n    /* \"#utility.yul\":3606:3628   */\n  swap1\n  pop\n    /* \"#utility.yul\":3536:3635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3641:3821   */\ntag_27:\n    /* \"#utility.yul\":3689:3766   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3686:3687   */\n  0x00\n    /* \"#utility.yul\":3679:3767   */\n  mstore\n    /* \"#utility.yul\":3786:3790   */\n  0x22\n    /* \"#utility.yul\":3783:3784   */\n  0x04\n    /* \"#utility.yul\":3776:3791   */\n  mstore\n    /* \"#utility.yul\":3810:3814   */\n  0x24\n    /* \"#utility.yul\":3807:3808   */\n  0x00\n    /* \"#utility.yul\":3800:3815   */\n  revert\n    /* \"#utility.yul\":3827:4147   */\ntag_28:\n    /* \"#utility.yul\":3871:3877   */\n  0x00\n    /* \"#utility.yul\":3908:3909   */\n  0x02\n    /* \"#utility.yul\":3902:3906   */\n  dup3\n    /* \"#utility.yul\":3898:3910   */\n  div\n    /* \"#utility.yul\":3888:3910   */\n  swap1\n  pop\n    /* \"#utility.yul\":3955:3956   */\n  0x01\n    /* \"#utility.yul\":3949:3953   */\n  dup3\n    /* \"#utility.yul\":3945:3957   */\n  and\n    /* \"#utility.yul\":3976:3994   */\n  dup1\n    /* \"#utility.yul\":3966:4047   */\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4032:4036   */\n  0x7f\n    /* \"#utility.yul\":4024:4030   */\n  dup3\n    /* \"#utility.yul\":4020:4037   */\n  and\n    /* \"#utility.yul\":4010:4037   */\n  swap2\n  pop\n    /* \"#utility.yul\":3966:4047   */\ntag_90:\n    /* \"#utility.yul\":4094:4096   */\n  0x20\n    /* \"#utility.yul\":4086:4092   */\n  dup3\n    /* \"#utility.yul\":4083:4097   */\n  lt\n    /* \"#utility.yul\":4063:4081   */\n  dup2\n    /* \"#utility.yul\":4060:4098   */\n  sub\n    /* \"#utility.yul\":4057:4141   */\n  tag_91\n  jumpi\n    /* \"#utility.yul\":4113:4131   */\n  tag_92\n  tag_27\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":4057:4141   */\ntag_91:\n    /* \"#utility.yul\":3878:4147   */\n  pop\n    /* \"#utility.yul\":3827:4147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4153:4294   */\ntag_29:\n    /* \"#utility.yul\":4202:4206   */\n  0x00\n    /* \"#utility.yul\":4225:4228   */\n  dup2\n    /* \"#utility.yul\":4217:4228   */\n  swap1\n  pop\n    /* \"#utility.yul\":4248:4251   */\n  dup2\n    /* \"#utility.yul\":4245:4246   */\n  0x00\n    /* \"#utility.yul\":4238:4252   */\n  mstore\n    /* \"#utility.yul\":4282:4286   */\n  0x20\n    /* \"#utility.yul\":4279:4280   */\n  0x00\n    /* \"#utility.yul\":4269:4287   */\n  keccak256\n    /* \"#utility.yul\":4261:4287   */\n  swap1\n  pop\n    /* \"#utility.yul\":4153:4294   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4300:4393   */\ntag_30:\n    /* \"#utility.yul\":4337:4343   */\n  0x00\n    /* \"#utility.yul\":4384:4386   */\n  0x20\n    /* \"#utility.yul\":4379:4381   */\n  0x1f\n    /* \"#utility.yul\":4372:4377   */\n  dup4\n    /* \"#utility.yul\":4368:4382   */\n  add\n    /* \"#utility.yul\":4364:4387   */\n  div\n    /* \"#utility.yul\":4354:4387   */\n  swap1\n  pop\n    /* \"#utility.yul\":4300:4393   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4399:4506   */\ntag_31:\n    /* \"#utility.yul\":4443:4451   */\n  0x00\n    /* \"#utility.yul\":4493:4498   */\n  dup3\n    /* \"#utility.yul\":4487:4491   */\n  dup3\n    /* \"#utility.yul\":4483:4499   */\n  shl\n    /* \"#utility.yul\":4462:4499   */\n  swap1\n  pop\n    /* \"#utility.yul\":4399:4506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4512:4905   */\ntag_32:\n    /* \"#utility.yul\":4581:4587   */\n  0x00\n    /* \"#utility.yul\":4631:4632   */\n  0x08\n    /* \"#utility.yul\":4619:4629   */\n  dup4\n    /* \"#utility.yul\":4615:4633   */\n  mul\n    /* \"#utility.yul\":4654:4751   */\n  tag_97\n    /* \"#utility.yul\":4684:4750   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4673:4682   */\n  dup3\n    /* \"#utility.yul\":4654:4751   */\n  tag_31\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4772:4811   */\n  tag_98\n    /* \"#utility.yul\":4802:4810   */\n  dup7\n    /* \"#utility.yul\":4791:4800   */\n  dup4\n    /* \"#utility.yul\":4772:4811   */\n  tag_31\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":4760:4811   */\n  swap6\n  pop\n    /* \"#utility.yul\":4844:4848   */\n  dup1\n    /* \"#utility.yul\":4840:4849   */\n  not\n    /* \"#utility.yul\":4833:4838   */\n  dup5\n    /* \"#utility.yul\":4829:4850   */\n  and\n    /* \"#utility.yul\":4820:4850   */\n  swap4\n  pop\n    /* \"#utility.yul\":4893:4897   */\n  dup1\n    /* \"#utility.yul\":4883:4891   */\n  dup7\n    /* \"#utility.yul\":4879:4898   */\n  and\n    /* \"#utility.yul\":4872:4877   */\n  dup5\n    /* \"#utility.yul\":4869:4899   */\n  or\n    /* \"#utility.yul\":4859:4899   */\n  swap3\n  pop\n    /* \"#utility.yul\":4588:4905   */\n  pop\n  pop\n    /* \"#utility.yul\":4512:4905   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4911:4988   */\ntag_33:\n    /* \"#utility.yul\":4948:4955   */\n  0x00\n    /* \"#utility.yul\":4977:4982   */\n  dup2\n    /* \"#utility.yul\":4966:4982   */\n  swap1\n  pop\n    /* \"#utility.yul\":4911:4988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4994:5054   */\ntag_34:\n    /* \"#utility.yul\":5022:5025   */\n  0x00\n    /* \"#utility.yul\":5043:5048   */\n  dup2\n    /* \"#utility.yul\":5036:5048   */\n  swap1\n  pop\n    /* \"#utility.yul\":4994:5054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5060:5202   */\ntag_35:\n    /* \"#utility.yul\":5110:5119   */\n  0x00\n    /* \"#utility.yul\":5143:5196   */\n  tag_102\n    /* \"#utility.yul\":5161:5195   */\n  tag_103\n    /* \"#utility.yul\":5170:5194   */\n  tag_104\n    /* \"#utility.yul\":5188:5193   */\n  dup5\n    /* \"#utility.yul\":5170:5194   */\n  tag_33\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5161:5195   */\n  tag_34\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5143:5196   */\n  tag_33\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":5130:5196   */\n  swap1\n  pop\n    /* \"#utility.yul\":5060:5202   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5208:5283   */\ntag_36:\n    /* \"#utility.yul\":5251:5254   */\n  0x00\n    /* \"#utility.yul\":5272:5277   */\n  dup2\n    /* \"#utility.yul\":5265:5277   */\n  swap1\n  pop\n    /* \"#utility.yul\":5208:5283   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5289:5558   */\ntag_37:\n    /* \"#utility.yul\":5399:5438   */\n  tag_107\n    /* \"#utility.yul\":5430:5437   */\n  dup4\n    /* \"#utility.yul\":5399:5438   */\n  tag_35\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5460:5551   */\n  tag_108\n    /* \"#utility.yul\":5509:5550   */\n  tag_109\n    /* \"#utility.yul\":5533:5549   */\n  dup3\n    /* \"#utility.yul\":5509:5550   */\n  tag_36\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5501:5507   */\n  dup5\n    /* \"#utility.yul\":5494:5498   */\n  dup5\n    /* \"#utility.yul\":5488:5499   */\n  sload\n    /* \"#utility.yul\":5460:5551   */\n  tag_32\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5454:5458   */\n  dup3\n    /* \"#utility.yul\":5447:5552   */\n  sstore\n    /* \"#utility.yul\":5365:5558   */\n  pop\n    /* \"#utility.yul\":5289:5558   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5564:5637   */\ntag_38:\n    /* \"#utility.yul\":5609:5612   */\n  0x00\n    /* \"#utility.yul\":5564:5637   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5643:5832   */\ntag_39:\n    /* \"#utility.yul\":5720:5752   */\n  tag_112\n  tag_38\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5761:5826   */\n  tag_113\n    /* \"#utility.yul\":5819:5825   */\n  dup2\n    /* \"#utility.yul\":5811:5817   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5761:5826   */\n  tag_37\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5696:5832   */\n  pop\n    /* \"#utility.yul\":5643:5832   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5838:6024   */\ntag_40:\n    /* \"#utility.yul\":5898:6018   */\ntag_115:\n    /* \"#utility.yul\":5915:5918   */\n  dup2\n    /* \"#utility.yul\":5908:5913   */\n  dup2\n    /* \"#utility.yul\":5905:5919   */\n  lt\n    /* \"#utility.yul\":5898:6018   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":5969:6008   */\n  tag_118\n    /* \"#utility.yul\":6006:6007   */\n  0x00\n    /* \"#utility.yul\":5999:6004   */\n  dup3\n    /* \"#utility.yul\":5969:6008   */\n  tag_39\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":5942:5943   */\n  0x01\n    /* \"#utility.yul\":5935:5940   */\n  dup2\n    /* \"#utility.yul\":5931:5944   */\n  add\n    /* \"#utility.yul\":5922:5944   */\n  swap1\n  pop\n    /* \"#utility.yul\":5898:6018   */\n  jump(tag_115)\ntag_117:\n    /* \"#utility.yul\":5838:6024   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6030:6573   */\ntag_41:\n    /* \"#utility.yul\":6131:6133   */\n  0x1f\n    /* \"#utility.yul\":6126:6129   */\n  dup3\n    /* \"#utility.yul\":6123:6134   */\n  gt\n    /* \"#utility.yul\":6120:6566   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":6165:6203   */\n  tag_121\n    /* \"#utility.yul\":6197:6202   */\n  dup2\n    /* \"#utility.yul\":6165:6203   */\n  tag_29\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6249:6278   */\n  tag_122\n    /* \"#utility.yul\":6267:6277   */\n  dup5\n    /* \"#utility.yul\":6249:6278   */\n  tag_30\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6239:6247   */\n  dup2\n    /* \"#utility.yul\":6235:6279   */\n  add\n    /* \"#utility.yul\":6432:6434   */\n  0x20\n    /* \"#utility.yul\":6420:6430   */\n  dup6\n    /* \"#utility.yul\":6417:6435   */\n  lt\n    /* \"#utility.yul\":6414:6463   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":6453:6461   */\n  dup2\n    /* \"#utility.yul\":6438:6461   */\n  swap1\n  pop\n    /* \"#utility.yul\":6414:6463   */\ntag_123:\n    /* \"#utility.yul\":6476:6556   */\n  tag_124\n    /* \"#utility.yul\":6532:6554   */\n  tag_125\n    /* \"#utility.yul\":6550:6553   */\n  dup6\n    /* \"#utility.yul\":6532:6554   */\n  tag_30\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6522:6530   */\n  dup4\n    /* \"#utility.yul\":6518:6555   */\n  add\n    /* \"#utility.yul\":6505:6516   */\n  dup3\n    /* \"#utility.yul\":6476:6556   */\n  tag_40\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6135:6566   */\n  pop\n  pop\n    /* \"#utility.yul\":6120:6566   */\ntag_120:\n    /* \"#utility.yul\":6030:6573   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6579:6696   */\ntag_42:\n    /* \"#utility.yul\":6633:6641   */\n  0x00\n    /* \"#utility.yul\":6683:6688   */\n  dup3\n    /* \"#utility.yul\":6677:6681   */\n  dup3\n    /* \"#utility.yul\":6673:6689   */\n  shr\n    /* \"#utility.yul\":6652:6689   */\n  swap1\n  pop\n    /* \"#utility.yul\":6579:6696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6702:6871   */\ntag_43:\n    /* \"#utility.yul\":6746:6752   */\n  0x00\n    /* \"#utility.yul\":6779:6830   */\n  tag_128\n    /* \"#utility.yul\":6827:6828   */\n  0x00\n    /* \"#utility.yul\":6823:6829   */\n  not\n    /* \"#utility.yul\":6815:6820   */\n  dup5\n    /* \"#utility.yul\":6812:6813   */\n  0x08\n    /* \"#utility.yul\":6808:6821   */\n  mul\n    /* \"#utility.yul\":6779:6830   */\n  tag_42\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6775:6831   */\n  not\n    /* \"#utility.yul\":6860:6864   */\n  dup1\n    /* \"#utility.yul\":6854:6858   */\n  dup4\n    /* \"#utility.yul\":6850:6865   */\n  and\n    /* \"#utility.yul\":6840:6865   */\n  swap2\n  pop\n    /* \"#utility.yul\":6753:6871   */\n  pop\n    /* \"#utility.yul\":6702:6871   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6876:7171   */\ntag_44:\n    /* \"#utility.yul\":6952:6956   */\n  0x00\n    /* \"#utility.yul\":7098:7127   */\n  tag_130\n    /* \"#utility.yul\":7123:7126   */\n  dup4\n    /* \"#utility.yul\":7117:7121   */\n  dup4\n    /* \"#utility.yul\":7098:7127   */\n  tag_43\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":7090:7127   */\n  swap2\n  pop\n    /* \"#utility.yul\":7160:7163   */\n  dup3\n    /* \"#utility.yul\":7157:7158   */\n  0x02\n    /* \"#utility.yul\":7153:7164   */\n  mul\n    /* \"#utility.yul\":7147:7151   */\n  dup3\n    /* \"#utility.yul\":7144:7165   */\n  or\n    /* \"#utility.yul\":7136:7165   */\n  swap1\n  pop\n    /* \"#utility.yul\":6876:7171   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7176:8571   */\ntag_7:\n    /* \"#utility.yul\":7293:7330   */\n  tag_132\n    /* \"#utility.yul\":7326:7329   */\n  dup3\n    /* \"#utility.yul\":7293:7330   */\n  tag_26\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":7395:7413   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7387:7393   */\n  dup2\n    /* \"#utility.yul\":7384:7414   */\n  gt\n    /* \"#utility.yul\":7381:7437   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":7417:7435   */\n  tag_134\n  tag_19\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":7381:7437   */\ntag_133:\n    /* \"#utility.yul\":7461:7499   */\n  tag_135\n    /* \"#utility.yul\":7493:7497   */\n  dup3\n    /* \"#utility.yul\":7487:7498   */\n  sload\n    /* \"#utility.yul\":7461:7499   */\n  tag_28\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":7546:7613   */\n  tag_136\n    /* \"#utility.yul\":7606:7612   */\n  dup3\n    /* \"#utility.yul\":7598:7604   */\n  dup3\n    /* \"#utility.yul\":7592:7596   */\n  dup6\n    /* \"#utility.yul\":7546:7613   */\n  tag_41\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":7640:7641   */\n  0x00\n    /* \"#utility.yul\":7664:7668   */\n  0x20\n    /* \"#utility.yul\":7651:7668   */\n  swap1\n  pop\n    /* \"#utility.yul\":7696:7698   */\n  0x1f\n    /* \"#utility.yul\":7688:7694   */\n  dup4\n    /* \"#utility.yul\":7685:7699   */\n  gt\n    /* \"#utility.yul\":7713:7714   */\n  0x01\n    /* \"#utility.yul\":7708:8326   */\n  dup2\n  eq\n  tag_138\n  jumpi\n    /* \"#utility.yul\":8370:8371   */\n  0x00\n    /* \"#utility.yul\":8387:8393   */\n  dup5\n    /* \"#utility.yul\":8384:8461   */\n  iszero\n  tag_139\n  jumpi\n    /* \"#utility.yul\":8436:8445   */\n  dup3\n    /* \"#utility.yul\":8431:8434   */\n  dup8\n    /* \"#utility.yul\":8427:8446   */\n  add\n    /* \"#utility.yul\":8421:8447   */\n  mload\n    /* \"#utility.yul\":8412:8447   */\n  swap1\n  pop\n    /* \"#utility.yul\":8384:8461   */\ntag_139:\n    /* \"#utility.yul\":8487:8554   */\n  tag_140\n    /* \"#utility.yul\":8547:8553   */\n  dup6\n    /* \"#utility.yul\":8540:8545   */\n  dup3\n    /* \"#utility.yul\":8487:8554   */\n  tag_44\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":8481:8485   */\n  dup7\n    /* \"#utility.yul\":8474:8555   */\n  sstore\n    /* \"#utility.yul\":8343:8565   */\n  pop\n    /* \"#utility.yul\":7678:8565   */\n  jump(tag_137)\n    /* \"#utility.yul\":7708:8326   */\ntag_138:\n    /* \"#utility.yul\":7760:7764   */\n  0x1f\n    /* \"#utility.yul\":7756:7765   */\n  not\n    /* \"#utility.yul\":7748:7754   */\n  dup5\n    /* \"#utility.yul\":7744:7766   */\n  and\n    /* \"#utility.yul\":7794:7831   */\n  tag_141\n    /* \"#utility.yul\":7826:7830   */\n  dup7\n    /* \"#utility.yul\":7794:7831   */\n  tag_29\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":7853:7854   */\n  0x00\n    /* \"#utility.yul\":7867:8075   */\ntag_142:\n    /* \"#utility.yul\":7881:7888   */\n  dup3\n    /* \"#utility.yul\":7878:7879   */\n  dup2\n    /* \"#utility.yul\":7875:7889   */\n  lt\n    /* \"#utility.yul\":7867:8075   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":7960:7969   */\n  dup5\n    /* \"#utility.yul\":7955:7958   */\n  dup10\n    /* \"#utility.yul\":7951:7970   */\n  add\n    /* \"#utility.yul\":7945:7971   */\n  mload\n    /* \"#utility.yul\":7937:7943   */\n  dup3\n    /* \"#utility.yul\":7930:7972   */\n  sstore\n    /* \"#utility.yul\":8011:8012   */\n  0x01\n    /* \"#utility.yul\":8003:8009   */\n  dup3\n    /* \"#utility.yul\":7999:8013   */\n  add\n    /* \"#utility.yul\":7989:8013   */\n  swap2\n  pop\n    /* \"#utility.yul\":8058:8060   */\n  0x20\n    /* \"#utility.yul\":8047:8056   */\n  dup6\n    /* \"#utility.yul\":8043:8061   */\n  add\n    /* \"#utility.yul\":8030:8061   */\n  swap5\n  pop\n    /* \"#utility.yul\":7904:7908   */\n  0x20\n    /* \"#utility.yul\":7901:7902   */\n  dup2\n    /* \"#utility.yul\":7897:7909   */\n  add\n    /* \"#utility.yul\":7892:7909   */\n  swap1\n  pop\n    /* \"#utility.yul\":7867:8075   */\n  jump(tag_142)\ntag_144:\n    /* \"#utility.yul\":8103:8109   */\n  dup7\n    /* \"#utility.yul\":8094:8101   */\n  dup4\n    /* \"#utility.yul\":8091:8110   */\n  lt\n    /* \"#utility.yul\":8088:8267   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":8161:8170   */\n  dup5\n    /* \"#utility.yul\":8156:8159   */\n  dup10\n    /* \"#utility.yul\":8152:8171   */\n  add\n    /* \"#utility.yul\":8146:8172   */\n  mload\n    /* \"#utility.yul\":8204:8252   */\n  tag_146\n    /* \"#utility.yul\":8246:8250   */\n  0x1f\n    /* \"#utility.yul\":8238:8244   */\n  dup10\n    /* \"#utility.yul\":8234:8251   */\n  and\n    /* \"#utility.yul\":8223:8232   */\n  dup3\n    /* \"#utility.yul\":8204:8252   */\n  tag_43\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":8196:8202   */\n  dup4\n    /* \"#utility.yul\":8189:8253   */\n  sstore\n    /* \"#utility.yul\":8111:8267   */\n  pop\n    /* \"#utility.yul\":8088:8267   */\ntag_145:\n    /* \"#utility.yul\":8313:8314   */\n  0x01\n    /* \"#utility.yul\":8309:8310   */\n  0x02\n    /* \"#utility.yul\":8301:8307   */\n  dup9\n    /* \"#utility.yul\":8297:8311   */\n  mul\n    /* \"#utility.yul\":8293:8315   */\n  add\n    /* \"#utility.yul\":8287:8291   */\n  dup9\n    /* \"#utility.yul\":8280:8316   */\n  sstore\n    /* \"#utility.yul\":7715:8326   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7678:8565   */\ntag_137:\n  pop\n    /* \"#utility.yul\":7268:8571   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7176:8571   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ERC-721A_flattened.sol\":9604:50056  contract ERC721A is IERC721A {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC-721A_flattened.sol\":9604:50056  contract ERC721A is IERC721A {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      jump(tag_1)\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_16:\n      dup1\n      0x095ea7b3\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC-721A_flattened.sol\":17864:18494  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC-721A_flattened.sol\":18748:18846  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC-721A_flattened.sol\":25069:25283  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC-721A_flattened.sol\":24521:24919  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_5:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"contracts/ERC-721A_flattened.sol\":14603:14920  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC-721A_flattened.sol\":28612:31376  function transferFrom(... */\n    tag_7:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"contracts/ERC-721A_flattened.sol\":31467:31654  function safeTransferFrom(... */\n    tag_8:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"contracts/ERC-721A_flattened.sol\":20100:20250  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC-721A_flattened.sol\":15754:15984  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC-721A_flattened.sol\":18917:19019  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC-721A_flattened.sol\":25610:25841  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      stop\n        /* \"contracts/ERC-721A_flattened.sol\":32235:32631  function safeTransferFrom(... */\n    tag_13:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      stop\n        /* \"contracts/ERC-721A_flattened.sol\":19120:19433  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC-721A_flattened.sol\":25991:26153  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC-721A_flattened.sol\":17864:18494  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_23:\n        /* \"contracts/ERC-721A_flattened.sol\":17949:17953  bool */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":18282:18292  0x01ffc9a7 */\n      0x01ffc9a7\n        /* \"contracts/ERC-721A_flattened.sol\":18267:18292  interfaceId == 0x01ffc9a7 */\n      0xe0\n      shl\n        /* \"contracts/ERC-721A_flattened.sol\":18267:18278  interfaceId */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":18267:18292  interfaceId == 0x01ffc9a7 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC-721A_flattened.sol\":18267:18368  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_90\n      jumpi\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":18358:18368  0x80ac58cd */\n      0x80ac58cd\n        /* \"contracts/ERC-721A_flattened.sol\":18343:18368  interfaceId == 0x80ac58cd */\n      0xe0\n      shl\n        /* \"contracts/ERC-721A_flattened.sol\":18343:18354  interfaceId */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":18343:18368  interfaceId == 0x80ac58cd */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC-721A_flattened.sol\":18267:18368  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_90:\n        /* \"contracts/ERC-721A_flattened.sol\":18267:18444  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_91\n      jumpi\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":18434:18444  0x5b5e139f */\n      0x5b5e139f\n        /* \"contracts/ERC-721A_flattened.sol\":18419:18444  interfaceId == 0x5b5e139f */\n      0xe0\n      shl\n        /* \"contracts/ERC-721A_flattened.sol\":18419:18430  interfaceId */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":18419:18444  interfaceId == 0x5b5e139f */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC-721A_flattened.sol\":18267:18444  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_91:\n        /* \"contracts/ERC-721A_flattened.sol\":18248:18444  return... */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":17864:18494  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":18748:18846  function name() public view virtual override returns (string memory) {... */\n    tag_28:\n        /* \"contracts/ERC-721A_flattened.sol\":18802:18815  string memory */\n      0x60\n        /* \"contracts/ERC-721A_flattened.sol\":18834:18839  _name */\n      0x02\n        /* \"contracts/ERC-721A_flattened.sol\":18827:18839  return _name */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_94\n      jump\t// in\n    tag_95:\n      dup1\n      iszero\n      tag_96\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_97\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_96)\n    tag_97:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_98:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_98\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":18748:18846  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":25069:25283  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_35:\n        /* \"contracts/ERC-721A_flattened.sol\":25145:25152  address */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":25169:25185  _exists(tokenId) */\n      tag_100\n        /* \"contracts/ERC-721A_flattened.sol\":25177:25184  tokenId */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":25169:25176  _exists */\n      tag_101\n        /* \"contracts/ERC-721A_flattened.sol\":25169:25185  _exists(tokenId) */\n      jump\t// in\n    tag_100:\n        /* \"contracts/ERC-721A_flattened.sol\":25164:25228  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_102\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":25194:25228  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      0xcf4700e400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC-721A_flattened.sol\":25164:25228  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_102:\n        /* \"contracts/ERC-721A_flattened.sol\":25246:25261  _tokenApprovals */\n      0x06\n        /* \"contracts/ERC-721A_flattened.sol\":25246:25270  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":25262:25269  tokenId */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":25246:25270  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC-721A_flattened.sol\":25246:25276  _tokenApprovals[tokenId].value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":25239:25276  return _tokenApprovals[tokenId].value */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":25069:25283  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":24521:24919  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_41:\n        /* \"contracts/ERC-721A_flattened.sol\":24609:24622  address owner */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":24625:24641  ownerOf(tokenId) */\n      tag_104\n        /* \"contracts/ERC-721A_flattened.sol\":24633:24640  tokenId */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":24625:24632  ownerOf */\n      tag_57\n        /* \"contracts/ERC-721A_flattened.sol\":24625:24641  ownerOf(tokenId) */\n      jump\t// in\n    tag_104:\n        /* \"contracts/ERC-721A_flattened.sol\":24609:24641  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":24679:24684  owner */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":24656:24684  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":24656:24675  _msgSenderERC721A() */\n      tag_105\n        /* \"contracts/ERC-721A_flattened.sol\":24656:24673  _msgSenderERC721A */\n      tag_106\n        /* \"contracts/ERC-721A_flattened.sol\":24656:24675  _msgSenderERC721A() */\n      jump\t// in\n    tag_105:\n        /* \"contracts/ERC-721A_flattened.sol\":24656:24684  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC-721A_flattened.sol\":24652:24824  if (_msgSenderERC721A() != owner)... */\n      tag_107\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":24703:24747  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_108\n        /* \"contracts/ERC-721A_flattened.sol\":24720:24725  owner */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":24727:24746  _msgSenderERC721A() */\n      tag_109\n        /* \"contracts/ERC-721A_flattened.sol\":24727:24744  _msgSenderERC721A */\n      tag_106\n        /* \"contracts/ERC-721A_flattened.sol\":24727:24746  _msgSenderERC721A() */\n      jump\t// in\n    tag_109:\n        /* \"contracts/ERC-721A_flattened.sol\":24703:24719  isApprovedForAll */\n      tag_87\n        /* \"contracts/ERC-721A_flattened.sol\":24703:24747  isApprovedForAll(owner, _msgSenderERC721A()) */\n      jump\t// in\n    tag_108:\n        /* \"contracts/ERC-721A_flattened.sol\":24698:24824  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_110\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":24774:24809  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0xcfb3b94200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC-721A_flattened.sol\":24698:24824  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n    tag_110:\n        /* \"contracts/ERC-721A_flattened.sol\":24652:24824  if (_msgSenderERC721A() != owner)... */\n    tag_107:\n        /* \"contracts/ERC-721A_flattened.sol\":24867:24869  to */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":24834:24849  _tokenApprovals */\n      0x06\n        /* \"contracts/ERC-721A_flattened.sol\":24834:24858  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":24850:24857  tokenId */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":24834:24858  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC-721A_flattened.sol\":24834:24864  _tokenApprovals[tokenId].value */\n      0x00\n      add\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":24834:24869  _tokenApprovals[tokenId].value = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":24904:24911  tokenId */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":24900:24902  to */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":24884:24912  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":24893:24898  owner */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":24884:24912  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC-721A_flattened.sol\":24599:24919  {... */\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":24521:24919  function approve(address to, uint256 tokenId) public payable virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":14603:14920  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_44:\n        /* \"contracts/ERC-721A_flattened.sol\":14664:14671  uint256 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":14888:14903  _startTokenId() */\n      tag_112\n        /* \"contracts/ERC-721A_flattened.sol\":14888:14901  _startTokenId */\n      tag_113\n        /* \"contracts/ERC-721A_flattened.sol\":14888:14903  _startTokenId() */\n      jump\t// in\n    tag_112:\n        /* \"contracts/ERC-721A_flattened.sol\":14873:14885  _burnCounter */\n      sload(0x01)\n        /* \"contracts/ERC-721A_flattened.sol\":14857:14870  _currentIndex */\n      sload(0x00)\n        /* \"contracts/ERC-721A_flattened.sol\":14857:14885  _currentIndex - _burnCounter */\n      sub\n        /* \"contracts/ERC-721A_flattened.sol\":14857:14903  _currentIndex - _burnCounter - _startTokenId() */\n      sub\n        /* \"contracts/ERC-721A_flattened.sol\":14850:14903  return _currentIndex - _burnCounter - _startTokenId() */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":14603:14920  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":28612:31376  function transferFrom(... */\n    tag_50:\n        /* \"contracts/ERC-721A_flattened.sol\":28749:28776  uint256 prevOwnershipPacked */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":28779:28806  _packedOwnershipOf(tokenId) */\n      tag_115\n        /* \"contracts/ERC-721A_flattened.sol\":28798:28805  tokenId */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":28779:28797  _packedOwnershipOf */\n      tag_116\n        /* \"contracts/ERC-721A_flattened.sol\":28779:28806  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_115:\n        /* \"contracts/ERC-721A_flattened.sol\":28749:28806  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":28862:28866  from */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":28821:28866  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":28837:28856  prevOwnershipPacked */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":28821:28866  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC-721A_flattened.sol\":28817:28903  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n      tag_117\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":28875:28903  TransferFromIncorrectOwner() */\n      mload(0x40)\n      0xa114810000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC-721A_flattened.sol\":28817:28903  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n    tag_117:\n        /* \"contracts/ERC-721A_flattened.sol\":28915:28942  uint256 approvedAddressSlot */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":28944:28967  address approvedAddress */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":28971:29006  _getApprovedSlotAndAddress(tokenId) */\n      tag_118\n        /* \"contracts/ERC-721A_flattened.sol\":28998:29005  tokenId */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":28971:28997  _getApprovedSlotAndAddress */\n      tag_119\n        /* \"contracts/ERC-721A_flattened.sol\":28971:29006  _getApprovedSlotAndAddress(tokenId) */\n      jump\t// in\n    tag_118:\n        /* \"contracts/ERC-721A_flattened.sol\":28914:29006  (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":29103:29171  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      tag_120\n        /* \"contracts/ERC-721A_flattened.sol\":29128:29143  approvedAddress */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":29145:29149  from */\n      dup8\n        /* \"contracts/ERC-721A_flattened.sol\":29151:29170  _msgSenderERC721A() */\n      tag_121\n        /* \"contracts/ERC-721A_flattened.sol\":29151:29168  _msgSenderERC721A */\n      tag_106\n        /* \"contracts/ERC-721A_flattened.sol\":29151:29170  _msgSenderERC721A() */\n      jump\t// in\n    tag_121:\n        /* \"contracts/ERC-721A_flattened.sol\":29103:29127  _isSenderApprovedOrOwner */\n      tag_122\n        /* \"contracts/ERC-721A_flattened.sol\":29103:29171  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_120:\n        /* \"contracts/ERC-721A_flattened.sol\":29098:29277  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_123\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":29190:29233  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_124\n        /* \"contracts/ERC-721A_flattened.sol\":29207:29211  from */\n      dup7\n        /* \"contracts/ERC-721A_flattened.sol\":29213:29232  _msgSenderERC721A() */\n      tag_125\n        /* \"contracts/ERC-721A_flattened.sol\":29213:29230  _msgSenderERC721A */\n      tag_106\n        /* \"contracts/ERC-721A_flattened.sol\":29213:29232  _msgSenderERC721A() */\n      jump\t// in\n    tag_125:\n        /* \"contracts/ERC-721A_flattened.sol\":29190:29206  isApprovedForAll */\n      tag_87\n        /* \"contracts/ERC-721A_flattened.sol\":29190:29233  isApprovedForAll(from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/ERC-721A_flattened.sol\":29185:29277  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n      tag_126\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":29242:29277  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0x59c896be00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC-721A_flattened.sol\":29185:29277  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n    tag_126:\n        /* \"contracts/ERC-721A_flattened.sol\":29098:29277  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n    tag_123:\n        /* \"contracts/ERC-721A_flattened.sol\":29306:29307  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":29292:29308  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":29292:29294  to */\n      dup6\n        /* \"contracts/ERC-721A_flattened.sol\":29292:29308  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC-721A_flattened.sol\":29288:29340  if (to == address(0)) revert TransferToZeroAddress() */\n      tag_127\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":29317:29340  TransferToZeroAddress() */\n      mload(0x40)\n      0xea553b3400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC-721A_flattened.sol\":29288:29340  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_127:\n        /* \"contracts/ERC-721A_flattened.sol\":29351:29394  _beforeTokenTransfers(from, to, tokenId, 1) */\n      tag_128\n        /* \"contracts/ERC-721A_flattened.sol\":29373:29377  from */\n      dup7\n        /* \"contracts/ERC-721A_flattened.sol\":29379:29381  to */\n      dup7\n        /* \"contracts/ERC-721A_flattened.sol\":29383:29390  tokenId */\n      dup7\n        /* \"contracts/ERC-721A_flattened.sol\":29392:29393  1 */\n      0x01\n        /* \"contracts/ERC-721A_flattened.sol\":29351:29372  _beforeTokenTransfers */\n      tag_129\n        /* \"contracts/ERC-721A_flattened.sol\":29351:29394  _beforeTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/ERC-721A_flattened.sol\":29483:29498  approvedAddress */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":29480:29637  if approvedAddress {... */\n      iszero\n      tag_130\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":29621:29622  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":29600:29619  approvedAddressSlot */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":29593:29623  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"contracts/ERC-721A_flattened.sol\":29480:29637  if approvedAddress {... */\n    tag_130:\n        /* \"contracts/ERC-721A_flattened.sol\":30009:30027  _packedAddressData */\n      0x05\n        /* \"contracts/ERC-721A_flattened.sol\":30009:30033  _packedAddressData[from] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":30028:30032  from */\n      dup8\n        /* \"contracts/ERC-721A_flattened.sol\":30009:30033  _packedAddressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":30007:30033  --_packedAddressData[from] */\n      dup2\n      sload\n      0x01\n      swap1\n      sub\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":30077:30095  _packedAddressData */\n      0x05\n        /* \"contracts/ERC-721A_flattened.sol\":30077:30099  _packedAddressData[to] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":30096:30098  to */\n      dup7\n        /* \"contracts/ERC-721A_flattened.sol\":30077:30099  _packedAddressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":30075:30099  ++_packedAddressData[to] */\n      dup2\n      sload\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":30392:30535  _packOwnershipData(... */\n      tag_131\n        /* \"contracts/ERC-721A_flattened.sol\":30428:30430  to */\n      dup6\n        /* \"contracts/ERC-721A_flattened.sol\":30476:30521  _nextExtraData(from, to, prevOwnershipPacked) */\n      tag_132\n        /* \"contracts/ERC-721A_flattened.sol\":30491:30495  from */\n      dup9\n        /* \"contracts/ERC-721A_flattened.sol\":30497:30499  to */\n      dup9\n        /* \"contracts/ERC-721A_flattened.sol\":30501:30520  prevOwnershipPacked */\n      dup8\n        /* \"contracts/ERC-721A_flattened.sol\":30476:30490  _nextExtraData */\n      tag_133\n        /* \"contracts/ERC-721A_flattened.sol\":30476:30521  _nextExtraData(from, to, prevOwnershipPacked) */\n      jump\t// in\n    tag_132:\n        /* \"contracts/ERC-721A_flattened.sol\":11101:11109  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"contracts/ERC-721A_flattened.sol\":30448:30521  _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked) */\n      or\n        /* \"contracts/ERC-721A_flattened.sol\":30392:30410  _packOwnershipData */\n      tag_134\n        /* \"contracts/ERC-721A_flattened.sol\":30392:30535  _packOwnershipData(... */\n      jump\t// in\n    tag_131:\n        /* \"contracts/ERC-721A_flattened.sol\":30363:30380  _packedOwnerships */\n      0x04\n        /* \"contracts/ERC-721A_flattened.sol\":30363:30389  _packedOwnerships[tokenId] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":30381:30388  tokenId */\n      dup7\n        /* \"contracts/ERC-721A_flattened.sol\":30363:30389  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC-721A_flattened.sol\":30363:30535  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":30703:30704  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":11101:11109  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"contracts/ERC-721A_flattened.sol\":30652:30671  prevOwnershipPacked */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":30652:30699  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":30652:30704  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0 */\n      sub\n        /* \"contracts/ERC-721A_flattened.sol\":30648:31265  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_135\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":30724:30743  uint256 nextTokenId */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":30756:30757  1 */\n      0x01\n        /* \"contracts/ERC-721A_flattened.sol\":30746:30753  tokenId */\n      dup6\n        /* \"contracts/ERC-721A_flattened.sol\":30746:30757  tokenId + 1 */\n      add\n        /* \"contracts/ERC-721A_flattened.sol\":30724:30757  uint256 nextTokenId = tokenId + 1 */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":30911:30912  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":30877:30894  _packedOwnerships */\n      0x04\n        /* \"contracts/ERC-721A_flattened.sol\":30877:30907  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":30895:30906  nextTokenId */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":30877:30907  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC-721A_flattened.sol\":30877:30912  _packedOwnerships[nextTokenId] == 0 */\n      sub\n        /* \"contracts/ERC-721A_flattened.sol\":30873:31251  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_136\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":31013:31026  _currentIndex */\n      sload(0x00)\n        /* \"contracts/ERC-721A_flattened.sol\":30998:31009  nextTokenId */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":30998:31026  nextTokenId != _currentIndex */\n      eq\n        /* \"contracts/ERC-721A_flattened.sol\":30994:31233  if (nextTokenId != _currentIndex) {... */\n      tag_137\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":31191:31210  prevOwnershipPacked */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":31158:31175  _packedOwnerships */\n      0x04\n        /* \"contracts/ERC-721A_flattened.sol\":31158:31188  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":31176:31187  nextTokenId */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":31158:31188  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC-721A_flattened.sol\":31158:31210  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":30994:31233  if (nextTokenId != _currentIndex) {... */\n    tag_137:\n        /* \"contracts/ERC-721A_flattened.sol\":30873:31251  if (_packedOwnerships[nextTokenId] == 0) {... */\n    tag_136:\n        /* \"contracts/ERC-721A_flattened.sol\":30706:31265  {... */\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":30648:31265  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_135:\n        /* \"contracts/ERC-721A_flattened.sol\":31309:31316  tokenId */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":31305:31307  to */\n      dup6\n        /* \"contracts/ERC-721A_flattened.sol\":31290:31317  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":31299:31303  from */\n      dup8\n        /* \"contracts/ERC-721A_flattened.sol\":31290:31317  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC-721A_flattened.sol\":31327:31369  _afterTokenTransfers(from, to, tokenId, 1) */\n      tag_138\n        /* \"contracts/ERC-721A_flattened.sol\":31348:31352  from */\n      dup7\n        /* \"contracts/ERC-721A_flattened.sol\":31354:31356  to */\n      dup7\n        /* \"contracts/ERC-721A_flattened.sol\":31358:31365  tokenId */\n      dup7\n        /* \"contracts/ERC-721A_flattened.sol\":31367:31368  1 */\n      0x01\n        /* \"contracts/ERC-721A_flattened.sol\":31327:31347  _afterTokenTransfers */\n      tag_139\n        /* \"contracts/ERC-721A_flattened.sol\":31327:31369  _afterTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_138:\n        /* \"contracts/ERC-721A_flattened.sol\":28739:31376  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":28612:31376  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":31467:31654  function safeTransferFrom(... */\n    tag_53:\n        /* \"contracts/ERC-721A_flattened.sol\":31608:31647  safeTransferFrom(from, to, tokenId, '') */\n      tag_141\n        /* \"contracts/ERC-721A_flattened.sol\":31625:31629  from */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":31631:31633  to */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":31635:31642  tokenId */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":31608:31647  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":31608:31624  safeTransferFrom */\n      tag_77\n        /* \"contracts/ERC-721A_flattened.sol\":31608:31647  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_141:\n        /* \"contracts/ERC-721A_flattened.sol\":31467:31654  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":20100:20250  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_57:\n        /* \"contracts/ERC-721A_flattened.sol\":20172:20179  address */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":20214:20241  _packedOwnershipOf(tokenId) */\n      tag_143\n        /* \"contracts/ERC-721A_flattened.sol\":20233:20240  tokenId */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":20214:20232  _packedOwnershipOf */\n      tag_116\n        /* \"contracts/ERC-721A_flattened.sol\":20214:20241  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_143:\n        /* \"contracts/ERC-721A_flattened.sol\":20191:20243  return address(uint160(_packedOwnershipOf(tokenId))) */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":20100:20250  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":15754:15984  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_63:\n        /* \"contracts/ERC-721A_flattened.sol\":15826:15833  uint256 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":15866:15867  0 */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":15849:15868  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":15849:15854  owner */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":15849:15868  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC-721A_flattened.sol\":15845:15905  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      tag_145\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":15877:15905  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      0x8f4eb60400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC-721A_flattened.sol\":15845:15905  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_145:\n        /* \"contracts/ERC-721A_flattened.sol\":10069:10082  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"contracts/ERC-721A_flattened.sol\":15922:15940  _packedAddressData */\n      0x05\n        /* \"contracts/ERC-721A_flattened.sol\":15922:15947  _packedAddressData[owner] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":15941:15946  owner */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":15922:15947  _packedAddressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC-721A_flattened.sol\":15922:15977  _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":15915:15977  return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":15754:15984  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":18917:19019  function symbol() public view virtual override returns (string memory) {... */\n    tag_67:\n        /* \"contracts/ERC-721A_flattened.sol\":18973:18986  string memory */\n      0x60\n        /* \"contracts/ERC-721A_flattened.sol\":19005:19012  _symbol */\n      0x03\n        /* \"contracts/ERC-721A_flattened.sol\":18998:19012  return _symbol */\n      dup1\n      sload\n      tag_147\n      swap1\n      tag_94\n      jump\t// in\n    tag_147:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_148\n      swap1\n      tag_94\n      jump\t// in\n    tag_148:\n      dup1\n      iszero\n      tag_149\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_150\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_149)\n    tag_150:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_151:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_151\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_149:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":18917:19019  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":25610:25841  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_73:\n        /* \"contracts/ERC-721A_flattened.sol\":25756:25764  approved */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":25704:25722  _operatorApprovals */\n      0x07\n        /* \"contracts/ERC-721A_flattened.sol\":25704:25743  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":25723:25742  _msgSenderERC721A() */\n      tag_153\n        /* \"contracts/ERC-721A_flattened.sol\":25723:25740  _msgSenderERC721A */\n      tag_106\n        /* \"contracts/ERC-721A_flattened.sol\":25723:25742  _msgSenderERC721A() */\n      jump\t// in\n    tag_153:\n        /* \"contracts/ERC-721A_flattened.sol\":25704:25743  _operatorApprovals[_msgSenderERC721A()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC-721A_flattened.sol\":25704:25753  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":25744:25752  operator */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":25704:25753  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":25704:25764  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":25815:25823  operator */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":25779:25834  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":25794:25813  _msgSenderERC721A() */\n      tag_154\n        /* \"contracts/ERC-721A_flattened.sol\":25794:25811  _msgSenderERC721A */\n      tag_106\n        /* \"contracts/ERC-721A_flattened.sol\":25794:25813  _msgSenderERC721A() */\n      jump\t// in\n    tag_154:\n        /* \"contracts/ERC-721A_flattened.sol\":25779:25834  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"contracts/ERC-721A_flattened.sol\":25825:25833  approved */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":25779:25834  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      tag_155\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC-721A_flattened.sol\":25610:25841  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":32235:32631  function safeTransferFrom(... */\n    tag_77:\n        /* \"contracts/ERC-721A_flattened.sol\":32404:32435  transferFrom(from, to, tokenId) */\n      tag_157\n        /* \"contracts/ERC-721A_flattened.sol\":32417:32421  from */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":32423:32425  to */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":32427:32434  tokenId */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":32404:32416  transferFrom */\n      tag_50\n        /* \"contracts/ERC-721A_flattened.sol\":32404:32435  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_157:\n        /* \"contracts/ERC-721A_flattened.sol\":32467:32468  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":32449:32451  to */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":32449:32463  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"contracts/ERC-721A_flattened.sol\":32449:32468  to.code.length != 0 */\n      eq\n        /* \"contracts/ERC-721A_flattened.sol\":32445:32625  if (to.code.length != 0)... */\n      tag_158\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":32487:32543  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_159\n        /* \"contracts/ERC-721A_flattened.sol\":32518:32522  from */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":32524:32526  to */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":32528:32535  tokenId */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":32537:32542  _data */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":32487:32517  _checkContractOnERC721Received */\n      tag_160\n        /* \"contracts/ERC-721A_flattened.sol\":32487:32543  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_159:\n        /* \"contracts/ERC-721A_flattened.sol\":32482:32625  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_161\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":32570:32610  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC-721A_flattened.sol\":32482:32625  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_161:\n        /* \"contracts/ERC-721A_flattened.sol\":32445:32625  if (to.code.length != 0)... */\n    tag_158:\n        /* \"contracts/ERC-721A_flattened.sol\":32235:32631  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":19120:19433  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_81:\n        /* \"contracts/ERC-721A_flattened.sol\":19193:19206  string memory */\n      0x60\n        /* \"contracts/ERC-721A_flattened.sol\":19223:19239  _exists(tokenId) */\n      tag_163\n        /* \"contracts/ERC-721A_flattened.sol\":19231:19238  tokenId */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":19223:19230  _exists */\n      tag_101\n        /* \"contracts/ERC-721A_flattened.sol\":19223:19239  _exists(tokenId) */\n      jump\t// in\n    tag_163:\n        /* \"contracts/ERC-721A_flattened.sol\":19218:19277  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_164\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":19248:19277  URIQueryForNonexistentToken() */\n      mload(0x40)\n      0xa14c4b5000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC-721A_flattened.sol\":19218:19277  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_164:\n        /* \"contracts/ERC-721A_flattened.sol\":19288:19309  string memory baseURI */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":19312:19322  _baseURI() */\n      tag_165\n        /* \"contracts/ERC-721A_flattened.sol\":19312:19320  _baseURI */\n      tag_166\n        /* \"contracts/ERC-721A_flattened.sol\":19312:19322  _baseURI() */\n      jump\t// in\n    tag_165:\n        /* \"contracts/ERC-721A_flattened.sol\":19288:19322  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":19364:19365  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":19345:19352  baseURI */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":19339:19360  bytes(baseURI).length */\n      mload\n        /* \"contracts/ERC-721A_flattened.sol\":19339:19365  bytes(baseURI).length != 0 */\n      sub\n        /* \"contracts/ERC-721A_flattened.sol\":19339:19426  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_167\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_168)\n    tag_167:\n        /* \"contracts/ERC-721A_flattened.sol\":19392:19399  baseURI */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":19401:19419  _toString(tokenId) */\n      tag_169\n        /* \"contracts/ERC-721A_flattened.sol\":19411:19418  tokenId */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":19401:19410  _toString */\n      tag_170\n        /* \"contracts/ERC-721A_flattened.sol\":19401:19419  _toString(tokenId) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/ERC-721A_flattened.sol\":19375:19420  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_171\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/ERC-721A_flattened.sol\":19339:19426  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_168:\n        /* \"contracts/ERC-721A_flattened.sol\":19332:19426  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":19120:19433  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":25991:26153  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_87:\n        /* \"contracts/ERC-721A_flattened.sol\":26088:26092  bool */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":26111:26129  _operatorApprovals */\n      0x07\n        /* \"contracts/ERC-721A_flattened.sol\":26111:26136  _operatorApprovals[owner] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":26130:26135  owner */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":26111:26136  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC-721A_flattened.sol\":26111:26146  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":26137:26145  operator */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":26111:26146  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":26104:26146  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":25991:26153  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":26402:26679  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_101:\n        /* \"contracts/ERC-721A_flattened.sol\":26467:26471  bool */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":26521:26528  tokenId */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":26502:26517  _startTokenId() */\n      tag_175\n        /* \"contracts/ERC-721A_flattened.sol\":26502:26515  _startTokenId */\n      tag_113\n        /* \"contracts/ERC-721A_flattened.sol\":26502:26517  _startTokenId() */\n      jump\t// in\n    tag_175:\n        /* \"contracts/ERC-721A_flattened.sol\":26502:26528  _startTokenId() <= tokenId */\n      gt\n      iszero\n        /* \"contracts/ERC-721A_flattened.sol\":26502:26567  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_176\n      jumpi\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":26554:26567  _currentIndex */\n      sload(0x00)\n        /* \"contracts/ERC-721A_flattened.sol\":26544:26551  tokenId */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":26544:26567  tokenId < _currentIndex */\n      lt\n        /* \"contracts/ERC-721A_flattened.sol\":26502:26567  _startTokenId() <= tokenId &&... */\n    tag_176:\n        /* \"contracts/ERC-721A_flattened.sol\":26502:26653  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_177\n      jumpi\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":26652:26653  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":10827:10835  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"contracts/ERC-721A_flattened.sol\":26604:26621  _packedOwnerships */\n      0x04\n        /* \"contracts/ERC-721A_flattened.sol\":26604:26630  _packedOwnerships[tokenId] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":26622:26629  tokenId */\n      dup6\n        /* \"contracts/ERC-721A_flattened.sol\":26604:26630  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC-721A_flattened.sol\":26604:26648  _packedOwnerships[tokenId] & _BITMASK_BURNED */\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":26604:26653  _packedOwnerships[tokenId] & _BITMASK_BURNED == 0 */\n      eq\n        /* \"contracts/ERC-721A_flattened.sol\":26502:26653  _startTokenId() <= tokenId &&... */\n    tag_177:\n        /* \"contracts/ERC-721A_flattened.sol\":26483:26653  return... */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":26402:26679  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":48146:48249  function _msgSenderERC721A() internal view virtual returns (address) {... */\n    tag_106:\n        /* \"contracts/ERC-721A_flattened.sol\":48206:48213  address */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":48232:48242  msg.sender */\n      caller\n        /* \"contracts/ERC-721A_flattened.sol\":48225:48242  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":48146:48249  function _msgSenderERC721A() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":14135:14225  function _startTokenId() internal view virtual returns (uint256) {... */\n    tag_113:\n        /* \"contracts/ERC-721A_flattened.sol\":14191:14198  uint256 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":14135:14225  function _startTokenId() internal view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":21224:22473  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_116:\n        /* \"contracts/ERC-721A_flattened.sol\":21291:21298  uint256 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":21310:21322  uint256 curr */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":21325:21332  tokenId */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":21310:21332  uint256 curr = tokenId */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":21390:21394  curr */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":21371:21386  _startTokenId() */\n      tag_181\n        /* \"contracts/ERC-721A_flattened.sol\":21371:21384  _startTokenId */\n      tag_113\n        /* \"contracts/ERC-721A_flattened.sol\":21371:21386  _startTokenId() */\n      jump\t// in\n    tag_181:\n        /* \"contracts/ERC-721A_flattened.sol\":21371:21394  _startTokenId() <= curr */\n      gt\n        /* \"contracts/ERC-721A_flattened.sol\":21367:22409  if (_startTokenId() <= curr)... */\n      tag_182\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":21423:21436  _currentIndex */\n      sload(0x00)\n        /* \"contracts/ERC-721A_flattened.sol\":21416:21420  curr */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":21416:21436  curr < _currentIndex */\n      lt\n        /* \"contracts/ERC-721A_flattened.sol\":21412:22409  if (curr < _currentIndex) {... */\n      iszero\n      tag_183\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":21460:21474  uint256 packed */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":21477:21494  _packedOwnerships */\n      0x04\n        /* \"contracts/ERC-721A_flattened.sol\":21477:21500  _packedOwnerships[curr] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":21495:21499  curr */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":21477:21500  _packedOwnerships[curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC-721A_flattened.sol\":21460:21500  uint256 packed = _packedOwnerships[curr] */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":21592:21593  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":10827:10835  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"contracts/ERC-721A_flattened.sol\":21564:21570  packed */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":21564:21588  packed & _BITMASK_BURNED */\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":21564:21593  packed & _BITMASK_BURNED == 0 */\n      sub\n        /* \"contracts/ERC-721A_flattened.sol\":21560:22391  if (packed & _BITMASK_BURNED == 0) {... */\n      tag_184\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":22219:22330  while (packed == 0) {... */\n    tag_185:\n        /* \"contracts/ERC-721A_flattened.sol\":22236:22237  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":22226:22232  packed */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":22226:22237  packed == 0 */\n      sub\n        /* \"contracts/ERC-721A_flattened.sol\":22219:22330  while (packed == 0) {... */\n      tag_186\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":22278:22295  _packedOwnerships */\n      0x04\n        /* \"contracts/ERC-721A_flattened.sol\":22278:22303  _packedOwnerships[--curr] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":22296:22302  --curr */\n      dup4\n      0x01\n      swap1\n      sub\n      swap4\n      pop\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":22278:22303  _packedOwnerships[--curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC-721A_flattened.sol\":22269:22303  packed = _packedOwnerships[--curr] */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":22219:22330  while (packed == 0) {... */\n      jump(tag_185)\n    tag_186:\n        /* \"contracts/ERC-721A_flattened.sol\":22362:22368  packed */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":22355:22368  return packed */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_180)\n        /* \"contracts/ERC-721A_flattened.sol\":21560:22391  if (packed & _BITMASK_BURNED == 0) {... */\n    tag_184:\n        /* \"contracts/ERC-721A_flattened.sol\":21438:22409  {... */\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":21412:22409  if (curr < _currentIndex) {... */\n    tag_183:\n        /* \"contracts/ERC-721A_flattened.sol\":21367:22409  if (_startTokenId() <= curr)... */\n    tag_182:\n        /* \"contracts/ERC-721A_flattened.sol\":22435:22466  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      0xdf2d9b4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC-721A_flattened.sol\":21224:22473  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_180:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":27537:28011  function _getApprovedSlotAndAddress(uint256 tokenId)... */\n    tag_119:\n        /* \"contracts/ERC-721A_flattened.sol\":27636:27663  uint256 approvedAddressSlot */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":27665:27688  address approvedAddress */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":27704:27742  TokenApprovalRef storage tokenApproval */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":27745:27760  _tokenApprovals */\n      0x06\n        /* \"contracts/ERC-721A_flattened.sol\":27745:27769  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":27761:27768  tokenId */\n      dup6\n        /* \"contracts/ERC-721A_flattened.sol\":27745:27769  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC-721A_flattened.sol\":27704:27769  TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":27919:27937  tokenApproval.slot */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":27896:27937  approvedAddressSlot := tokenApproval.slot */\n      swap3\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":27975:27994  approvedAddressSlot */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":27969:27995  sload(approvedAddressSlot) */\n      sload\n        /* \"contracts/ERC-721A_flattened.sol\":27950:27995  approvedAddress := sload(approvedAddressSlot) */\n      swap2\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":27882:28005  {... */\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":27537:28011  function _getApprovedSlotAndAddress(uint256 tokenId)... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":26783:27429  function _isSenderApprovedOrOwner(... */\n    tag_122:\n        /* \"contracts/ERC-721A_flattened.sol\":26928:26939  bool result */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":27090:27106  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ERC-721A_flattened.sol\":27083:27088  owner */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":27079:27107  and(owner, _BITMASK_ADDRESS) */\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":27070:27107  owner := and(owner, _BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":27248:27264  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ERC-721A_flattened.sol\":27237:27246  msgSender */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":27233:27265  and(msgSender, _BITMASK_ADDRESS) */\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":27220:27265  msgSender := and(msgSender, _BITMASK_ADDRESS) */\n      swap2\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":27396:27411  approvedAddress */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":27385:27394  msgSender */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":27382:27412  eq(msgSender, approvedAddress) */\n      eq\n        /* \"contracts/ERC-721A_flattened.sol\":27374:27379  owner */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":27363:27372  msgSender */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":27360:27380  eq(msgSender, owner) */\n      eq\n        /* \"contracts/ERC-721A_flattened.sol\":27357:27413  or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      or\n        /* \"contracts/ERC-721A_flattened.sol\":27347:27413  result := or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":26783:27429  function _isSenderApprovedOrOwner(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":33275:33429  function _beforeTokenTransfers(... */\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":47473:47777  function _nextExtraData(... */\n    tag_133:\n        /* \"contracts/ERC-721A_flattened.sol\":47604:47611  uint256 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":47623:47639  uint24 extraData */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":11222:11225  232 */\n      0xe8\n        /* \"contracts/ERC-721A_flattened.sol\":47649:47668  prevOwnershipPacked */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":47649:47690  prevOwnershipPacked >> _BITPOS_EXTRA_DATA */\n      swap1\n      shr\n        /* \"contracts/ERC-721A_flattened.sol\":47623:47691  uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA) */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":11222:11225  232 */\n      0xe8\n        /* \"contracts/ERC-721A_flattened.sol\":47716:47747  _extraData(from, to, extraData) */\n      tag_191\n        /* \"contracts/ERC-721A_flattened.sol\":47727:47731  from */\n      dup7\n        /* \"contracts/ERC-721A_flattened.sol\":47733:47735  to */\n      dup7\n        /* \"contracts/ERC-721A_flattened.sol\":47737:47746  extraData */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":47716:47726  _extraData */\n      tag_192\n        /* \"contracts/ERC-721A_flattened.sol\":47716:47747  _extraData(from, to, extraData) */\n      jump\t// in\n    tag_191:\n        /* \"contracts/ERC-721A_flattened.sol\":47708:47748  uint256(_extraData(from, to, extraData)) */\n      0xffffff\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":47708:47770  uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA */\n      swap1\n      shl\n        /* \"contracts/ERC-721A_flattened.sol\":47701:47770  return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":47473:47777  function _nextExtraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":23006:23449  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n    tag_134:\n        /* \"contracts/ERC-721A_flattened.sol\":23086:23100  uint256 result */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":23251:23267  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ERC-721A_flattened.sol\":23244:23249  owner */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":23240:23268  and(owner, _BITMASK_ADDRESS) */\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":23231:23268  owner := and(owner, _BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":23426:23431  flags */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":23412:23423  timestamp() */\n      timestamp\n        /* \"contracts/ERC-721A_flattened.sol\":23387:23410  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"contracts/ERC-721A_flattened.sol\":23383:23424  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"contracts/ERC-721A_flattened.sol\":23380:23432  or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags) */\n      or\n        /* \"contracts/ERC-721A_flattened.sol\":23373:23378  owner */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":23370:23433  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n        /* \"contracts/ERC-721A_flattened.sol\":23360:23433  result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":23006:23449  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":34076:34229  function _afterTokenTransfers(... */\n    tag_139:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":34657:35354  function _checkContractOnERC721Received(... */\n    tag_160:\n        /* \"contracts/ERC-721A_flattened.sol\":34815:34819  bool */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":34860:34862  to */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":34835:34880  ERC721A__IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"contracts/ERC-721A_flattened.sol\":34881:34900  _msgSenderERC721A() */\n      tag_196\n        /* \"contracts/ERC-721A_flattened.sol\":34881:34898  _msgSenderERC721A */\n      tag_106\n        /* \"contracts/ERC-721A_flattened.sol\":34881:34900  _msgSenderERC721A() */\n      jump\t// in\n    tag_196:\n        /* \"contracts/ERC-721A_flattened.sol\":34902:34906  from */\n      dup8\n        /* \"contracts/ERC-721A_flattened.sol\":34908:34915  tokenId */\n      dup7\n        /* \"contracts/ERC-721A_flattened.sol\":34917:34922  _data */\n      dup7\n        /* \"contracts/ERC-721A_flattened.sol\":34835:34923  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_199\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_200\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      0x01\n    tag_199:\n        /* \"contracts/ERC-721A_flattened.sol\":34831:35348  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_202\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_207\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_206)\n    tag_207:\n      0x60\n      swap2\n      pop\n    tag_206:\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":35130:35131  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":35113:35119  reason */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":35113:35126  reason.length */\n      mload\n        /* \"contracts/ERC-721A_flattened.sol\":35113:35131  reason.length == 0 */\n      sub\n        /* \"contracts/ERC-721A_flattened.sol\":35109:35338  if (reason.length == 0) {... */\n      tag_208\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":35158:35198  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC-721A_flattened.sol\":35109:35338  if (reason.length == 0) {... */\n    tag_208:\n        /* \"contracts/ERC-721A_flattened.sol\":35298:35304  reason */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":35292:35305  mload(reason) */\n      mload\n        /* \"contracts/ERC-721A_flattened.sol\":35283:35289  reason */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":35279:35281  32 */\n      0x20\n        /* \"contracts/ERC-721A_flattened.sol\":35275:35290  add(32, reason) */\n      add\n        /* \"contracts/ERC-721A_flattened.sol\":35268:35306  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"contracts/ERC-721A_flattened.sol\":34831:35348  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_202:\n        /* \"contracts/ERC-721A_flattened.sol\":35001:35055  ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"contracts/ERC-721A_flattened.sol\":34991:35055  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":34991:34997  retval */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":34991:35055  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC-721A_flattened.sol\":34984:35055  return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":34657:35354  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":19678:19770  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_166:\n        /* \"contracts/ERC-721A_flattened.sol\":19729:19742  string memory */\n      0x60\n        /* \"contracts/ERC-721A_flattened.sol\":19754:19763  return '' */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":19678:19770  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":48346:50054  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n    tag_170:\n        /* \"contracts/ERC-721A_flattened.sol\":48411:48428  string memory str */\n      0x60\n        /* \"contracts/ERC-721A_flattened.sol\":48839:48843  0xa0 */\n      0xa0\n        /* \"contracts/ERC-721A_flattened.sol\":48832:48836  0x40 */\n      0x40\n        /* \"contracts/ERC-721A_flattened.sol\":48826:48837  mload(0x40) */\n      mload\n        /* \"contracts/ERC-721A_flattened.sol\":48822:48844  add(mload(0x40), 0xa0) */\n      add\n        /* \"contracts/ERC-721A_flattened.sol\":48929:48930  m */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":48923:48927  0x40 */\n      0x40\n        /* \"contracts/ERC-721A_flattened.sol\":48916:48931  mstore(0x40, m) */\n      mstore\n        /* \"contracts/ERC-721A_flattened.sol\":49002:49006  0x20 */\n      0x20\n        /* \"contracts/ERC-721A_flattened.sol\":48999:49000  m */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":48995:49007  sub(m, 0x20) */\n      sub\n        /* \"contracts/ERC-721A_flattened.sol\":48988:49007  str := sub(m, 0x20) */\n      swap2\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":49082:49083  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":49077:49080  str */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":49070:49084  mstore(str, 0) */\n      mstore\n        /* \"contracts/ERC-721A_flattened.sol\":49183:49186  str */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":49417:49422  value */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":49399:49818  for { let temp := value } 1 {} {... */\n    tag_213:\n        /* \"contracts/ERC-721A_flattened.sol\":49425:49426  1 */\n      0x01\n        /* \"contracts/ERC-721A_flattened.sol\":49399:49818  for { let temp := value } 1 {} {... */\n      iszero\n      tag_215\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":49464:49465  1 */\n      0x01\n        /* \"contracts/ERC-721A_flattened.sol\":49459:49462  str */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":49455:49466  sub(str, 1) */\n      sub\n        /* \"contracts/ERC-721A_flattened.sol\":49448:49466  str := sub(str, 1) */\n      swap4\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":49632:49634  10 */\n      0x0a\n        /* \"contracts/ERC-721A_flattened.sol\":49626:49630  temp */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":49622:49635  mod(temp, 10) */\n      mod\n        /* \"contracts/ERC-721A_flattened.sol\":49618:49620  48 */\n      0x30\n        /* \"contracts/ERC-721A_flattened.sol\":49614:49636  add(48, mod(temp, 10)) */\n      add\n        /* \"contracts/ERC-721A_flattened.sol\":49609:49612  str */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":49601:49637  mstore8(str, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"contracts/ERC-721A_flattened.sol\":49724:49726  10 */\n      0x0a\n        /* \"contracts/ERC-721A_flattened.sol\":49718:49722  temp */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":49714:49727  div(temp, 10) */\n      div\n        /* \"contracts/ERC-721A_flattened.sol\":49706:49727  temp := div(temp, 10) */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":49789:49793  temp */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":49399:49818  for { let temp := value } 1 {} {... */\n      tag_213\n        /* \"contracts/ERC-721A_flattened.sol\":49779:49804  if iszero(temp) { break } */\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":49399:49818  for { let temp := value } 1 {} {... */\n    tag_215:\n        /* \"contracts/ERC-721A_flattened.sol\":49403:49424  { let temp := value } */\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":49855:49858  str */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":49850:49853  end */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":49846:49859  sub(end, str) */\n      sub\n        /* \"contracts/ERC-721A_flattened.sol\":49968:49972  0x20 */\n      0x20\n        /* \"contracts/ERC-721A_flattened.sol\":49963:49966  str */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":49959:49973  sub(str, 0x20) */\n      sub\n        /* \"contracts/ERC-721A_flattened.sol\":49952:49973  str := sub(str, 0x20) */\n      swap4\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":50031:50037  length */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":50026:50029  str */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":50019:50038  mstore(str, length) */\n      mstore\n        /* \"contracts/ERC-721A_flattened.sol\":48449:50048  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":48346:50054  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":47184:47327  function _extraData(... */\n    tag_192:\n        /* \"contracts/ERC-721A_flattened.sol\":47317:47323  uint24 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":47184:47327  function _extraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_218:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_219:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_220:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_221:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_222:\n        /* \"#utility.yul\":561:584   */\n      tag_264\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_221\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_265\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_265:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_223:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_267\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_222\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_22:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_270\n      tag_219\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":833:952   */\n    tag_269:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_271\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_223\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_224:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_225:\n        /* \"#utility.yul\":1268:1289   */\n      tag_274\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_224\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_25:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_276\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_225\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_226:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_227:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_228:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_280:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_280)\n    tag_282:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_229:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_230:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_285\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_226\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":2329:2400   */\n      tag_286\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_227\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_287\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_228\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":2499:2528   */\n      tag_288\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_229\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_30:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_290\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_230\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_231:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_232:\n        /* \"#utility.yul\":3016:3040   */\n      tag_293\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_231\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_294\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_294:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_233:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_296\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_232\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_34:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_299\n      tag_219\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":3292:3411   */\n    tag_298:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_300\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_233\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_234:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_235:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_303\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_234\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_236:\n        /* \"#utility.yul\":3872:3896   */\n      tag_305\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_235\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_37:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_307\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_236\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_237:\n        /* \"#utility.yul\":4210:4234   */\n      tag_309\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_235\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_310\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_310:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_238:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_312\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_237\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_40:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_315\n      tag_219\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":4503:4622   */\n    tag_314:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_316\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_238\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_317\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_233\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5008   */\n    tag_239:\n        /* \"#utility.yul\":4977:5001   */\n      tag_319\n        /* \"#utility.yul\":4995:5000   */\n      dup2\n        /* \"#utility.yul\":4977:5001   */\n      tag_231\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":4972:4975   */\n      dup3\n        /* \"#utility.yul\":4965:5002   */\n      mstore\n        /* \"#utility.yul\":4890:5008   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5014:5236   */\n    tag_46:\n        /* \"#utility.yul\":5107:5111   */\n      0x00\n        /* \"#utility.yul\":5145:5147   */\n      0x20\n        /* \"#utility.yul\":5134:5143   */\n      dup3\n        /* \"#utility.yul\":5130:5148   */\n      add\n        /* \"#utility.yul\":5122:5148   */\n      swap1\n      pop\n        /* \"#utility.yul\":5158:5229   */\n      tag_321\n        /* \"#utility.yul\":5226:5227   */\n      0x00\n        /* \"#utility.yul\":5215:5224   */\n      dup4\n        /* \"#utility.yul\":5211:5228   */\n      add\n        /* \"#utility.yul\":5202:5208   */\n      dup5\n        /* \"#utility.yul\":5158:5229   */\n      tag_239\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":5014:5236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5242:5861   */\n    tag_49:\n        /* \"#utility.yul\":5319:5325   */\n      0x00\n        /* \"#utility.yul\":5327:5333   */\n      dup1\n        /* \"#utility.yul\":5335:5341   */\n      0x00\n        /* \"#utility.yul\":5384:5386   */\n      0x60\n        /* \"#utility.yul\":5372:5381   */\n      dup5\n        /* \"#utility.yul\":5363:5370   */\n      dup7\n        /* \"#utility.yul\":5359:5382   */\n      sub\n        /* \"#utility.yul\":5355:5387   */\n      slt\n        /* \"#utility.yul\":5352:5471   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":5390:5469   */\n      tag_324\n      tag_219\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":5352:5471   */\n    tag_323:\n        /* \"#utility.yul\":5510:5511   */\n      0x00\n        /* \"#utility.yul\":5535:5588   */\n      tag_325\n        /* \"#utility.yul\":5580:5587   */\n      dup7\n        /* \"#utility.yul\":5571:5577   */\n      dup3\n        /* \"#utility.yul\":5560:5569   */\n      dup8\n        /* \"#utility.yul\":5556:5578   */\n      add\n        /* \"#utility.yul\":5535:5588   */\n      tag_238\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":5525:5588   */\n      swap4\n      pop\n        /* \"#utility.yul\":5481:5598   */\n      pop\n        /* \"#utility.yul\":5637:5639   */\n      0x20\n        /* \"#utility.yul\":5663:5716   */\n      tag_326\n        /* \"#utility.yul\":5708:5715   */\n      dup7\n        /* \"#utility.yul\":5699:5705   */\n      dup3\n        /* \"#utility.yul\":5688:5697   */\n      dup8\n        /* \"#utility.yul\":5684:5706   */\n      add\n        /* \"#utility.yul\":5663:5716   */\n      tag_238\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":5653:5716   */\n      swap3\n      pop\n        /* \"#utility.yul\":5608:5726   */\n      pop\n        /* \"#utility.yul\":5765:5767   */\n      0x40\n        /* \"#utility.yul\":5791:5844   */\n      tag_327\n        /* \"#utility.yul\":5836:5843   */\n      dup7\n        /* \"#utility.yul\":5827:5833   */\n      dup3\n        /* \"#utility.yul\":5816:5825   */\n      dup8\n        /* \"#utility.yul\":5812:5834   */\n      add\n        /* \"#utility.yul\":5791:5844   */\n      tag_233\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":5781:5844   */\n      swap2\n      pop\n        /* \"#utility.yul\":5736:5854   */\n      pop\n        /* \"#utility.yul\":5242:5861   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5867:6196   */\n    tag_62:\n        /* \"#utility.yul\":5926:5932   */\n      0x00\n        /* \"#utility.yul\":5975:5977   */\n      0x20\n        /* \"#utility.yul\":5963:5972   */\n      dup3\n        /* \"#utility.yul\":5954:5961   */\n      dup5\n        /* \"#utility.yul\":5950:5973   */\n      sub\n        /* \"#utility.yul\":5946:5978   */\n      slt\n        /* \"#utility.yul\":5943:6062   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":5981:6060   */\n      tag_330\n      tag_219\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":5943:6062   */\n    tag_329:\n        /* \"#utility.yul\":6101:6102   */\n      0x00\n        /* \"#utility.yul\":6126:6179   */\n      tag_331\n        /* \"#utility.yul\":6171:6178   */\n      dup5\n        /* \"#utility.yul\":6162:6168   */\n      dup3\n        /* \"#utility.yul\":6151:6160   */\n      dup6\n        /* \"#utility.yul\":6147:6169   */\n      add\n        /* \"#utility.yul\":6126:6179   */\n      tag_238\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":6116:6179   */\n      swap2\n      pop\n        /* \"#utility.yul\":6072:6189   */\n      pop\n        /* \"#utility.yul\":5867:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6318   */\n    tag_240:\n        /* \"#utility.yul\":6272:6293   */\n      tag_333\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6272:6293   */\n      tag_224\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":6265:6270   */\n      dup2\n        /* \"#utility.yul\":6262:6294   */\n      eq\n        /* \"#utility.yul\":6252:6312   */\n      tag_334\n      jumpi\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6305:6306   */\n      dup1\n        /* \"#utility.yul\":6298:6310   */\n      revert\n        /* \"#utility.yul\":6252:6312   */\n    tag_334:\n        /* \"#utility.yul\":6202:6318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6324:6457   */\n    tag_241:\n        /* \"#utility.yul\":6367:6372   */\n      0x00\n        /* \"#utility.yul\":6405:6411   */\n      dup2\n        /* \"#utility.yul\":6392:6412   */\n      calldataload\n        /* \"#utility.yul\":6383:6412   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6451   */\n      tag_336\n        /* \"#utility.yul\":6445:6450   */\n      dup2\n        /* \"#utility.yul\":6421:6451   */\n      tag_240\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":6324:6457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6931   */\n    tag_72:\n        /* \"#utility.yul\":6528:6534   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup1\n        /* \"#utility.yul\":6585:6587   */\n      0x40\n        /* \"#utility.yul\":6573:6582   */\n      dup4\n        /* \"#utility.yul\":6564:6571   */\n      dup6\n        /* \"#utility.yul\":6560:6583   */\n      sub\n        /* \"#utility.yul\":6556:6588   */\n      slt\n        /* \"#utility.yul\":6553:6672   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":6591:6670   */\n      tag_339\n      tag_219\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":6553:6672   */\n    tag_338:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6736:6789   */\n      tag_340\n        /* \"#utility.yul\":6781:6788   */\n      dup6\n        /* \"#utility.yul\":6772:6778   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      dup7\n        /* \"#utility.yul\":6757:6779   */\n      add\n        /* \"#utility.yul\":6736:6789   */\n      tag_238\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":6726:6789   */\n      swap3\n      pop\n        /* \"#utility.yul\":6682:6799   */\n      pop\n        /* \"#utility.yul\":6838:6840   */\n      0x20\n        /* \"#utility.yul\":6864:6914   */\n      tag_341\n        /* \"#utility.yul\":6906:6913   */\n      dup6\n        /* \"#utility.yul\":6897:6903   */\n      dup3\n        /* \"#utility.yul\":6886:6895   */\n      dup7\n        /* \"#utility.yul\":6882:6904   */\n      add\n        /* \"#utility.yul\":6864:6914   */\n      tag_241\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":6854:6914   */\n      swap2\n      pop\n        /* \"#utility.yul\":6809:6924   */\n      pop\n        /* \"#utility.yul\":6463:6931   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7054   */\n    tag_242:\n        /* \"#utility.yul\":7046:7047   */\n      0x00\n        /* \"#utility.yul\":7043:7044   */\n      dup1\n        /* \"#utility.yul\":7036:7048   */\n      revert\n        /* \"#utility.yul\":7060:7177   */\n    tag_243:\n        /* \"#utility.yul\":7169:7170   */\n      0x00\n        /* \"#utility.yul\":7166:7167   */\n      dup1\n        /* \"#utility.yul\":7159:7171   */\n      revert\n        /* \"#utility.yul\":7183:7363   */\n    tag_244:\n        /* \"#utility.yul\":7231:7308   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7228:7229   */\n      0x00\n        /* \"#utility.yul\":7221:7309   */\n      mstore\n        /* \"#utility.yul\":7328:7332   */\n      0x41\n        /* \"#utility.yul\":7325:7326   */\n      0x04\n        /* \"#utility.yul\":7318:7333   */\n      mstore\n        /* \"#utility.yul\":7352:7356   */\n      0x24\n        /* \"#utility.yul\":7349:7350   */\n      0x00\n        /* \"#utility.yul\":7342:7357   */\n      revert\n        /* \"#utility.yul\":7369:7650   */\n    tag_245:\n        /* \"#utility.yul\":7452:7479   */\n      tag_346\n        /* \"#utility.yul\":7474:7478   */\n      dup3\n        /* \"#utility.yul\":7452:7479   */\n      tag_229\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":7444:7450   */\n      dup2\n        /* \"#utility.yul\":7440:7480   */\n      add\n        /* \"#utility.yul\":7582:7588   */\n      dup2\n        /* \"#utility.yul\":7570:7580   */\n      dup2\n        /* \"#utility.yul\":7567:7589   */\n      lt\n        /* \"#utility.yul\":7546:7564   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7534:7544   */\n      dup3\n        /* \"#utility.yul\":7531:7565   */\n      gt\n        /* \"#utility.yul\":7528:7590   */\n      or\n        /* \"#utility.yul\":7525:7613   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":7593:7611   */\n      tag_348\n      tag_244\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":7525:7613   */\n    tag_347:\n        /* \"#utility.yul\":7633:7643   */\n      dup1\n        /* \"#utility.yul\":7629:7631   */\n      0x40\n        /* \"#utility.yul\":7622:7644   */\n      mstore\n        /* \"#utility.yul\":7412:7650   */\n      pop\n        /* \"#utility.yul\":7369:7650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7785   */\n    tag_246:\n        /* \"#utility.yul\":7690:7696   */\n      0x00\n        /* \"#utility.yul\":7717:7737   */\n      tag_350\n      tag_218\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":7707:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7746:7779   */\n      tag_351\n        /* \"#utility.yul\":7774:7778   */\n      dup3\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7746:7779   */\n      tag_245\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":7656:7785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8098   */\n    tag_247:\n        /* \"#utility.yul\":7852:7856   */\n      0x00\n        /* \"#utility.yul\":7942:7960   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7934:7940   */\n      dup3\n        /* \"#utility.yul\":7931:7961   */\n      gt\n        /* \"#utility.yul\":7928:7984   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":7964:7982   */\n      tag_354\n      tag_244\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":7928:7984   */\n    tag_353:\n        /* \"#utility.yul\":8002:8031   */\n      tag_355\n        /* \"#utility.yul\":8024:8030   */\n      dup3\n        /* \"#utility.yul\":8002:8031   */\n      tag_229\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":7994:8031   */\n      swap1\n      pop\n        /* \"#utility.yul\":8086:8090   */\n      0x20\n        /* \"#utility.yul\":8080:8084   */\n      dup2\n        /* \"#utility.yul\":8076:8091   */\n      add\n        /* \"#utility.yul\":8068:8091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7791:8098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8104:8250   */\n    tag_248:\n        /* \"#utility.yul\":8201:8207   */\n      dup3\n        /* \"#utility.yul\":8196:8199   */\n      dup2\n        /* \"#utility.yul\":8191:8194   */\n      dup4\n        /* \"#utility.yul\":8178:8208   */\n      calldatacopy\n        /* \"#utility.yul\":8242:8243   */\n      0x00\n        /* \"#utility.yul\":8233:8239   */\n      dup4\n        /* \"#utility.yul\":8228:8231   */\n      dup4\n        /* \"#utility.yul\":8224:8240   */\n      add\n        /* \"#utility.yul\":8217:8244   */\n      mstore\n        /* \"#utility.yul\":8104:8250   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8256:8679   */\n    tag_249:\n        /* \"#utility.yul\":8333:8338   */\n      0x00\n        /* \"#utility.yul\":8358:8423   */\n      tag_358\n        /* \"#utility.yul\":8374:8422   */\n      tag_359\n        /* \"#utility.yul\":8415:8421   */\n      dup5\n        /* \"#utility.yul\":8374:8422   */\n      tag_247\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":8358:8423   */\n      tag_246\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":8349:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8446:8452   */\n      dup3\n        /* \"#utility.yul\":8439:8444   */\n      dup2\n        /* \"#utility.yul\":8432:8453   */\n      mstore\n        /* \"#utility.yul\":8484:8488   */\n      0x20\n        /* \"#utility.yul\":8477:8482   */\n      dup2\n        /* \"#utility.yul\":8473:8489   */\n      add\n        /* \"#utility.yul\":8522:8525   */\n      dup5\n        /* \"#utility.yul\":8513:8519   */\n      dup5\n        /* \"#utility.yul\":8508:8511   */\n      dup5\n        /* \"#utility.yul\":8504:8520   */\n      add\n        /* \"#utility.yul\":8501:8526   */\n      gt\n        /* \"#utility.yul\":8498:8610   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":8529:8608   */\n      tag_361\n      tag_243\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":8498:8610   */\n    tag_360:\n        /* \"#utility.yul\":8619:8673   */\n      tag_362\n        /* \"#utility.yul\":8666:8672   */\n      dup5\n        /* \"#utility.yul\":8661:8664   */\n      dup3\n        /* \"#utility.yul\":8656:8659   */\n      dup6\n        /* \"#utility.yul\":8619:8673   */\n      tag_248\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":8339:8679   */\n      pop\n        /* \"#utility.yul\":8256:8679   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9036   */\n    tag_250:\n        /* \"#utility.yul\":8753:8758   */\n      0x00\n        /* \"#utility.yul\":8802:8805   */\n      dup3\n        /* \"#utility.yul\":8795:8799   */\n      0x1f\n        /* \"#utility.yul\":8787:8793   */\n      dup4\n        /* \"#utility.yul\":8783:8800   */\n      add\n        /* \"#utility.yul\":8779:8806   */\n      slt\n        /* \"#utility.yul\":8769:8891   */\n      tag_364\n      jumpi\n        /* \"#utility.yul\":8810:8889   */\n      tag_365\n      tag_242\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":8769:8891   */\n    tag_364:\n        /* \"#utility.yul\":8927:8933   */\n      dup2\n        /* \"#utility.yul\":8914:8934   */\n      calldataload\n        /* \"#utility.yul\":8952:9030   */\n      tag_366\n        /* \"#utility.yul\":9026:9029   */\n      dup5\n        /* \"#utility.yul\":9018:9024   */\n      dup3\n        /* \"#utility.yul\":9011:9015   */\n      0x20\n        /* \"#utility.yul\":9003:9009   */\n      dup7\n        /* \"#utility.yul\":8999:9016   */\n      add\n        /* \"#utility.yul\":8952:9030   */\n      tag_249\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":8943:9030   */\n      swap2\n      pop\n        /* \"#utility.yul\":8759:9036   */\n      pop\n        /* \"#utility.yul\":8698:9036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9985   */\n    tag_76:\n        /* \"#utility.yul\":9137:9143   */\n      0x00\n        /* \"#utility.yul\":9145:9151   */\n      dup1\n        /* \"#utility.yul\":9153:9159   */\n      0x00\n        /* \"#utility.yul\":9161:9167   */\n      dup1\n        /* \"#utility.yul\":9210:9213   */\n      0x80\n        /* \"#utility.yul\":9198:9207   */\n      dup6\n        /* \"#utility.yul\":9189:9196   */\n      dup8\n        /* \"#utility.yul\":9185:9208   */\n      sub\n        /* \"#utility.yul\":9181:9214   */\n      slt\n        /* \"#utility.yul\":9178:9298   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_369\n      tag_219\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":9178:9298   */\n    tag_368:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_370\n        /* \"#utility.yul\":9407:9414   */\n      dup8\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup9\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_238\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":9352:9415   */\n      swap5\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9543   */\n      tag_371\n        /* \"#utility.yul\":9535:9542   */\n      dup8\n        /* \"#utility.yul\":9526:9532   */\n      dup3\n        /* \"#utility.yul\":9515:9524   */\n      dup9\n        /* \"#utility.yul\":9511:9533   */\n      add\n        /* \"#utility.yul\":9490:9543   */\n      tag_238\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":9480:9543   */\n      swap4\n      pop\n        /* \"#utility.yul\":9435:9553   */\n      pop\n        /* \"#utility.yul\":9592:9594   */\n      0x40\n        /* \"#utility.yul\":9618:9671   */\n      tag_372\n        /* \"#utility.yul\":9663:9670   */\n      dup8\n        /* \"#utility.yul\":9654:9660   */\n      dup3\n        /* \"#utility.yul\":9643:9652   */\n      dup9\n        /* \"#utility.yul\":9639:9661   */\n      add\n        /* \"#utility.yul\":9618:9671   */\n      tag_233\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":9608:9671   */\n      swap3\n      pop\n        /* \"#utility.yul\":9563:9681   */\n      pop\n        /* \"#utility.yul\":9748:9750   */\n      0x60\n        /* \"#utility.yul\":9737:9746   */\n      dup6\n        /* \"#utility.yul\":9733:9751   */\n      add\n        /* \"#utility.yul\":9720:9752   */\n      calldataload\n        /* \"#utility.yul\":9779:9797   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9771:9777   */\n      dup2\n        /* \"#utility.yul\":9768:9798   */\n      gt\n        /* \"#utility.yul\":9765:9882   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":9801:9880   */\n      tag_374\n      tag_220\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":9765:9882   */\n    tag_373:\n        /* \"#utility.yul\":9906:9968   */\n      tag_375\n        /* \"#utility.yul\":9960:9967   */\n      dup8\n        /* \"#utility.yul\":9951:9957   */\n      dup3\n        /* \"#utility.yul\":9940:9949   */\n      dup9\n        /* \"#utility.yul\":9936:9958   */\n      add\n        /* \"#utility.yul\":9906:9968   */\n      tag_250\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":9896:9968   */\n      swap2\n      pop\n        /* \"#utility.yul\":9691:9978   */\n      pop\n        /* \"#utility.yul\":9042:9985   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10465   */\n    tag_86:\n        /* \"#utility.yul\":10059:10065   */\n      0x00\n        /* \"#utility.yul\":10067:10073   */\n      dup1\n        /* \"#utility.yul\":10116:10118   */\n      0x40\n        /* \"#utility.yul\":10104:10113   */\n      dup4\n        /* \"#utility.yul\":10095:10102   */\n      dup6\n        /* \"#utility.yul\":10091:10114   */\n      sub\n        /* \"#utility.yul\":10087:10119   */\n      slt\n        /* \"#utility.yul\":10084:10203   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":10122:10201   */\n      tag_378\n      tag_219\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":10084:10203   */\n    tag_377:\n        /* \"#utility.yul\":10242:10243   */\n      0x00\n        /* \"#utility.yul\":10267:10320   */\n      tag_379\n        /* \"#utility.yul\":10312:10319   */\n      dup6\n        /* \"#utility.yul\":10303:10309   */\n      dup3\n        /* \"#utility.yul\":10292:10301   */\n      dup7\n        /* \"#utility.yul\":10288:10310   */\n      add\n        /* \"#utility.yul\":10267:10320   */\n      tag_238\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":10257:10320   */\n      swap3\n      pop\n        /* \"#utility.yul\":10213:10330   */\n      pop\n        /* \"#utility.yul\":10369:10371   */\n      0x20\n        /* \"#utility.yul\":10395:10448   */\n      tag_380\n        /* \"#utility.yul\":10440:10447   */\n      dup6\n        /* \"#utility.yul\":10431:10437   */\n      dup3\n        /* \"#utility.yul\":10420:10429   */\n      dup7\n        /* \"#utility.yul\":10416:10438   */\n      add\n        /* \"#utility.yul\":10395:10448   */\n      tag_238\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":10385:10448   */\n      swap2\n      pop\n        /* \"#utility.yul\":10340:10458   */\n      pop\n        /* \"#utility.yul\":9991:10465   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10471:10651   */\n    tag_251:\n        /* \"#utility.yul\":10519:10596   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10516:10517   */\n      0x00\n        /* \"#utility.yul\":10509:10597   */\n      mstore\n        /* \"#utility.yul\":10616:10620   */\n      0x22\n        /* \"#utility.yul\":10613:10614   */\n      0x04\n        /* \"#utility.yul\":10606:10621   */\n      mstore\n        /* \"#utility.yul\":10640:10644   */\n      0x24\n        /* \"#utility.yul\":10637:10638   */\n      0x00\n        /* \"#utility.yul\":10630:10645   */\n      revert\n        /* \"#utility.yul\":10657:10977   */\n    tag_94:\n        /* \"#utility.yul\":10701:10707   */\n      0x00\n        /* \"#utility.yul\":10738:10739   */\n      0x02\n        /* \"#utility.yul\":10732:10736   */\n      dup3\n        /* \"#utility.yul\":10728:10740   */\n      div\n        /* \"#utility.yul\":10718:10740   */\n      swap1\n      pop\n        /* \"#utility.yul\":10785:10786   */\n      0x01\n        /* \"#utility.yul\":10779:10783   */\n      dup3\n        /* \"#utility.yul\":10775:10787   */\n      and\n        /* \"#utility.yul\":10806:10824   */\n      dup1\n        /* \"#utility.yul\":10796:10877   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":10862:10866   */\n      0x7f\n        /* \"#utility.yul\":10854:10860   */\n      dup3\n        /* \"#utility.yul\":10850:10867   */\n      and\n        /* \"#utility.yul\":10840:10867   */\n      swap2\n      pop\n        /* \"#utility.yul\":10796:10877   */\n    tag_383:\n        /* \"#utility.yul\":10924:10926   */\n      0x20\n        /* \"#utility.yul\":10916:10922   */\n      dup3\n        /* \"#utility.yul\":10913:10927   */\n      lt\n        /* \"#utility.yul\":10893:10911   */\n      dup2\n        /* \"#utility.yul\":10890:10928   */\n      sub\n        /* \"#utility.yul\":10887:10971   */\n      tag_384\n      jumpi\n        /* \"#utility.yul\":10943:10961   */\n      tag_385\n      tag_251\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":10887:10971   */\n    tag_384:\n        /* \"#utility.yul\":10708:10977   */\n      pop\n        /* \"#utility.yul\":10657:10977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10983:11131   */\n    tag_252:\n        /* \"#utility.yul\":11085:11096   */\n      0x00\n        /* \"#utility.yul\":11122:11125   */\n      dup2\n        /* \"#utility.yul\":11107:11125   */\n      swap1\n      pop\n        /* \"#utility.yul\":10983:11131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11137:11527   */\n    tag_253:\n        /* \"#utility.yul\":11243:11246   */\n      0x00\n        /* \"#utility.yul\":11271:11310   */\n      tag_388\n        /* \"#utility.yul\":11304:11309   */\n      dup3\n        /* \"#utility.yul\":11271:11310   */\n      tag_226\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":11326:11415   */\n      tag_389\n        /* \"#utility.yul\":11408:11414   */\n      dup2\n        /* \"#utility.yul\":11403:11406   */\n      dup6\n        /* \"#utility.yul\":11326:11415   */\n      tag_252\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":11319:11415   */\n      swap4\n      pop\n        /* \"#utility.yul\":11424:11489   */\n      tag_390\n        /* \"#utility.yul\":11482:11488   */\n      dup2\n        /* \"#utility.yul\":11477:11480   */\n      dup6\n        /* \"#utility.yul\":11470:11474   */\n      0x20\n        /* \"#utility.yul\":11463:11468   */\n      dup7\n        /* \"#utility.yul\":11459:11475   */\n      add\n        /* \"#utility.yul\":11424:11489   */\n      tag_228\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":11514:11520   */\n      dup1\n        /* \"#utility.yul\":11509:11512   */\n      dup5\n        /* \"#utility.yul\":11505:11521   */\n      add\n        /* \"#utility.yul\":11498:11521   */\n      swap2\n      pop\n        /* \"#utility.yul\":11247:11527   */\n      pop\n        /* \"#utility.yul\":11137:11527   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11533:11968   */\n    tag_172:\n        /* \"#utility.yul\":11713:11716   */\n      0x00\n        /* \"#utility.yul\":11735:11830   */\n      tag_392\n        /* \"#utility.yul\":11826:11829   */\n      dup3\n        /* \"#utility.yul\":11817:11823   */\n      dup6\n        /* \"#utility.yul\":11735:11830   */\n      tag_253\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":11728:11830   */\n      swap2\n      pop\n        /* \"#utility.yul\":11847:11942   */\n      tag_393\n        /* \"#utility.yul\":11938:11941   */\n      dup3\n        /* \"#utility.yul\":11929:11935   */\n      dup5\n        /* \"#utility.yul\":11847:11942   */\n      tag_253\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":11840:11942   */\n      swap2\n      pop\n        /* \"#utility.yul\":11959:11962   */\n      dup2\n        /* \"#utility.yul\":11952:11962   */\n      swap1\n      pop\n        /* \"#utility.yul\":11533:11968   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11974:12072   */\n    tag_254:\n        /* \"#utility.yul\":12025:12031   */\n      0x00\n        /* \"#utility.yul\":12059:12064   */\n      dup2\n        /* \"#utility.yul\":12053:12065   */\n      mload\n        /* \"#utility.yul\":12043:12065   */\n      swap1\n      pop\n        /* \"#utility.yul\":11974:12072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12078:12246   */\n    tag_255:\n        /* \"#utility.yul\":12161:12172   */\n      0x00\n        /* \"#utility.yul\":12195:12201   */\n      dup3\n        /* \"#utility.yul\":12190:12193   */\n      dup3\n        /* \"#utility.yul\":12183:12202   */\n      mstore\n        /* \"#utility.yul\":12235:12239   */\n      0x20\n        /* \"#utility.yul\":12230:12233   */\n      dup3\n        /* \"#utility.yul\":12226:12240   */\n      add\n        /* \"#utility.yul\":12211:12240   */\n      swap1\n      pop\n        /* \"#utility.yul\":12078:12246   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12252:12625   */\n    tag_256:\n        /* \"#utility.yul\":12338:12341   */\n      0x00\n        /* \"#utility.yul\":12366:12404   */\n      tag_397\n        /* \"#utility.yul\":12398:12403   */\n      dup3\n        /* \"#utility.yul\":12366:12404   */\n      tag_254\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":12420:12490   */\n      tag_398\n        /* \"#utility.yul\":12483:12489   */\n      dup2\n        /* \"#utility.yul\":12478:12481   */\n      dup6\n        /* \"#utility.yul\":12420:12490   */\n      tag_255\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":12413:12490   */\n      swap4\n      pop\n        /* \"#utility.yul\":12499:12564   */\n      tag_399\n        /* \"#utility.yul\":12557:12563   */\n      dup2\n        /* \"#utility.yul\":12552:12555   */\n      dup6\n        /* \"#utility.yul\":12545:12549   */\n      0x20\n        /* \"#utility.yul\":12538:12543   */\n      dup7\n        /* \"#utility.yul\":12534:12550   */\n      add\n        /* \"#utility.yul\":12499:12564   */\n      tag_228\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":12589:12618   */\n      tag_400\n        /* \"#utility.yul\":12611:12617   */\n      dup2\n        /* \"#utility.yul\":12589:12618   */\n      tag_229\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":12584:12587   */\n      dup5\n        /* \"#utility.yul\":12580:12619   */\n      add\n        /* \"#utility.yul\":12573:12619   */\n      swap2\n      pop\n        /* \"#utility.yul\":12342:12625   */\n      pop\n        /* \"#utility.yul\":12252:12625   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12631:13271   */\n    tag_198:\n        /* \"#utility.yul\":12826:12830   */\n      0x00\n        /* \"#utility.yul\":12864:12867   */\n      0x80\n        /* \"#utility.yul\":12853:12862   */\n      dup3\n        /* \"#utility.yul\":12849:12868   */\n      add\n        /* \"#utility.yul\":12841:12868   */\n      swap1\n      pop\n        /* \"#utility.yul\":12878:12949   */\n      tag_402\n        /* \"#utility.yul\":12946:12947   */\n      0x00\n        /* \"#utility.yul\":12935:12944   */\n      dup4\n        /* \"#utility.yul\":12931:12948   */\n      add\n        /* \"#utility.yul\":12922:12928   */\n      dup8\n        /* \"#utility.yul\":12878:12949   */\n      tag_236\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":12959:13031   */\n      tag_403\n        /* \"#utility.yul\":13027:13029   */\n      0x20\n        /* \"#utility.yul\":13016:13025   */\n      dup4\n        /* \"#utility.yul\":13012:13030   */\n      add\n        /* \"#utility.yul\":13003:13009   */\n      dup7\n        /* \"#utility.yul\":12959:13031   */\n      tag_236\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":13041:13113   */\n      tag_404\n        /* \"#utility.yul\":13109:13111   */\n      0x40\n        /* \"#utility.yul\":13098:13107   */\n      dup4\n        /* \"#utility.yul\":13094:13112   */\n      add\n        /* \"#utility.yul\":13085:13091   */\n      dup6\n        /* \"#utility.yul\":13041:13113   */\n      tag_239\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":13160:13169   */\n      dup2\n        /* \"#utility.yul\":13154:13158   */\n      dup2\n        /* \"#utility.yul\":13150:13170   */\n      sub\n        /* \"#utility.yul\":13145:13147   */\n      0x60\n        /* \"#utility.yul\":13134:13143   */\n      dup4\n        /* \"#utility.yul\":13130:13148   */\n      add\n        /* \"#utility.yul\":13123:13171   */\n      mstore\n        /* \"#utility.yul\":13188:13264   */\n      tag_405\n        /* \"#utility.yul\":13259:13263   */\n      dup2\n        /* \"#utility.yul\":13250:13256   */\n      dup5\n        /* \"#utility.yul\":13188:13264   */\n      tag_256\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":13180:13264   */\n      swap1\n      pop\n        /* \"#utility.yul\":12631:13271   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13277:13418   */\n    tag_257:\n        /* \"#utility.yul\":13333:13338   */\n      0x00\n        /* \"#utility.yul\":13364:13370   */\n      dup2\n        /* \"#utility.yul\":13358:13371   */\n      mload\n        /* \"#utility.yul\":13349:13371   */\n      swap1\n      pop\n        /* \"#utility.yul\":13380:13412   */\n      tag_407\n        /* \"#utility.yul\":13406:13411   */\n      dup2\n        /* \"#utility.yul\":13380:13412   */\n      tag_222\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":13277:13418   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13424:13773   */\n    tag_201:\n        /* \"#utility.yul\":13493:13499   */\n      0x00\n        /* \"#utility.yul\":13542:13544   */\n      0x20\n        /* \"#utility.yul\":13530:13539   */\n      dup3\n        /* \"#utility.yul\":13521:13528   */\n      dup5\n        /* \"#utility.yul\":13517:13540   */\n      sub\n        /* \"#utility.yul\":13513:13545   */\n      slt\n        /* \"#utility.yul\":13510:13629   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":13548:13627   */\n      tag_410\n      tag_219\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":13510:13629   */\n    tag_409:\n        /* \"#utility.yul\":13668:13669   */\n      0x00\n        /* \"#utility.yul\":13693:13756   */\n      tag_411\n        /* \"#utility.yul\":13748:13755   */\n      dup5\n        /* \"#utility.yul\":13739:13745   */\n      dup3\n        /* \"#utility.yul\":13728:13737   */\n      dup6\n        /* \"#utility.yul\":13724:13746   */\n      add\n        /* \"#utility.yul\":13693:13756   */\n      tag_257\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":13683:13756   */\n      swap2\n      pop\n        /* \"#utility.yul\":13639:13766   */\n      pop\n        /* \"#utility.yul\":13424:13773   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220221a51dfe0c2d40109246e4bbbae500da405e5fa7f8aeab1754ecc5c3891e12464736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_341": {
									"entryPoint": null,
									"id": 341,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_350": {
									"entryPoint": 121,
									"id": 350,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 403,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 126,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1094,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 359,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 673,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 173,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 146,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 151,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 141,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 136,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 823,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 979,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1022,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8574:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:1",
														"type": ""
													}
												],
												"src": "580:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:1"
															},
															"nodeType": "YulIf",
															"src": "1030:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:1",
														"type": ""
													}
												],
												"src": "874:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:1",
														"type": ""
													}
												],
												"src": "1161:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:1"
															},
															"nodeType": "YulIf",
															"src": "1434:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:1",
														"type": ""
													}
												],
												"src": "1296:308:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:1",
																"statements": []
															},
															"src": "1701:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:1",
														"type": ""
													}
												],
												"src": "1610:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:1"
															},
															"nodeType": "YulIf",
															"src": "2117:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:1"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:1",
														"type": ""
													}
												],
												"src": "1862:434:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:1"
															},
															"nodeType": "YulIf",
															"src": "2399:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:1",
														"type": ""
													}
												],
												"src": "2316:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2791:739:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2837:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2839:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2839:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2808:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:32:1"
															},
															"nodeType": "YulIf",
															"src": "2801:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2930:291:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2945:38:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2969:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2980:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2965:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2965:17:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2959:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:24:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2949:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3030:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3032:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3032:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3032:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3010:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "2996:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3127:84:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3183:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3194:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3179:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3179:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3137:41:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:74:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3231:292:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3246:39:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3270:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3281:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3266:18:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:25:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3250:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3332:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3334:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3334:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3334:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3312:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3301:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3301:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "3298:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3429:84:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3485:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3496:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3481:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3505:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3439:41:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3439:74:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3429:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2753:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2764:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2776:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2784:6:1",
														"type": ""
													}
												],
												"src": "2677:853:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3595:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3622:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3616:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3588:6:1",
														"type": ""
													}
												],
												"src": "3536:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3669:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3686:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3689:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3786:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3776:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3776:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3807:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3810:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3800:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3800:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3641:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3878:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3888:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3902:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3919:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3949:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3955:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3945:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3923:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3996:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4010:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4024:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4032:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4020:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4020:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3976:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3969:26:1"
															},
															"nodeType": "YulIf",
															"src": "3966:81:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4099:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4113:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4113:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4063:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4083:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4083:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4060:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4060:38:1"
															},
															"nodeType": "YulIf",
															"src": "4057:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3862:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3871:6:1",
														"type": ""
													}
												],
												"src": "3827:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4207:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4217:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4225:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4217:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4245:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4238:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4238:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4261:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4279:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4282:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4269:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4269:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4261:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4194:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4202:4:1",
														"type": ""
													}
												],
												"src": "4153:141:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4344:49:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4354:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4372:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4379:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4368:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4364:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4364:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4327:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4337:6:1",
														"type": ""
													}
												],
												"src": "4300:93:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4452:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4462:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4487:4:1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4483:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4462:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4427:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4433:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4443:8:1",
														"type": ""
													}
												],
												"src": "4399:107:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4588:317:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4598:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "4619:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "4602:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4642:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4684:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4654:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4646:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4760:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "4802:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4772:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "4760:8:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4820:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4833:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4844:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4840:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4829:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4820:5:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4859:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4872:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "4883:8:1"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4893:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4879:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4549:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "4556:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "4568:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4581:6:1",
														"type": ""
													}
												],
												"src": "4512:393:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4956:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4966:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4977:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4966:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4938:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4948:7:1",
														"type": ""
													}
												],
												"src": "4911:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5026:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5036:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5043:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5012:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5022:3:1",
														"type": ""
													}
												],
												"src": "4994:60:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:82:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5130:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5188:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5170:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5170:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5161:8:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5161:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5143:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5143:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5130:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5100:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5110:9:1",
														"type": ""
													}
												],
												"src": "5060:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5255:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5265:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5272:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5265:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5241:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5251:3:1",
														"type": ""
													}
												],
												"src": "5208:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5365:193:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5375:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5430:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5399:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5399:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5379:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5454:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5494:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5488:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5488:11:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5501:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5533:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5509:23:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5509:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5460:27:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5460:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5447:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5447:105:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5447:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5342:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5348:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5356:7:1",
														"type": ""
													}
												],
												"src": "5289:269:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5613:24:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5623:8:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5630:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5623:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5609:3:1",
														"type": ""
													}
												],
												"src": "5564:73:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:136:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5706:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5720:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "5710:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5805:4:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5811:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "5819:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5761:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5761:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5761:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5682:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5688:6:1",
														"type": ""
													}
												],
												"src": "5643:189:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5888:136:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5955:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5999:5:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6006:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "5969:29:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5969:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5969:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "5908:5:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5915:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5905:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5905:14:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5920:26:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5922:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5935:5:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5942:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5931:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5931:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "5922:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5902:2:1",
																"statements": []
															},
															"src": "5898:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5876:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5883:3:1",
														"type": ""
													}
												],
												"src": "5838:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6109:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6135:431:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6149:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6197:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6165:31:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6165:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6153:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6216:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6239:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6267:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6249:17:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6249:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6235:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6235:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6220:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6436:27:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6438:23:1",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6453:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6438:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6420:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6432:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6417:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6417:18:1"
																		},
																		"nodeType": "YulIf",
																		"src": "6414:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6505:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6522:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6550:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6532:17:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6532:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6518:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6518:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6476:28:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6476:80:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6476:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6126:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6123:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6123:11:1"
															},
															"nodeType": "YulIf",
															"src": "6120:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6085:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6092:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6097:10:1",
														"type": ""
													}
												],
												"src": "6030:543:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6642:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6652:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "6677:4:1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6683:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6673:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6673:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6652:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "6617:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6623:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6633:8:1",
														"type": ""
													}
												],
												"src": "6579:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6753:118:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6763:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6812:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "6815:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6808:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6808:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6827:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6823:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6823:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "6779:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6779:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "6767:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6840:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6854:4:1"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6860:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6850:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6850:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6730:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "6736:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6746:6:1",
														"type": ""
													}
												],
												"src": "6702:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6957:214:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7090:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7117:4:1"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7098:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7098:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7090:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7136:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7147:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7157:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7160:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7153:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7144:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7144:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6938:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6944:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "6952:4:1",
														"type": ""
													}
												],
												"src": "6876:295:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7268:1303:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7279:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7326:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7293:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7293:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7283:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7415:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7417:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7417:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7395:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7384:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:30:1"
															},
															"nodeType": "YulIf",
															"src": "7381:56:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7447:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7493:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7487:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7487:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7461:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7461:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7451:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7592:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "7598:6:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7546:45:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7546:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7546:67:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7623:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7640:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7627:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7651:17:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7664:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7651:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7715:611:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7729:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7748:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7760:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7756:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7756:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7744:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7744:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7733:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7780:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7826:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7794:31:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7794:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7784:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7844:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7853:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7848:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7912:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7937:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "7955:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "7960:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "7951:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7951:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "7945:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7945:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7930:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7930:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7930:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7989:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8003:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8011:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7999:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7999:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7989:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8030:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8047:9:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8058:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8043:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8043:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8030:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7878:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7881:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7875:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7875:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7890:21:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7892:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7901:1:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7904:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7897:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7897:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7892:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7871:3:1",
																					"statements": []
																				},
																				"src": "7867:208:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8111:156:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8129:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8156:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8161:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8152:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8152:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8146:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8146:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8133:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8196:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8223:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8238:6:1"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8246:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8234:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8234:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8204:18:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8204:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8189:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8189:64:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8189:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8094:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8103:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8091:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8091:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "8088:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8287:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8301:6:1"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8309:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8297:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8297:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8313:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8293:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8293:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8280:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8280:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8280:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7708:618:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7713:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8343:222:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8357:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8361:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8394:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8412:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8431:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8436:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8427:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8427:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8421:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8421:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8412:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8387:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "8384:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8481:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8540:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8547:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8487:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8487:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8474:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8474:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8474:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8335:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7688:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7685:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7685:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "7678:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7257:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7263:3:1",
														"type": ""
													}
												],
												"src": "7176:1395:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001ee338038062001ee3833981810160405281019062000037919062000211565b8160029081620000489190620004e1565b5080600390816200005a9190620004e1565b506200006b6200007960201b60201c565b6000819055505050620005c8565b600090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000e7826200009c565b810181811067ffffffffffffffff82111715620001095762000108620000ad565b5b80604052505050565b60006200011e6200007e565b90506200012c8282620000dc565b919050565b600067ffffffffffffffff8211156200014f576200014e620000ad565b5b6200015a826200009c565b9050602081019050919050565b60005b83811015620001875780820151818401526020810190506200016a565b60008484015250505050565b6000620001aa620001a48462000131565b62000112565b905082815260208101848484011115620001c957620001c862000097565b5b620001d684828562000167565b509392505050565b600082601f830112620001f657620001f562000092565b5b81516200020884826020860162000193565b91505092915050565b600080604083850312156200022b576200022a62000088565b5b600083015167ffffffffffffffff8111156200024c576200024b6200008d565b5b6200025a85828601620001de565b925050602083015167ffffffffffffffff8111156200027e576200027d6200008d565b5b6200028c85828601620001de565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002e957607f821691505b602082108103620002ff57620002fe620002a1565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003697fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200032a565b6200037586836200032a565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003c2620003bc620003b6846200038d565b62000397565b6200038d565b9050919050565b6000819050919050565b620003de83620003a1565b620003f6620003ed82620003c9565b84845462000337565b825550505050565b600090565b6200040d620003fe565b6200041a818484620003d3565b505050565b5b8181101562000442576200043660008262000403565b60018101905062000420565b5050565b601f82111562000491576200045b8162000305565b62000466846200031a565b8101602085101562000476578190505b6200048e62000485856200031a565b8301826200041f565b50505b505050565b600082821c905092915050565b6000620004b66000198460080262000496565b1980831691505092915050565b6000620004d18383620004a3565b9150826002028217905092915050565b620004ec8262000296565b67ffffffffffffffff811115620005085762000507620000ad565b5b620005148254620002d0565b6200052182828562000446565b600060209050601f83116001811462000559576000841562000544578287015190505b620005508582620004c3565b865550620005c0565b601f198416620005698662000305565b60005b8281101562000593578489015182556001820191506020850194506020810190506200056c565b86831015620005b35784890151620005af601f891682620004a3565b8355505b6001600288020188555050505b505050505050565b61190b80620005d86000396000f3fe6080604052600436106100dd5760003560e01c80636352211e1161007f578063a22cb46511610059578063a22cb465146102ab578063b88d4fde146102d4578063c87b56dd146102f0578063e985e9c51461032d576100dd565b80636352211e1461020657806370a082311461024357806395d89b4114610280576100dd565b8063095ea7b3116100bb578063095ea7b31461018757806318160ddd146101a357806323b872dd146101ce57806342842e0e146101ea576100dd565b806301ffc9a7146100e257806306fdde031461011f578063081812fc1461014a575b600080fd5b3480156100ee57600080fd5b50610109600480360381019061010491906111e4565b61036a565b604051610116919061122c565b60405180910390f35b34801561012b57600080fd5b506101346103fc565b60405161014191906112d7565b60405180910390f35b34801561015657600080fd5b50610171600480360381019061016c919061132f565b61048e565b60405161017e919061139d565b60405180910390f35b6101a1600480360381019061019c91906113e4565b61050d565b005b3480156101af57600080fd5b506101b8610651565b6040516101c59190611433565b60405180910390f35b6101e860048036038101906101e3919061144e565b610668565b005b61020460048036038101906101ff919061144e565b61098a565b005b34801561021257600080fd5b5061022d6004803603810190610228919061132f565b6109aa565b60405161023a919061139d565b60405180910390f35b34801561024f57600080fd5b5061026a600480360381019061026591906114a1565b6109bc565b6040516102779190611433565b60405180910390f35b34801561028c57600080fd5b50610295610a74565b6040516102a291906112d7565b60405180910390f35b3480156102b757600080fd5b506102d260048036038101906102cd91906114fa565b610b06565b005b6102ee60048036038101906102e9919061166f565b610c11565b005b3480156102fc57600080fd5b506103176004803603810190610312919061132f565b610c84565b60405161032491906112d7565b60405180910390f35b34801561033957600080fd5b50610354600480360381019061034f91906116f2565b610d22565b604051610361919061122c565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c557506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103f55750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461040b90611761565b80601f016020809104026020016040519081016040528092919081815260200182805461043790611761565b80156104845780601f1061045957610100808354040283529160200191610484565b820191906000526020600020905b81548152906001019060200180831161046757829003601f168201915b5050505050905090565b600061049982610db6565b6104cf576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610518826109aa565b90508073ffffffffffffffffffffffffffffffffffffffff16610539610e15565b73ffffffffffffffffffffffffffffffffffffffff161461059c5761056581610560610e15565b610d22565b61059b576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b600061065b610e1d565b6001546000540303905090565b600061067382610e22565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106da576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806106e684610eee565b915091506106fc81876106f7610e15565b610f15565b610748576107118661070c610e15565b610d22565b610747576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036107ae576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107bb8686866001610f59565b80156107c657600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001019190508190555061089485610870888887610f5f565b7c020000000000000000000000000000000000000000000000000000000017610f87565b600460008681526020019081526020016000208190555060007c020000000000000000000000000000000000000000000000000000000084160361091a5760006001850190506000600460008381526020019081526020016000205403610918576000548114610917578360046000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46109828686866001610fb2565b505050505050565b6109a583838360405180602001604052806000815250610c11565b505050565b60006109b582610e22565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a23576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b606060038054610a8390611761565b80601f0160208091040260200160405190810160405280929190818152602001828054610aaf90611761565b8015610afc5780601f10610ad157610100808354040283529160200191610afc565b820191906000526020600020905b815481529060010190602001808311610adf57829003601f168201915b5050505050905090565b8060076000610b13610e15565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610bc0610e15565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c05919061122c565b60405180910390a35050565b610c1c848484610668565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610c7e57610c4784848484610fb8565b610c7d576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610c8f82610db6565b610cc5576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610ccf611108565b90506000815103610cef5760405180602001604052806000815250610d1a565b80610cf98461111f565b604051602001610d0a9291906117ce565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610dc1610e1d565b11158015610dd0575060005482105b8015610e0e575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b600033905090565b600090565b60008082905080610e31610e1d565b11610eb757600054811015610eb65760006004600083815260200190815260200160002054905060007c0100000000000000000000000000000000000000000000000000000000821603610eb4575b60008103610eaa576004600083600190039350838152602001908152602001600020549050610e80565b8092505050610ee9565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e8610f7686868461116f565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02610fde610e15565b8786866040518563ffffffff1660e01b81526004016110009493929190611847565b6020604051808303816000875af192505050801561103c57506040513d601f19601f8201168201806040525081019061103991906118a8565b60015b6110b5573d806000811461106c576040519150601f19603f3d011682016040523d82523d6000602084013e611071565b606091505b5060008151036110ad576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b606060a060405101806040526020810391506000825281835b60011561115a57600184039350600a81066030018453600a8104905080611138575b50828103602084039350808452505050919050565b60009392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6111c18161118c565b81146111cc57600080fd5b50565b6000813590506111de816111b8565b92915050565b6000602082840312156111fa576111f9611182565b5b6000611208848285016111cf565b91505092915050565b60008115159050919050565b61122681611211565b82525050565b6000602082019050611241600083018461121d565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611281578082015181840152602081019050611266565b60008484015250505050565b6000601f19601f8301169050919050565b60006112a982611247565b6112b38185611252565b93506112c3818560208601611263565b6112cc8161128d565b840191505092915050565b600060208201905081810360008301526112f1818461129e565b905092915050565b6000819050919050565b61130c816112f9565b811461131757600080fd5b50565b60008135905061132981611303565b92915050565b60006020828403121561134557611344611182565b5b60006113538482850161131a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113878261135c565b9050919050565b6113978161137c565b82525050565b60006020820190506113b2600083018461138e565b92915050565b6113c18161137c565b81146113cc57600080fd5b50565b6000813590506113de816113b8565b92915050565b600080604083850312156113fb576113fa611182565b5b6000611409858286016113cf565b925050602061141a8582860161131a565b9150509250929050565b61142d816112f9565b82525050565b60006020820190506114486000830184611424565b92915050565b60008060006060848603121561146757611466611182565b5b6000611475868287016113cf565b9350506020611486868287016113cf565b92505060406114978682870161131a565b9150509250925092565b6000602082840312156114b7576114b6611182565b5b60006114c5848285016113cf565b91505092915050565b6114d781611211565b81146114e257600080fd5b50565b6000813590506114f4816114ce565b92915050565b6000806040838503121561151157611510611182565b5b600061151f858286016113cf565b9250506020611530858286016114e5565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61157c8261128d565b810181811067ffffffffffffffff8211171561159b5761159a611544565b5b80604052505050565b60006115ae611178565b90506115ba8282611573565b919050565b600067ffffffffffffffff8211156115da576115d9611544565b5b6115e38261128d565b9050602081019050919050565b82818337600083830152505050565b600061161261160d846115bf565b6115a4565b90508281526020810184848401111561162e5761162d61153f565b5b6116398482856115f0565b509392505050565b600082601f8301126116565761165561153a565b5b81356116668482602086016115ff565b91505092915050565b6000806000806080858703121561168957611688611182565b5b6000611697878288016113cf565b94505060206116a8878288016113cf565b93505060406116b98782880161131a565b925050606085013567ffffffffffffffff8111156116da576116d9611187565b5b6116e687828801611641565b91505092959194509250565b6000806040838503121561170957611708611182565b5b6000611717858286016113cf565b9250506020611728858286016113cf565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061177957607f821691505b60208210810361178c5761178b611732565b5b50919050565b600081905092915050565b60006117a882611247565b6117b28185611792565b93506117c2818560208601611263565b80840191505092915050565b60006117da828561179d565b91506117e6828461179d565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000611819826117f2565b61182381856117fd565b9350611833818560208601611263565b61183c8161128d565b840191505092915050565b600060808201905061185c600083018761138e565b611869602083018661138e565b6118766040830185611424565b8181036060830152611888818461180e565b905095945050505050565b6000815190506118a2816111b8565b92915050565b6000602082840312156118be576118bd611182565b5b60006118cc84828501611893565b9150509291505056fea2646970667358221220221a51dfe0c2d40109246e4bbbae500da405e5fa7f8aeab1754ecc5c3891e12464736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1EE3 CODESIZE SUB DUP1 PUSH3 0x1EE3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x211 JUMP JUMPDEST DUP2 PUSH1 0x2 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4E1 JUMP JUMPDEST POP DUP1 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4E1 JUMP JUMPDEST POP PUSH3 0x6B PUSH3 0x79 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x5C8 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xE7 DUP3 PUSH3 0x9C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x109 JUMPI PUSH3 0x108 PUSH3 0xAD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x11E PUSH3 0x7E JUMP JUMPDEST SWAP1 POP PUSH3 0x12C DUP3 DUP3 PUSH3 0xDC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x14F JUMPI PUSH3 0x14E PUSH3 0xAD JUMP JUMPDEST JUMPDEST PUSH3 0x15A DUP3 PUSH3 0x9C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x187 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x16A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1AA PUSH3 0x1A4 DUP5 PUSH3 0x131 JUMP JUMPDEST PUSH3 0x112 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1C9 JUMPI PUSH3 0x1C8 PUSH3 0x97 JUMP JUMPDEST JUMPDEST PUSH3 0x1D6 DUP5 DUP3 DUP6 PUSH3 0x167 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1F6 JUMPI PUSH3 0x1F5 PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x208 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x193 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x22B JUMPI PUSH3 0x22A PUSH3 0x88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x24C JUMPI PUSH3 0x24B PUSH3 0x8D JUMP JUMPDEST JUMPDEST PUSH3 0x25A DUP6 DUP3 DUP7 ADD PUSH3 0x1DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x27E JUMPI PUSH3 0x27D PUSH3 0x8D JUMP JUMPDEST JUMPDEST PUSH3 0x28C DUP6 DUP3 DUP7 ADD PUSH3 0x1DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2E9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2FF JUMPI PUSH3 0x2FE PUSH3 0x2A1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x369 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x32A JUMP JUMPDEST PUSH3 0x375 DUP7 DUP4 PUSH3 0x32A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3C2 PUSH3 0x3BC PUSH3 0x3B6 DUP5 PUSH3 0x38D JUMP JUMPDEST PUSH3 0x397 JUMP JUMPDEST PUSH3 0x38D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3DE DUP4 PUSH3 0x3A1 JUMP JUMPDEST PUSH3 0x3F6 PUSH3 0x3ED DUP3 PUSH3 0x3C9 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x337 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x40D PUSH3 0x3FE JUMP JUMPDEST PUSH3 0x41A DUP2 DUP5 DUP5 PUSH3 0x3D3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x442 JUMPI PUSH3 0x436 PUSH1 0x0 DUP3 PUSH3 0x403 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x420 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x491 JUMPI PUSH3 0x45B DUP2 PUSH3 0x305 JUMP JUMPDEST PUSH3 0x466 DUP5 PUSH3 0x31A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x476 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x48E PUSH3 0x485 DUP6 PUSH3 0x31A JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x41F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x496 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4D1 DUP4 DUP4 PUSH3 0x4A3 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4EC DUP3 PUSH3 0x296 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x508 JUMPI PUSH3 0x507 PUSH3 0xAD JUMP JUMPDEST JUMPDEST PUSH3 0x514 DUP3 SLOAD PUSH3 0x2D0 JUMP JUMPDEST PUSH3 0x521 DUP3 DUP3 DUP6 PUSH3 0x446 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x559 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x544 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x550 DUP6 DUP3 PUSH3 0x4C3 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5C0 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x569 DUP7 PUSH3 0x305 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x593 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x56C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x5B3 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x5AF PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x4A3 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x190B DUP1 PUSH3 0x5D8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x32D JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x280 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1EA JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x122C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x134 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0x50D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x651 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x144E JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x144E JUMP JUMPDEST PUSH2 0x98A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST PUSH2 0x9AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x9BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH2 0xA74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH2 0xB06 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x166F JUMP JUMPDEST PUSH2 0xC11 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST PUSH2 0xC84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x16F2 JUMP JUMPDEST PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x122C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3C5 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3F5 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x40B SWAP1 PUSH2 0x1761 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x437 SWAP1 PUSH2 0x1761 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x484 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x459 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x484 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x467 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499 DUP3 PUSH2 0xDB6 JUMP JUMPDEST PUSH2 0x4CF JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x518 DUP3 PUSH2 0x9AA JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x539 PUSH2 0xE15 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x59C JUMPI PUSH2 0x565 DUP2 PUSH2 0x560 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0xD22 JUMP JUMPDEST PUSH2 0x59B JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65B PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x673 DUP3 PUSH2 0xE22 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6E6 DUP5 PUSH2 0xEEE JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x6FC DUP2 DUP8 PUSH2 0x6F7 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0xF15 JUMP JUMPDEST PUSH2 0x748 JUMPI PUSH2 0x711 DUP7 PUSH2 0x70C PUSH2 0xE15 JUMP JUMPDEST PUSH2 0xD22 JUMP JUMPDEST PUSH2 0x747 JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7AE JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7BB DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xF59 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7C6 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x894 DUP6 PUSH2 0x870 DUP9 DUP9 DUP8 PUSH2 0xF5F JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0xF87 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND SUB PUSH2 0x91A JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x918 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x917 JUMPI DUP4 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x982 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xFB2 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9A5 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC11 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B5 DUP3 PUSH2 0xE22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0xA83 SWAP1 PUSH2 0x1761 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAAF SWAP1 PUSH2 0x1761 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAFC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAD1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAFC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xADF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0xB13 PUSH2 0xE15 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBC0 PUSH2 0xE15 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC05 SWAP2 SWAP1 PUSH2 0x122C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC1C DUP5 DUP5 DUP5 PUSH2 0x668 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xC7E JUMPI PUSH2 0xC47 DUP5 DUP5 DUP5 DUP5 PUSH2 0xFB8 JUMP JUMPDEST PUSH2 0xC7D JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC8F DUP3 PUSH2 0xDB6 JUMP JUMPDEST PUSH2 0xCC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCCF PUSH2 0x1108 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xCEF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD1A JUMP JUMPDEST DUP1 PUSH2 0xCF9 DUP5 PUSH2 0x111F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD0A SWAP3 SWAP2 SWAP1 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xDC1 PUSH2 0xE1D JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xDD0 JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xE0E JUMPI POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP DUP1 PUSH2 0xE31 PUSH2 0xE1D JUMP JUMPDEST GT PUSH2 0xEB7 JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0xEB6 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND SUB PUSH2 0xEB4 JUMPI JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0xEAA JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0xE80 JUMP JUMPDEST DUP1 SWAP3 POP POP POP PUSH2 0xEE9 JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0xF76 DUP7 DUP7 DUP5 PUSH2 0x116F JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xFDE PUSH2 0xE15 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1000 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1847 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x103C JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1039 SWAP2 SWAP1 PUSH2 0x18A8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x10B5 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x106C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1071 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x10AD JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP PUSH1 0x0 DUP3 MSTORE DUP2 DUP4 JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x115A JUMPI PUSH1 0x1 DUP5 SUB SWAP4 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP5 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP DUP1 PUSH2 0x1138 JUMPI JUMPDEST POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 SUB SWAP4 POP DUP1 DUP5 MSTORE POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11C1 DUP2 PUSH2 0x118C JUMP JUMPDEST DUP2 EQ PUSH2 0x11CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11DE DUP2 PUSH2 0x11B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11FA JUMPI PUSH2 0x11F9 PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1208 DUP5 DUP3 DUP6 ADD PUSH2 0x11CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1226 DUP2 PUSH2 0x1211 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1241 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x121D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1281 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A9 DUP3 PUSH2 0x1247 JUMP JUMPDEST PUSH2 0x12B3 DUP2 DUP6 PUSH2 0x1252 JUMP JUMPDEST SWAP4 POP PUSH2 0x12C3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1263 JUMP JUMPDEST PUSH2 0x12CC DUP2 PUSH2 0x128D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12F1 DUP2 DUP5 PUSH2 0x129E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x130C DUP2 PUSH2 0x12F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1329 DUP2 PUSH2 0x1303 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1345 JUMPI PUSH2 0x1344 PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1353 DUP5 DUP3 DUP6 ADD PUSH2 0x131A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1387 DUP3 PUSH2 0x135C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1397 DUP2 PUSH2 0x137C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13B2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x138E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13C1 DUP2 PUSH2 0x137C JUMP JUMPDEST DUP2 EQ PUSH2 0x13CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13DE DUP2 PUSH2 0x13B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13FB JUMPI PUSH2 0x13FA PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1409 DUP6 DUP3 DUP7 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x141A DUP6 DUP3 DUP7 ADD PUSH2 0x131A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x142D DUP2 PUSH2 0x12F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1448 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1424 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1467 JUMPI PUSH2 0x1466 PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1475 DUP7 DUP3 DUP8 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1486 DUP7 DUP3 DUP8 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1497 DUP7 DUP3 DUP8 ADD PUSH2 0x131A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B7 JUMPI PUSH2 0x14B6 PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14C5 DUP5 DUP3 DUP6 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14D7 DUP2 PUSH2 0x1211 JUMP JUMPDEST DUP2 EQ PUSH2 0x14E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14F4 DUP2 PUSH2 0x14CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1511 JUMPI PUSH2 0x1510 PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x151F DUP6 DUP3 DUP7 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1530 DUP6 DUP3 DUP7 ADD PUSH2 0x14E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x157C DUP3 PUSH2 0x128D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x159B JUMPI PUSH2 0x159A PUSH2 0x1544 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15AE PUSH2 0x1178 JUMP JUMPDEST SWAP1 POP PUSH2 0x15BA DUP3 DUP3 PUSH2 0x1573 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15DA JUMPI PUSH2 0x15D9 PUSH2 0x1544 JUMP JUMPDEST JUMPDEST PUSH2 0x15E3 DUP3 PUSH2 0x128D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1612 PUSH2 0x160D DUP5 PUSH2 0x15BF JUMP JUMPDEST PUSH2 0x15A4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x162E JUMPI PUSH2 0x162D PUSH2 0x153F JUMP JUMPDEST JUMPDEST PUSH2 0x1639 DUP5 DUP3 DUP6 PUSH2 0x15F0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1656 JUMPI PUSH2 0x1655 PUSH2 0x153A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1666 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1689 JUMPI PUSH2 0x1688 PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1697 DUP8 DUP3 DUP9 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x16A8 DUP8 DUP3 DUP9 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x16B9 DUP8 DUP3 DUP9 ADD PUSH2 0x131A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16DA JUMPI PUSH2 0x16D9 PUSH2 0x1187 JUMP JUMPDEST JUMPDEST PUSH2 0x16E6 DUP8 DUP3 DUP9 ADD PUSH2 0x1641 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1709 JUMPI PUSH2 0x1708 PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1717 DUP6 DUP3 DUP7 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1728 DUP6 DUP3 DUP7 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1779 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x178C JUMPI PUSH2 0x178B PUSH2 0x1732 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A8 DUP3 PUSH2 0x1247 JUMP JUMPDEST PUSH2 0x17B2 DUP2 DUP6 PUSH2 0x1792 JUMP JUMPDEST SWAP4 POP PUSH2 0x17C2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1263 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DA DUP3 DUP6 PUSH2 0x179D JUMP JUMPDEST SWAP2 POP PUSH2 0x17E6 DUP3 DUP5 PUSH2 0x179D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1819 DUP3 PUSH2 0x17F2 JUMP JUMPDEST PUSH2 0x1823 DUP2 DUP6 PUSH2 0x17FD JUMP JUMPDEST SWAP4 POP PUSH2 0x1833 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1263 JUMP JUMPDEST PUSH2 0x183C DUP2 PUSH2 0x128D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x185C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x138E JUMP JUMPDEST PUSH2 0x1869 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x138E JUMP JUMPDEST PUSH2 0x1876 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1424 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1888 DUP2 DUP5 PUSH2 0x180E JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x18A2 DUP2 PUSH2 0x11B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18BE JUMPI PUSH2 0x18BD PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18CC DUP5 DUP3 DUP6 ADD PUSH2 0x1893 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 BYTE MLOAD 0xDF 0xE0 0xC2 0xD4 ADD MULMOD 0x24 PUSH15 0x4BBBAE500DA405E5FA7F8AEAB1754E 0xCC 0x5C CODESIZE SWAP2 0xE1 0x24 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "9604:40452:0:-:0;;;13655:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13729:5;13721;:13;;;;;;:::i;:::-;;13754:7;13744;:17;;;;;;:::i;:::-;;13787:15;:13;;;:15;;:::i;:::-;13771:13;:31;;;;13655:154;;9604:40452;;14135:90;14191:7;14135:90;:::o;7:75:1:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;9604:40452:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1211": {
									"entryPoint": 4018,
									"id": 1211,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_608": {
									"entryPoint": 4360,
									"id": 608,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1198": {
									"entryPoint": 3929,
									"id": 1198,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1266": {
									"entryPoint": 4024,
									"id": 1266,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_950": {
									"entryPoint": 3510,
									"id": 950,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_1772": {
									"entryPoint": 4463,
									"id": 1772,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedSlotAndAddress_983": {
									"entryPoint": 3822,
									"id": 983,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isSenderApprovedOrOwner_964": {
									"entryPoint": 3861,
									"id": 964,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSenderERC721A_1815": {
									"entryPoint": 3605,
									"id": 1815,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_1805": {
									"entryPoint": 3935,
									"id": 1805,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_packOwnershipData_802": {
									"entryPoint": 3975,
									"id": 802,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_736": {
									"entryPoint": 3618,
									"id": 736,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_startTokenId_350": {
									"entryPoint": 3613,
									"id": 350,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_1825": {
									"entryPoint": 4383,
									"id": 1825,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_857": {
									"entryPoint": 1293,
									"id": 857,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_423": {
									"entryPoint": 2492,
									"id": 423,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_880": {
									"entryPoint": 1166,
									"id": 880,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_924": {
									"entryPoint": 3362,
									"id": 924,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_546": {
									"entryPoint": 1020,
									"id": 546,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_628": {
									"entryPoint": 2474,
									"id": 628,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1147": {
									"entryPoint": 2442,
									"id": 1147,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1185": {
									"entryPoint": 3089,
									"id": 1185,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_906": {
									"entryPoint": 2822,
									"id": 906,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_536": {
									"entryPoint": 874,
									"id": 536,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_556": {
									"entryPoint": 2676,
									"id": 556,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_599": {
									"entryPoint": 3204,
									"id": 599,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_375": {
									"entryPoint": 1617,
									"id": 375,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1128": {
									"entryPoint": 1640,
									"id": 1128,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 5631,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 4559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 6291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 5697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 5743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6094,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6215,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4472,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 5567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 6130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 5616,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4707,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5938,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5444,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5434,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5439,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4487,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4482,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 5048,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13776:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:1",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:1",
														"type": ""
													}
												],
												"src": "334:149:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:1"
															},
															"nodeType": "YulIf",
															"src": "541:62:1"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:1",
														"type": ""
													}
												],
												"src": "489:120:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:1",
														"type": ""
													}
												],
												"src": "615:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:1"
															},
															"nodeType": "YulIf",
															"src": "833:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:1",
														"type": ""
													}
												],
												"src": "758:327:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:1",
														"type": ""
													}
												],
												"src": "1091:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:1",
														"type": ""
													}
												],
												"src": "1187:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:1",
														"type": ""
													}
												],
												"src": "1302:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:1",
														"type": ""
													}
												],
												"src": "1518:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:1",
														"type": ""
													}
												],
												"src": "1623:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1879:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1939:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1911:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1913:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1893:3:1",
																"statements": []
															},
															"src": "1889:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1842:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1847:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1852:6:1",
														"type": ""
													}
												],
												"src": "1798:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2108:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2081:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2091:6:1",
														"type": ""
													}
												],
												"src": "2050:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2250:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2322:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2483:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2231:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2238:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2246:3:1",
														"type": ""
													}
												],
												"src": "2158:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2659:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2669:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2761:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2769:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2631:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2643:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2654:4:1",
														"type": ""
													}
												],
												"src": "2541:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2915:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2926:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2897:7:1",
														"type": ""
													}
												],
												"src": "2860:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2986:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3043:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2999:43:1"
															},
															"nodeType": "YulIf",
															"src": "2996:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2979:5:1",
														"type": ""
													}
												],
												"src": "2943:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3133:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3101:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3109:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3117:5:1",
														"type": ""
													}
												],
												"src": "3071:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3282:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3328:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:32:1"
															},
															"nodeType": "YulIf",
															"src": "3292:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3421:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3465:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3252:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3263:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3275:6:1",
														"type": ""
													}
												],
												"src": "3216:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3596:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3588:7:1",
														"type": ""
													}
												],
												"src": "3551:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3728:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3738:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3710:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3720:7:1",
														"type": ""
													}
												],
												"src": "3683:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3850:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3838:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3845:3:1",
														"type": ""
													}
												],
												"src": "3785:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4007:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4017:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3979:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3991:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4002:4:1",
														"type": ""
													}
												],
												"src": "3909:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4180:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:43:1"
															},
															"nodeType": "YulIf",
															"src": "4190:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4173:5:1",
														"type": ""
													}
												],
												"src": "4137:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4317:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4327:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4295:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4303:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4311:5:1",
														"type": ""
													}
												],
												"src": "4265:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4493:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4539:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:32:1"
															},
															"nodeType": "YulIf",
															"src": "4503:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4632:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4676:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4759:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4804:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4455:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4466:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4478:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4486:6:1",
														"type": ""
													}
												],
												"src": "4410:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4955:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4972:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4995:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4977:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4977:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4965:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4965:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4965:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4943:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4950:3:1",
														"type": ""
													}
												],
												"src": "4890:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5112:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5122:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5134:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5145:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5130:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5122:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5202:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5215:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5226:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5211:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5211:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5158:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5158:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5158:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5084:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5096:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5107:4:1",
														"type": ""
													}
												],
												"src": "5014:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5342:519:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5388:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5390:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5390:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5390:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5363:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5372:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5359:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5359:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5384:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5355:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5355:32:1"
															},
															"nodeType": "YulIf",
															"src": "5352:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5481:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5496:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5510:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5500:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5525:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5560:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5571:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5556:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5556:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5580:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5535:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5535:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5525:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5608:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5623:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5637:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5627:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5653:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5688:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5699:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5684:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5684:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5708:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5663:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5663:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5653:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5736:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5751:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5765:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5755:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5781:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5816:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5827:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5812:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5812:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5836:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5791:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5791:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5781:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5296:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5307:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5319:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5327:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5335:6:1",
														"type": ""
													}
												],
												"src": "5242:619:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5933:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5979:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5981:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5981:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5981:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5954:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5963:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5950:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5950:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5975:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5946:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:32:1"
															},
															"nodeType": "YulIf",
															"src": "5943:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "6072:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6087:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6101:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6091:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6116:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6151:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6147:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6126:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6126:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6116:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5903:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5914:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5926:6:1",
														"type": ""
													}
												],
												"src": "5867:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6242:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6296:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6305:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6308:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6298:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6298:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6265:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6287:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6272:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6272:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6262:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6262:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6255:40:1"
															},
															"nodeType": "YulIf",
															"src": "6252:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6235:5:1",
														"type": ""
													}
												],
												"src": "6202:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6373:84:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6383:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6392:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6383:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6445:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6421:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6421:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6421:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6351:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6359:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6367:5:1",
														"type": ""
													}
												],
												"src": "6324:133:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6543:388:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6589:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6591:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6591:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6564:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6560:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6556:32:1"
															},
															"nodeType": "YulIf",
															"src": "6553:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "6682:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6697:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6701:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6726:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6761:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6757:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6781:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6736:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6736:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6809:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6838:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6854:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6886:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6897:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6882:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6882:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6906:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6864:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6864:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6854:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6505:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6516:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6528:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6536:6:1",
														"type": ""
													}
												],
												"src": "6463:468:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7026:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7043:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7046:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7036:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7036:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7149:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7169:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7159:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7159:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7060:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7211:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7228:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7231:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7221:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7221:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7221:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7325:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7328:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7318:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7318:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7349:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7352:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7342:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7183:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7412:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7422:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7444:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7474:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7452:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7452:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7440:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7426:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7591:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7593:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7593:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7534:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7546:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7531:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7531:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7570:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7582:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7567:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7567:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7528:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7528:62:1"
															},
															"nodeType": "YulIf",
															"src": "7525:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7629:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7633:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7622:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7622:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7398:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7406:4:1",
														"type": ""
													}
												],
												"src": "7369:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7697:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7707:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7717:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7717:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7746:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7746:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7746:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7681:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7690:6:1",
														"type": ""
													}
												],
												"src": "7656:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7857:241:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7962:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7964:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7964:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7964:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7942:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7931:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7931:30:1"
															},
															"nodeType": "YulIf",
															"src": "7928:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7994:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8024:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "8002:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8002:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7994:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8068:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8080:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8086:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8068:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7841:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7852:4:1",
														"type": ""
													}
												],
												"src": "7791:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8168:82:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8191:3:1"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8196:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8201:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8178:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8178:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8178:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8228:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8233:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8224:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8242:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8217:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8217:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8150:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8155:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8160:6:1",
														"type": ""
													}
												],
												"src": "8104:146:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8339:340:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8349:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8415:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8374:40:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8374:48:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8358:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8358:65:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8349:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8439:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8432:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8432:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8462:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8477:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8484:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8473:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8466:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8527:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8529:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8529:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8529:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8508:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8513:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8504:16:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8522:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8501:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8501:25:1"
															},
															"nodeType": "YulIf",
															"src": "8498:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8656:3:1"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8661:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8619:36:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8619:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8619:54:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8312:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8317:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8325:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8333:5:1",
														"type": ""
													}
												],
												"src": "8256:423:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8759:277:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8808:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8810:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8810:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8810:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8787:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8795:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8783:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8783:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8802:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8779:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8779:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8772:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8772:35:1"
															},
															"nodeType": "YulIf",
															"src": "8769:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8900:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8927:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8914:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8904:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8943:87:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9011:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8999:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9018:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9026:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8952:46:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8952:78:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8943:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8753:5:1",
														"type": ""
													}
												],
												"src": "8698:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9168:817:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9215:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9185:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9210:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9181:33:1"
															},
															"nodeType": "YulIf",
															"src": "9178:120:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "9308:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9352:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9435:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9480:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9515:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9526:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9511:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9511:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9535:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9490:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9490:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9563:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9578:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9592:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9582:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9608:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9643:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9654:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9639:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9639:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9663:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9618:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9618:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9608:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9691:287:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9706:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9737:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9748:2:1",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9733:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9733:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9720:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9720:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9710:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9799:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9801:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9801:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9801:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9771:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9779:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9768:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9768:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "9765:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9896:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9940:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9951:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9936:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9936:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9960:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9906:29:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9906:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9896:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9114:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9125:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9137:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9145:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9153:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9161:6:1",
														"type": ""
													}
												],
												"src": "9042:943:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10074:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10120:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10122:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10122:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10122:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10095:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10104:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10091:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10091:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10116:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10087:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10087:32:1"
															},
															"nodeType": "YulIf",
															"src": "10084:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "10213:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10228:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10242:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10232:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10257:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10292:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10303:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10288:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10288:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10312:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10267:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10267:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10257:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10340:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10355:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10369:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10359:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10385:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10420:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10431:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10416:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10416:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10440:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10395:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10395:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10385:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10036:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10047:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10059:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10067:6:1",
														"type": ""
													}
												],
												"src": "9991:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10499:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10516:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10519:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10509:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10509:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10509:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10613:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10616:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10606:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10606:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10606:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10637:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10640:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10630:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10630:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10630:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "10471:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10708:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10718:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10732:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10738:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10728:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10728:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10718:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10749:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10779:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10785:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10775:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10775:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10753:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10826:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10840:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10854:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10862:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10850:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10850:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10840:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10806:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10799:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10799:26:1"
															},
															"nodeType": "YulIf",
															"src": "10796:81:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10929:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "10943:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10943:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10943:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10893:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10916:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10924:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10913:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10913:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10890:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10890:38:1"
															},
															"nodeType": "YulIf",
															"src": "10887:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10692:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10701:6:1",
														"type": ""
													}
												],
												"src": "10657:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11097:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11107:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11122:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11107:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11069:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11074:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11085:11:1",
														"type": ""
													}
												],
												"src": "10983:148:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11247:280:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11257:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11304:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11271:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11271:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11261:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11319:96:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11403:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11408:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11326:76:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11326:89:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11319:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11463:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11470:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11459:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11459:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11477:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11482:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "11424:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11424:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11424:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11498:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11509:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11514:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11505:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11505:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11498:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11228:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11235:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11243:3:1",
														"type": ""
													}
												],
												"src": "11137:390:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11717:251:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11728:102:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11817:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11826:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11735:81:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11735:95:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11728:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11840:102:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11929:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11938:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11847:81:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11847:95:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11840:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11952:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11959:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11952:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11688:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11694:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11702:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11713:3:1",
														"type": ""
													}
												],
												"src": "11533:435:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12032:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12043:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12059:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12053:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12053:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12043:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12015:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12025:6:1",
														"type": ""
													}
												],
												"src": "11974:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12173:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12190:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12195:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12183:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12183:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12183:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12211:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12230:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12235:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12226:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12226:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12211:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12145:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12150:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12161:11:1",
														"type": ""
													}
												],
												"src": "12078:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12342:283:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12352:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12398:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12366:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12366:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12356:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12413:77:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12478:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12483:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12420:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12420:70:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12413:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12538:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12545:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12534:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12534:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12552:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12557:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "12499:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12499:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12499:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12573:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12584:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12611:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "12589:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12589:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12580:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12580:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12573:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12323:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12330:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12338:3:1",
														"type": ""
													}
												],
												"src": "12252:373:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12831:440:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12841:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12853:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12864:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12849:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12849:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12841:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12922:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12935:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12946:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12931:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12931:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12878:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12878:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12878:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13003:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13016:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13027:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13012:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13012:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12959:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12959:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12959:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13085:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13098:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13109:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13094:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13094:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13041:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13041:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13041:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13134:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13145:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13130:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13130:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13154:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13160:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13150:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13150:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13123:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13123:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13123:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13180:84:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13250:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13259:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13188:61:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13188:76:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13180:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12779:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12791:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12799:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12807:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12815:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12826:4:1",
														"type": ""
													}
												],
												"src": "12631:640:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13339:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13349:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "13364:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13358:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13358:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13349:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13406:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "13380:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13380:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13380:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "13317:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13325:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13333:5:1",
														"type": ""
													}
												],
												"src": "13277:141:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13500:273:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13546:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "13548:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13548:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13548:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13521:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13530:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13517:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13517:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13542:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13513:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13513:32:1"
															},
															"nodeType": "YulIf",
															"src": "13510:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "13639:127:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13654:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13668:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13658:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13683:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13728:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13739:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13724:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13724:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13748:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "13693:30:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13693:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "13683:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13470:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13481:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13493:6:1",
														"type": ""
													}
												],
												"src": "13424:349:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100dd5760003560e01c80636352211e1161007f578063a22cb46511610059578063a22cb465146102ab578063b88d4fde146102d4578063c87b56dd146102f0578063e985e9c51461032d576100dd565b80636352211e1461020657806370a082311461024357806395d89b4114610280576100dd565b8063095ea7b3116100bb578063095ea7b31461018757806318160ddd146101a357806323b872dd146101ce57806342842e0e146101ea576100dd565b806301ffc9a7146100e257806306fdde031461011f578063081812fc1461014a575b600080fd5b3480156100ee57600080fd5b50610109600480360381019061010491906111e4565b61036a565b604051610116919061122c565b60405180910390f35b34801561012b57600080fd5b506101346103fc565b60405161014191906112d7565b60405180910390f35b34801561015657600080fd5b50610171600480360381019061016c919061132f565b61048e565b60405161017e919061139d565b60405180910390f35b6101a1600480360381019061019c91906113e4565b61050d565b005b3480156101af57600080fd5b506101b8610651565b6040516101c59190611433565b60405180910390f35b6101e860048036038101906101e3919061144e565b610668565b005b61020460048036038101906101ff919061144e565b61098a565b005b34801561021257600080fd5b5061022d6004803603810190610228919061132f565b6109aa565b60405161023a919061139d565b60405180910390f35b34801561024f57600080fd5b5061026a600480360381019061026591906114a1565b6109bc565b6040516102779190611433565b60405180910390f35b34801561028c57600080fd5b50610295610a74565b6040516102a291906112d7565b60405180910390f35b3480156102b757600080fd5b506102d260048036038101906102cd91906114fa565b610b06565b005b6102ee60048036038101906102e9919061166f565b610c11565b005b3480156102fc57600080fd5b506103176004803603810190610312919061132f565b610c84565b60405161032491906112d7565b60405180910390f35b34801561033957600080fd5b50610354600480360381019061034f91906116f2565b610d22565b604051610361919061122c565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c557506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103f55750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461040b90611761565b80601f016020809104026020016040519081016040528092919081815260200182805461043790611761565b80156104845780601f1061045957610100808354040283529160200191610484565b820191906000526020600020905b81548152906001019060200180831161046757829003601f168201915b5050505050905090565b600061049982610db6565b6104cf576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610518826109aa565b90508073ffffffffffffffffffffffffffffffffffffffff16610539610e15565b73ffffffffffffffffffffffffffffffffffffffff161461059c5761056581610560610e15565b610d22565b61059b576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b600061065b610e1d565b6001546000540303905090565b600061067382610e22565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106da576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806106e684610eee565b915091506106fc81876106f7610e15565b610f15565b610748576107118661070c610e15565b610d22565b610747576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036107ae576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107bb8686866001610f59565b80156107c657600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001019190508190555061089485610870888887610f5f565b7c020000000000000000000000000000000000000000000000000000000017610f87565b600460008681526020019081526020016000208190555060007c020000000000000000000000000000000000000000000000000000000084160361091a5760006001850190506000600460008381526020019081526020016000205403610918576000548114610917578360046000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46109828686866001610fb2565b505050505050565b6109a583838360405180602001604052806000815250610c11565b505050565b60006109b582610e22565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a23576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b606060038054610a8390611761565b80601f0160208091040260200160405190810160405280929190818152602001828054610aaf90611761565b8015610afc5780601f10610ad157610100808354040283529160200191610afc565b820191906000526020600020905b815481529060010190602001808311610adf57829003601f168201915b5050505050905090565b8060076000610b13610e15565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610bc0610e15565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c05919061122c565b60405180910390a35050565b610c1c848484610668565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610c7e57610c4784848484610fb8565b610c7d576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610c8f82610db6565b610cc5576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610ccf611108565b90506000815103610cef5760405180602001604052806000815250610d1a565b80610cf98461111f565b604051602001610d0a9291906117ce565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610dc1610e1d565b11158015610dd0575060005482105b8015610e0e575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b600033905090565b600090565b60008082905080610e31610e1d565b11610eb757600054811015610eb65760006004600083815260200190815260200160002054905060007c0100000000000000000000000000000000000000000000000000000000821603610eb4575b60008103610eaa576004600083600190039350838152602001908152602001600020549050610e80565b8092505050610ee9565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e8610f7686868461116f565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02610fde610e15565b8786866040518563ffffffff1660e01b81526004016110009493929190611847565b6020604051808303816000875af192505050801561103c57506040513d601f19601f8201168201806040525081019061103991906118a8565b60015b6110b5573d806000811461106c576040519150601f19603f3d011682016040523d82523d6000602084013e611071565b606091505b5060008151036110ad576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b606060a060405101806040526020810391506000825281835b60011561115a57600184039350600a81066030018453600a8104905080611138575b50828103602084039350808452505050919050565b60009392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6111c18161118c565b81146111cc57600080fd5b50565b6000813590506111de816111b8565b92915050565b6000602082840312156111fa576111f9611182565b5b6000611208848285016111cf565b91505092915050565b60008115159050919050565b61122681611211565b82525050565b6000602082019050611241600083018461121d565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611281578082015181840152602081019050611266565b60008484015250505050565b6000601f19601f8301169050919050565b60006112a982611247565b6112b38185611252565b93506112c3818560208601611263565b6112cc8161128d565b840191505092915050565b600060208201905081810360008301526112f1818461129e565b905092915050565b6000819050919050565b61130c816112f9565b811461131757600080fd5b50565b60008135905061132981611303565b92915050565b60006020828403121561134557611344611182565b5b60006113538482850161131a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113878261135c565b9050919050565b6113978161137c565b82525050565b60006020820190506113b2600083018461138e565b92915050565b6113c18161137c565b81146113cc57600080fd5b50565b6000813590506113de816113b8565b92915050565b600080604083850312156113fb576113fa611182565b5b6000611409858286016113cf565b925050602061141a8582860161131a565b9150509250929050565b61142d816112f9565b82525050565b60006020820190506114486000830184611424565b92915050565b60008060006060848603121561146757611466611182565b5b6000611475868287016113cf565b9350506020611486868287016113cf565b92505060406114978682870161131a565b9150509250925092565b6000602082840312156114b7576114b6611182565b5b60006114c5848285016113cf565b91505092915050565b6114d781611211565b81146114e257600080fd5b50565b6000813590506114f4816114ce565b92915050565b6000806040838503121561151157611510611182565b5b600061151f858286016113cf565b9250506020611530858286016114e5565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61157c8261128d565b810181811067ffffffffffffffff8211171561159b5761159a611544565b5b80604052505050565b60006115ae611178565b90506115ba8282611573565b919050565b600067ffffffffffffffff8211156115da576115d9611544565b5b6115e38261128d565b9050602081019050919050565b82818337600083830152505050565b600061161261160d846115bf565b6115a4565b90508281526020810184848401111561162e5761162d61153f565b5b6116398482856115f0565b509392505050565b600082601f8301126116565761165561153a565b5b81356116668482602086016115ff565b91505092915050565b6000806000806080858703121561168957611688611182565b5b6000611697878288016113cf565b94505060206116a8878288016113cf565b93505060406116b98782880161131a565b925050606085013567ffffffffffffffff8111156116da576116d9611187565b5b6116e687828801611641565b91505092959194509250565b6000806040838503121561170957611708611182565b5b6000611717858286016113cf565b9250506020611728858286016113cf565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061177957607f821691505b60208210810361178c5761178b611732565b5b50919050565b600081905092915050565b60006117a882611247565b6117b28185611792565b93506117c2818560208601611263565b80840191505092915050565b60006117da828561179d565b91506117e6828461179d565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000611819826117f2565b61182381856117fd565b9350611833818560208601611263565b61183c8161128d565b840191505092915050565b600060808201905061185c600083018761138e565b611869602083018661138e565b6118766040830185611424565b8181036060830152611888818461180e565b905095945050505050565b6000815190506118a2816111b8565b92915050565b6000602082840312156118be576118bd611182565b5b60006118cc84828501611893565b9150509291505056fea2646970667358221220221a51dfe0c2d40109246e4bbbae500da405e5fa7f8aeab1754ecc5c3891e12464736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x32D JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x280 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1EA JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x122C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x134 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0x50D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x651 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x144E JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x144E JUMP JUMPDEST PUSH2 0x98A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST PUSH2 0x9AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x9BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH2 0xA74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH2 0xB06 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x166F JUMP JUMPDEST PUSH2 0xC11 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST PUSH2 0xC84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x16F2 JUMP JUMPDEST PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x122C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3C5 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3F5 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x40B SWAP1 PUSH2 0x1761 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x437 SWAP1 PUSH2 0x1761 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x484 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x459 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x484 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x467 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499 DUP3 PUSH2 0xDB6 JUMP JUMPDEST PUSH2 0x4CF JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x518 DUP3 PUSH2 0x9AA JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x539 PUSH2 0xE15 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x59C JUMPI PUSH2 0x565 DUP2 PUSH2 0x560 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0xD22 JUMP JUMPDEST PUSH2 0x59B JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65B PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x673 DUP3 PUSH2 0xE22 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6E6 DUP5 PUSH2 0xEEE JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x6FC DUP2 DUP8 PUSH2 0x6F7 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0xF15 JUMP JUMPDEST PUSH2 0x748 JUMPI PUSH2 0x711 DUP7 PUSH2 0x70C PUSH2 0xE15 JUMP JUMPDEST PUSH2 0xD22 JUMP JUMPDEST PUSH2 0x747 JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7AE JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7BB DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xF59 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7C6 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x894 DUP6 PUSH2 0x870 DUP9 DUP9 DUP8 PUSH2 0xF5F JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0xF87 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND SUB PUSH2 0x91A JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x918 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x917 JUMPI DUP4 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x982 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xFB2 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9A5 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC11 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B5 DUP3 PUSH2 0xE22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0xA83 SWAP1 PUSH2 0x1761 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAAF SWAP1 PUSH2 0x1761 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAFC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAD1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAFC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xADF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0xB13 PUSH2 0xE15 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBC0 PUSH2 0xE15 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC05 SWAP2 SWAP1 PUSH2 0x122C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC1C DUP5 DUP5 DUP5 PUSH2 0x668 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xC7E JUMPI PUSH2 0xC47 DUP5 DUP5 DUP5 DUP5 PUSH2 0xFB8 JUMP JUMPDEST PUSH2 0xC7D JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC8F DUP3 PUSH2 0xDB6 JUMP JUMPDEST PUSH2 0xCC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCCF PUSH2 0x1108 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xCEF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD1A JUMP JUMPDEST DUP1 PUSH2 0xCF9 DUP5 PUSH2 0x111F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD0A SWAP3 SWAP2 SWAP1 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xDC1 PUSH2 0xE1D JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xDD0 JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xE0E JUMPI POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP DUP1 PUSH2 0xE31 PUSH2 0xE1D JUMP JUMPDEST GT PUSH2 0xEB7 JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0xEB6 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND SUB PUSH2 0xEB4 JUMPI JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0xEAA JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0xE80 JUMP JUMPDEST DUP1 SWAP3 POP POP POP PUSH2 0xEE9 JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0xF76 DUP7 DUP7 DUP5 PUSH2 0x116F JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xFDE PUSH2 0xE15 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1000 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1847 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x103C JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1039 SWAP2 SWAP1 PUSH2 0x18A8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x10B5 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x106C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1071 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x10AD JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP PUSH1 0x0 DUP3 MSTORE DUP2 DUP4 JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x115A JUMPI PUSH1 0x1 DUP5 SUB SWAP4 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP5 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP DUP1 PUSH2 0x1138 JUMPI JUMPDEST POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 SUB SWAP4 POP DUP1 DUP5 MSTORE POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11C1 DUP2 PUSH2 0x118C JUMP JUMPDEST DUP2 EQ PUSH2 0x11CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11DE DUP2 PUSH2 0x11B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11FA JUMPI PUSH2 0x11F9 PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1208 DUP5 DUP3 DUP6 ADD PUSH2 0x11CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1226 DUP2 PUSH2 0x1211 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1241 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x121D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1281 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A9 DUP3 PUSH2 0x1247 JUMP JUMPDEST PUSH2 0x12B3 DUP2 DUP6 PUSH2 0x1252 JUMP JUMPDEST SWAP4 POP PUSH2 0x12C3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1263 JUMP JUMPDEST PUSH2 0x12CC DUP2 PUSH2 0x128D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12F1 DUP2 DUP5 PUSH2 0x129E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x130C DUP2 PUSH2 0x12F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1329 DUP2 PUSH2 0x1303 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1345 JUMPI PUSH2 0x1344 PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1353 DUP5 DUP3 DUP6 ADD PUSH2 0x131A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1387 DUP3 PUSH2 0x135C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1397 DUP2 PUSH2 0x137C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13B2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x138E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13C1 DUP2 PUSH2 0x137C JUMP JUMPDEST DUP2 EQ PUSH2 0x13CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13DE DUP2 PUSH2 0x13B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13FB JUMPI PUSH2 0x13FA PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1409 DUP6 DUP3 DUP7 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x141A DUP6 DUP3 DUP7 ADD PUSH2 0x131A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x142D DUP2 PUSH2 0x12F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1448 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1424 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1467 JUMPI PUSH2 0x1466 PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1475 DUP7 DUP3 DUP8 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1486 DUP7 DUP3 DUP8 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1497 DUP7 DUP3 DUP8 ADD PUSH2 0x131A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B7 JUMPI PUSH2 0x14B6 PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14C5 DUP5 DUP3 DUP6 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14D7 DUP2 PUSH2 0x1211 JUMP JUMPDEST DUP2 EQ PUSH2 0x14E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14F4 DUP2 PUSH2 0x14CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1511 JUMPI PUSH2 0x1510 PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x151F DUP6 DUP3 DUP7 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1530 DUP6 DUP3 DUP7 ADD PUSH2 0x14E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x157C DUP3 PUSH2 0x128D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x159B JUMPI PUSH2 0x159A PUSH2 0x1544 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15AE PUSH2 0x1178 JUMP JUMPDEST SWAP1 POP PUSH2 0x15BA DUP3 DUP3 PUSH2 0x1573 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15DA JUMPI PUSH2 0x15D9 PUSH2 0x1544 JUMP JUMPDEST JUMPDEST PUSH2 0x15E3 DUP3 PUSH2 0x128D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1612 PUSH2 0x160D DUP5 PUSH2 0x15BF JUMP JUMPDEST PUSH2 0x15A4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x162E JUMPI PUSH2 0x162D PUSH2 0x153F JUMP JUMPDEST JUMPDEST PUSH2 0x1639 DUP5 DUP3 DUP6 PUSH2 0x15F0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1656 JUMPI PUSH2 0x1655 PUSH2 0x153A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1666 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1689 JUMPI PUSH2 0x1688 PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1697 DUP8 DUP3 DUP9 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x16A8 DUP8 DUP3 DUP9 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x16B9 DUP8 DUP3 DUP9 ADD PUSH2 0x131A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16DA JUMPI PUSH2 0x16D9 PUSH2 0x1187 JUMP JUMPDEST JUMPDEST PUSH2 0x16E6 DUP8 DUP3 DUP9 ADD PUSH2 0x1641 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1709 JUMPI PUSH2 0x1708 PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1717 DUP6 DUP3 DUP7 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1728 DUP6 DUP3 DUP7 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1779 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x178C JUMPI PUSH2 0x178B PUSH2 0x1732 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A8 DUP3 PUSH2 0x1247 JUMP JUMPDEST PUSH2 0x17B2 DUP2 DUP6 PUSH2 0x1792 JUMP JUMPDEST SWAP4 POP PUSH2 0x17C2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1263 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DA DUP3 DUP6 PUSH2 0x179D JUMP JUMPDEST SWAP2 POP PUSH2 0x17E6 DUP3 DUP5 PUSH2 0x179D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1819 DUP3 PUSH2 0x17F2 JUMP JUMPDEST PUSH2 0x1823 DUP2 DUP6 PUSH2 0x17FD JUMP JUMPDEST SWAP4 POP PUSH2 0x1833 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1263 JUMP JUMPDEST PUSH2 0x183C DUP2 PUSH2 0x128D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x185C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x138E JUMP JUMPDEST PUSH2 0x1869 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x138E JUMP JUMPDEST PUSH2 0x1876 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1424 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1888 DUP2 DUP5 PUSH2 0x180E JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x18A2 DUP2 PUSH2 0x11B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18BE JUMPI PUSH2 0x18BD PUSH2 0x1182 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18CC DUP5 DUP3 DUP6 ADD PUSH2 0x1893 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 BYTE MLOAD 0xDF 0xE0 0xC2 0xD4 ADD MULMOD 0x24 PUSH15 0x4BBBAE500DA405E5FA7F8AEAB1754E 0xCC 0x5C CODESIZE SWAP2 0xE1 0x24 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "9604:40452:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17864:630;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18748:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25069:214;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24521:398;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14603:317;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28612:2764;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;31467:187;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;20100:150;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15754:230;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18917:102;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25610:231;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;32235:396;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;19120:313;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25991:162;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17864:630;17949:4;18282:10;18267:25;;:11;:25;;;;:101;;;;18358:10;18343:25;;:11;:25;;;;18267:101;:177;;;;18434:10;18419:25;;:11;:25;;;;18267:177;18248:196;;17864:630;;;:::o;18748:98::-;18802:13;18834:5;18827:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18748:98;:::o;25069:214::-;25145:7;25169:16;25177:7;25169;:16::i;:::-;25164:64;;25194:34;;;;;;;;;;;;;;25164:64;25246:15;:24;25262:7;25246:24;;;;;;;;;;;:30;;;;;;;;;;;;25239:37;;25069:214;;;:::o;24521:398::-;24609:13;24625:16;24633:7;24625;:16::i;:::-;24609:32;;24679:5;24656:28;;:19;:17;:19::i;:::-;:28;;;24652:172;;24703:44;24720:5;24727:19;:17;:19::i;:::-;24703:16;:44::i;:::-;24698:126;;24774:35;;;;;;;;;;;;;;24698:126;24652:172;24867:2;24834:15;:24;24850:7;24834:24;;;;;;;;;;;:30;;;:35;;;;;;;;;;;;;;;;;;24904:7;24900:2;24884:28;;24893:5;24884:28;;;;;;;;;;;;24599:320;24521:398;;:::o;14603:317::-;14664:7;14888:15;:13;:15::i;:::-;14873:12;;14857:13;;:28;:46;14850:53;;14603:317;:::o;28612:2764::-;28749:27;28779;28798:7;28779:18;:27::i;:::-;28749:57;;28862:4;28821:45;;28837:19;28821:45;;;28817:86;;28875:28;;;;;;;;;;;;;;28817:86;28915:27;28944:23;28971:35;28998:7;28971:26;:35::i;:::-;28914:92;;;;29103:68;29128:15;29145:4;29151:19;:17;:19::i;:::-;29103:24;:68::i;:::-;29098:179;;29190:43;29207:4;29213:19;:17;:19::i;:::-;29190:16;:43::i;:::-;29185:92;;29242:35;;;;;;;;;;;;;;29185:92;29098:179;29306:1;29292:16;;:2;:16;;;29288:52;;29317:23;;;;;;;;;;;;;;29288:52;29351:43;29373:4;29379:2;29383:7;29392:1;29351:21;:43::i;:::-;29483:15;29480:157;;;29621:1;29600:19;29593:30;29480:157;30009:18;:24;30028:4;30009:24;;;;;;;;;;;;;;;;30007:26;;;;;;;;;;;;30077:18;:22;30096:2;30077:22;;;;;;;;;;;;;;;;30075:24;;;;;;;;;;;30392:143;30428:2;30476:45;30491:4;30497:2;30501:19;30476:14;:45::i;:::-;11101:8;30448:73;30392:18;:143::i;:::-;30363:17;:26;30381:7;30363:26;;;;;;;;;;;:172;;;;30703:1;11101:8;30652:19;:47;:52;30648:617;;30724:19;30756:1;30746:7;:11;30724:33;;30911:1;30877:17;:30;30895:11;30877:30;;;;;;;;;;;;:35;30873:378;;31013:13;;30998:11;:28;30994:239;;31191:19;31158:17;:30;31176:11;31158:30;;;;;;;;;;;:52;;;;30994:239;30873:378;30706:559;30648:617;31309:7;31305:2;31290:27;;31299:4;31290:27;;;;;;;;;;;;31327:42;31348:4;31354:2;31358:7;31367:1;31327:20;:42::i;:::-;28739:2637;;;28612:2764;;;:::o;31467:187::-;31608:39;31625:4;31631:2;31635:7;31608:39;;;;;;;;;;;;:16;:39::i;:::-;31467:187;;;:::o;20100:150::-;20172:7;20214:27;20233:7;20214:18;:27::i;:::-;20191:52;;20100:150;;;:::o;15754:230::-;15826:7;15866:1;15849:19;;:5;:19;;;15845:60;;15877:28;;;;;;;;;;;;;;15845:60;10069:13;15922:18;:25;15941:5;15922:25;;;;;;;;;;;;;;;;:55;15915:62;;15754:230;;;:::o;18917:102::-;18973:13;19005:7;18998:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18917:102;:::o;25610:231::-;25756:8;25704:18;:39;25723:19;:17;:19::i;:::-;25704:39;;;;;;;;;;;;;;;:49;25744:8;25704:49;;;;;;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;25815:8;25779:55;;25794:19;:17;:19::i;:::-;25779:55;;;25825:8;25779:55;;;;;;:::i;:::-;;;;;;;;25610:231;;:::o;32235:396::-;32404:31;32417:4;32423:2;32427:7;32404:12;:31::i;:::-;32467:1;32449:2;:14;;;:19;32445:180;;32487:56;32518:4;32524:2;32528:7;32537:5;32487:30;:56::i;:::-;32482:143;;32570:40;;;;;;;;;;;;;;32482:143;32445:180;32235:396;;;;:::o;19120:313::-;19193:13;19223:16;19231:7;19223;:16::i;:::-;19218:59;;19248:29;;;;;;;;;;;;;;19218:59;19288:21;19312:10;:8;:10::i;:::-;19288:34;;19364:1;19345:7;19339:21;:26;:87;;;;;;;;;;;;;;;;;19392:7;19401:18;19411:7;19401:9;:18::i;:::-;19375:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;19339:87;19332:94;;;19120:313;;;:::o;25991:162::-;26088:4;26111:18;:25;26130:5;26111:25;;;;;;;;;;;;;;;:35;26137:8;26111:35;;;;;;;;;;;;;;;;;;;;;;;;;26104:42;;25991:162;;;;:::o;26402:277::-;26467:4;26521:7;26502:15;:13;:15::i;:::-;:26;;:65;;;;;26554:13;;26544:7;:23;26502:65;:151;;;;;26652:1;10827:8;26604:17;:26;26622:7;26604:26;;;;;;;;;;;;:44;:49;26502:151;26483:170;;26402:277;;;:::o;48146:103::-;48206:7;48232:10;48225:17;;48146:103;:::o;14135:90::-;14191:7;14135:90;:::o;21224:1249::-;21291:7;21310:12;21325:7;21310:22;;21390:4;21371:15;:13;:15::i;:::-;:23;21367:1042;;21423:13;;21416:4;:20;21412:997;;;21460:14;21477:17;:23;21495:4;21477:23;;;;;;;;;;;;21460:40;;21592:1;10827:8;21564:6;:24;:29;21560:831;;22219:111;22236:1;22226:6;:11;22219:111;;22278:17;:25;22296:6;;;;;;;22278:25;;;;;;;;;;;;22269:34;;22219:111;;;22362:6;22355:13;;;;;;21560:831;21438:971;21412:997;21367:1042;22435:31;;;;;;;;;;;;;;21224:1249;;;;:::o;27537:474::-;27636:27;27665:23;27704:38;27745:15;:24;27761:7;27745:24;;;;;;;;;;;27704:65;;27919:18;27896:41;;27975:19;27969:26;27950:45;;27882:123;27537:474;;;:::o;26783:646::-;26928:11;27090:16;27083:5;27079:28;27070:37;;27248:16;27237:9;27233:32;27220:45;;27396:15;27385:9;27382:30;27374:5;27363:9;27360:20;27357:56;27347:66;;26783:646;;;;;:::o;33275:154::-;;;;;:::o;47473:304::-;47604:7;47623:16;11222:3;47649:19;:41;;47623:68;;11222:3;47716:31;47727:4;47733:2;47737:9;47716:10;:31::i;:::-;47708:40;;:62;;47701:69;;;47473:304;;;;;:::o;23006:443::-;23086:14;23251:16;23244:5;23240:28;23231:37;;23426:5;23412:11;23387:23;23383:41;23380:52;23373:5;23370:63;23360:73;;23006:443;;;;:::o;34076:153::-;;;;;:::o;34657:697::-;34815:4;34860:2;34835:45;;;34881:19;:17;:19::i;:::-;34902:4;34908:7;34917:5;34835:88;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;34831:517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35130:1;35113:6;:13;:18;35109:229;;35158:40;;;;;;;;;;;;;;35109:229;35298:6;35292:13;35283:6;35279:2;35275:15;35268:38;34831:517;35001:54;;;34991:64;;;:6;:64;;;;34984:71;;;34657:697;;;;;;:::o;19678:92::-;19729:13;19754:9;;;;;;;;;;;;;;19678:92;:::o;48346:1708::-;48411:17;48839:4;48832;48826:11;48822:22;48929:1;48923:4;48916:15;49002:4;48999:1;48995:12;48988:19;;49082:1;49077:3;49070:14;49183:3;49417:5;49399:419;49425:1;49399:419;;;49464:1;49459:3;49455:11;49448:18;;49632:2;49626:4;49622:13;49618:2;49614:22;49609:3;49601:36;49724:2;49718:4;49714:13;49706:21;;49789:4;49399:419;49779:25;49399:419;49403:21;49855:3;49850;49846:13;49968:4;49963:3;49959:14;49952:21;;50031:6;50026:3;50019:19;48449:1599;;;48346:1708;;;:::o;47184:143::-;47317:6;47184:143;;;;;:::o;7:75:1:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:118::-;4977:24;4995:5;4977:24;:::i;:::-;4972:3;4965:37;4890:118;;:::o;5014:222::-;5107:4;5145:2;5134:9;5130:18;5122:26;;5158:71;5226:1;5215:9;5211:17;5202:6;5158:71;:::i;:::-;5014:222;;;;:::o;5242:619::-;5319:6;5327;5335;5384:2;5372:9;5363:7;5359:23;5355:32;5352:119;;;5390:79;;:::i;:::-;5352:119;5510:1;5535:53;5580:7;5571:6;5560:9;5556:22;5535:53;:::i;:::-;5525:63;;5481:117;5637:2;5663:53;5708:7;5699:6;5688:9;5684:22;5663:53;:::i;:::-;5653:63;;5608:118;5765:2;5791:53;5836:7;5827:6;5816:9;5812:22;5791:53;:::i;:::-;5781:63;;5736:118;5242:619;;;;;:::o;5867:329::-;5926:6;5975:2;5963:9;5954:7;5950:23;5946:32;5943:119;;;5981:79;;:::i;:::-;5943:119;6101:1;6126:53;6171:7;6162:6;6151:9;6147:22;6126:53;:::i;:::-;6116:63;;6072:117;5867:329;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:474::-;10059:6;10067;10116:2;10104:9;10095:7;10091:23;10087:32;10084:119;;;10122:79;;:::i;:::-;10084:119;10242:1;10267:53;10312:7;10303:6;10292:9;10288:22;10267:53;:::i;:::-;10257:63;;10213:117;10369:2;10395:53;10440:7;10431:6;10420:9;10416:22;10395:53;:::i;:::-;10385:63;;10340:118;9991:474;;;;;:::o;10471:180::-;10519:77;10516:1;10509:88;10616:4;10613:1;10606:15;10640:4;10637:1;10630:15;10657:320;10701:6;10738:1;10732:4;10728:12;10718:22;;10785:1;10779:4;10775:12;10806:18;10796:81;;10862:4;10854:6;10850:17;10840:27;;10796:81;10924:2;10916:6;10913:14;10893:18;10890:38;10887:84;;10943:18;;:::i;:::-;10887:84;10708:269;10657:320;;;:::o;10983:148::-;11085:11;11122:3;11107:18;;10983:148;;;;:::o;11137:390::-;11243:3;11271:39;11304:5;11271:39;:::i;:::-;11326:89;11408:6;11403:3;11326:89;:::i;:::-;11319:96;;11424:65;11482:6;11477:3;11470:4;11463:5;11459:16;11424:65;:::i;:::-;11514:6;11509:3;11505:16;11498:23;;11247:280;11137:390;;;;:::o;11533:435::-;11713:3;11735:95;11826:3;11817:6;11735:95;:::i;:::-;11728:102;;11847:95;11938:3;11929:6;11847:95;:::i;:::-;11840:102;;11959:3;11952:10;;11533:435;;;;;:::o;11974:98::-;12025:6;12059:5;12053:12;12043:22;;11974:98;;;:::o;12078:168::-;12161:11;12195:6;12190:3;12183:19;12235:4;12230:3;12226:14;12211:29;;12078:168;;;;:::o;12252:373::-;12338:3;12366:38;12398:5;12366:38;:::i;:::-;12420:70;12483:6;12478:3;12420:70;:::i;:::-;12413:77;;12499:65;12557:6;12552:3;12545:4;12538:5;12534:16;12499:65;:::i;:::-;12589:29;12611:6;12589:29;:::i;:::-;12584:3;12580:39;12573:46;;12342:283;12252:373;;;;:::o;12631:640::-;12826:4;12864:3;12853:9;12849:19;12841:27;;12878:71;12946:1;12935:9;12931:17;12922:6;12878:71;:::i;:::-;12959:72;13027:2;13016:9;13012:18;13003:6;12959:72;:::i;:::-;13041;13109:2;13098:9;13094:18;13085:6;13041:72;:::i;:::-;13160:9;13154:4;13150:20;13145:2;13134:9;13130:18;13123:48;13188:76;13259:4;13250:6;13188:76;:::i;:::-;13180:84;;12631:640;;;;;;;:::o;13277:141::-;13333:5;13364:6;13358:13;13349:22;;13380:32;13406:5;13380:32;:::i;:::-;13277:141;;;;:::o;13424:349::-;13493:6;13542:2;13530:9;13521:7;13517:23;13513:32;13510:119;;;13548:79;;:::i;:::-;13510:119;13668:1;13693:63;13748:7;13739:6;13728:9;13724:22;13693:63;:::i;:::-;13683:73;;13639:127;13424:349;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1282200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2927",
								"getApproved(uint256)": "7381",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "745",
								"symbol()": "infinite",
								"tokenURI(uint256)": "5534",
								"totalSupply()": "4621",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "17",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "17",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "4416",
								"_extraData(address,address,uint24)": "24",
								"_getApprovedSlotAndAddress(uint256)": "2236",
								"_getAux(address)": "infinite",
								"_initializeOwnershipAt(uint256)": "infinite",
								"_isSenderApprovedOrOwner(address,address,address)": "78",
								"_mint(address,uint256)": "infinite",
								"_mintERC2309(address,uint256)": "infinite",
								"_msgSenderERC721A()": "22",
								"_nextExtraData(address,address,uint256)": "114",
								"_nextInitializedFlag(uint256)": "infinite",
								"_nextTokenId()": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipAt(uint256)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_packOwnershipData(address,uint256)": "61",
								"_packedOwnershipOf(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_setExtraDataAt(uint256,uint24)": "infinite",
								"_startTokenId()": "15",
								"_toString(uint256)": "infinite",
								"_totalBurned()": "infinite",
								"_totalMinted()": "infinite",
								"_unpackedOwnership(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 9604,
									"end": 50056,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 9604,
									"end": 50056,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 9604,
									"end": 50056,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 13655,
									"end": 13809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13729,
									"end": 13734,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13721,
									"end": 13726,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 13721,
									"end": 13734,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13721,
									"end": 13734,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13721,
									"end": 13734,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 13721,
									"end": 13734,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13721,
									"end": 13734,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13721,
									"end": 13734,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 13721,
									"end": 13734,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13721,
									"end": 13734,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 13721,
									"end": 13734,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13721,
									"end": 13734,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13754,
									"end": 13761,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13744,
									"end": 13751,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 13744,
									"end": 13761,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13744,
									"end": 13761,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13744,
									"end": 13761,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 13744,
									"end": 13761,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13744,
									"end": 13761,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13744,
									"end": 13761,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 13744,
									"end": 13761,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13744,
									"end": 13761,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 13744,
									"end": 13761,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13744,
									"end": 13761,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13787,
									"end": 13802,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 13787,
									"end": 13800,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 13787,
									"end": 13800,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13787,
									"end": 13800,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 13787,
									"end": 13802,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13787,
									"end": 13802,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 13787,
									"end": 13802,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13787,
									"end": 13802,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 13787,
									"end": 13802,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13771,
									"end": 13784,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13771,
									"end": 13802,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13771,
									"end": 13802,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13771,
									"end": 13802,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13771,
									"end": 13802,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9604,
									"end": 50056,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 9604,
									"end": 50056,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14135,
									"end": 14225,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 14135,
									"end": 14225,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14191,
									"end": 14198,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14135,
									"end": 14225,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14135,
									"end": 14225,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2776,
									"end": 2782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2833,
									"end": 2835,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2821,
									"end": 2830,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2812,
									"end": 2819,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2808,
									"end": 2831,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2804,
									"end": 2836,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 2839,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2980,
									"end": 2981,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2965,
									"end": 2982,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2959,
									"end": 2983,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2999,
									"end": 3029,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 3032,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 3203,
									"end": 3210,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3194,
									"end": 3200,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3183,
									"end": 3192,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3179,
									"end": 3201,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 3137,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 3221,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3281,
									"end": 3283,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3270,
									"end": 3279,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3260,
									"end": 3285,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3330,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3304,
									"end": 3310,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3301,
									"end": 3331,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 3334,
									"end": 3413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "tag",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 3505,
									"end": 3512,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3496,
									"end": 3502,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3481,
									"end": 3503,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 3439,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "tag",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3231,
									"end": 3523,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2677,
									"end": 3530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3588,
									"end": 3594,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3627,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3536,
									"end": 3635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3689,
									"end": 3766,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3686,
									"end": 3687,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3679,
									"end": 3767,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3786,
									"end": 3790,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 3783,
									"end": 3784,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 3776,
									"end": 3791,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3807,
									"end": 3808,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3815,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3871,
									"end": 3877,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3909,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3902,
									"end": 3906,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3898,
									"end": 3910,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3955,
									"end": 3956,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3949,
									"end": 3953,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3945,
									"end": 3957,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3976,
									"end": 3994,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4032,
									"end": 4036,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 4024,
									"end": 4030,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4020,
									"end": 4037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4094,
									"end": 4096,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4086,
									"end": 4092,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4083,
									"end": 4097,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4063,
									"end": 4081,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4060,
									"end": 4098,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 4113,
									"end": 4131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "tag",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3878,
									"end": 4147,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3827,
									"end": 4147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4228,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4248,
									"end": 4251,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4245,
									"end": 4246,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4282,
									"end": 4286,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4279,
									"end": 4280,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4153,
									"end": 4294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4337,
									"end": 4343,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4384,
									"end": 4386,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4379,
									"end": 4381,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4382,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4364,
									"end": 4387,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4300,
									"end": 4393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4493,
									"end": 4498,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4487,
									"end": 4491,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4483,
									"end": 4499,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4399,
									"end": 4506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4581,
									"end": 4587,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4632,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 4619,
									"end": 4629,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 4684,
									"end": 4750,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4673,
									"end": 4682,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 4654,
									"end": 4751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "tag",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 4802,
									"end": 4810,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4791,
									"end": 4800,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 4772,
									"end": 4811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "tag",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4844,
									"end": 4848,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4840,
									"end": 4849,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4833,
									"end": 4838,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4829,
									"end": 4850,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4893,
									"end": 4897,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4883,
									"end": 4891,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4879,
									"end": 4898,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4872,
									"end": 4877,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4869,
									"end": 4899,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4512,
									"end": 4905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4948,
									"end": 4955,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4977,
									"end": 4982,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4911,
									"end": 4988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5022,
									"end": 5025,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5043,
									"end": 5048,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4994,
									"end": 5054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5110,
									"end": 5119,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 5188,
									"end": 5193,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 5170,
									"end": 5194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "tag",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 5161,
									"end": 5195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "tag",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 5143,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5060,
									"end": 5202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5251,
									"end": 5254,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5277,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5208,
									"end": 5283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 5430,
									"end": 5437,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 5399,
									"end": 5438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "tag",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 5533,
									"end": 5549,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 5509,
									"end": 5550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "tag",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5501,
									"end": 5507,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5494,
									"end": 5498,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5488,
									"end": 5499,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 5460,
									"end": 5551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "tag",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5454,
									"end": 5458,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5447,
									"end": 5552,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5365,
									"end": 5558,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5289,
									"end": 5558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5609,
									"end": 5612,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5564,
									"end": 5637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 5720,
									"end": 5752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "tag",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 5819,
									"end": 5825,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5811,
									"end": 5817,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 5761,
									"end": 5826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "tag",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5696,
									"end": 5832,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5643,
									"end": 5832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5915,
									"end": 5918,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5908,
									"end": 5913,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5905,
									"end": 5919,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 6006,
									"end": 6007,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5999,
									"end": 6004,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 5969,
									"end": 6008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "tag",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5943,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5935,
									"end": 5940,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5931,
									"end": 5944,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5838,
									"end": 6024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6131,
									"end": 6133,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 6126,
									"end": 6129,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6123,
									"end": 6134,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 6197,
									"end": 6202,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6165,
									"end": 6203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "tag",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 6267,
									"end": 6277,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 6249,
									"end": 6278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "tag",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6239,
									"end": 6247,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6235,
									"end": 6279,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6432,
									"end": 6434,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6420,
									"end": 6430,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6453,
									"end": 6461,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "tag",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 6550,
									"end": 6553,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 6532,
									"end": 6554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "tag",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6522,
									"end": 6530,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6518,
									"end": 6555,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6505,
									"end": 6516,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6476,
									"end": 6556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "tag",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "tag",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6030,
									"end": 6573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6633,
									"end": 6641,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6683,
									"end": 6688,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6673,
									"end": 6689,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6579,
									"end": 6696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6746,
									"end": 6752,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 6827,
									"end": 6828,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6823,
									"end": 6829,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 6815,
									"end": 6820,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6812,
									"end": 6813,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 6808,
									"end": 6821,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 6779,
									"end": 6830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "tag",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6775,
									"end": 6831,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 6860,
									"end": 6864,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6854,
									"end": 6858,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6850,
									"end": 6865,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6753,
									"end": 6871,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6702,
									"end": 6871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6952,
									"end": 6956,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 7123,
									"end": 7126,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7117,
									"end": 7121,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 7098,
									"end": 7127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "tag",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7160,
									"end": 7163,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7157,
									"end": 7158,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7147,
									"end": 7151,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7144,
									"end": 7165,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6876,
									"end": 7171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "132"
								},
								{
									"begin": 7326,
									"end": 7329,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 7293,
									"end": 7330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "tag",
									"source": 1,
									"value": "132"
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7387,
									"end": 7393,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7384,
									"end": 7414,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "134"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 7417,
									"end": 7435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "tag",
									"source": 1,
									"value": "134"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "tag",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7487,
									"end": 7498,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 7461,
									"end": 7499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "tag",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 7606,
									"end": 7612,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7598,
									"end": 7604,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7592,
									"end": 7596,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 7546,
									"end": 7613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "tag",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7664,
									"end": 7668,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7696,
									"end": 7698,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 7688,
									"end": 7694,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7685,
									"end": 7699,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 7713,
									"end": 7714,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8393,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "139"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8436,
									"end": 8445,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8431,
									"end": 8434,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 8427,
									"end": 8446,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8421,
									"end": 8447,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "tag",
									"source": 1,
									"value": "139"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "140"
								},
								{
									"begin": 8547,
									"end": 8553,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 8540,
									"end": 8545,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 8487,
									"end": 8554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "tag",
									"source": 1,
									"value": "140"
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8481,
									"end": 8485,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 8474,
									"end": 8555,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8343,
									"end": 8565,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "tag",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7760,
									"end": 7764,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 7756,
									"end": 7765,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 7748,
									"end": 7754,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7744,
									"end": 7766,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "141"
								},
								{
									"begin": 7826,
									"end": 7830,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 7794,
									"end": 7831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "tag",
									"source": 1,
									"value": "141"
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7853,
									"end": 7854,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 1,
									"value": "142"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7881,
									"end": 7888,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7878,
									"end": 7879,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7875,
									"end": 7889,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7960,
									"end": 7969,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7955,
									"end": 7958,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 7951,
									"end": 7970,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7945,
									"end": 7971,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7937,
									"end": 7943,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7930,
									"end": 7972,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8011,
									"end": 8012,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8003,
									"end": 8009,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7999,
									"end": 8013,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8058,
									"end": 8060,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8047,
									"end": 8056,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 8043,
									"end": 8061,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7904,
									"end": 7908,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7897,
									"end": 7909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "142"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8103,
									"end": 8109,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 8094,
									"end": 8101,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8091,
									"end": 8110,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8161,
									"end": 8170,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8156,
									"end": 8159,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 8152,
									"end": 8171,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8146,
									"end": 8172,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "146"
								},
								{
									"begin": 8246,
									"end": 8250,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 8234,
									"end": 8251,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8223,
									"end": 8232,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 8204,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "tag",
									"source": 1,
									"value": "146"
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8196,
									"end": 8202,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8189,
									"end": 8253,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8111,
									"end": 8267,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "tag",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8313,
									"end": 8314,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8309,
									"end": 8310,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 8301,
									"end": 8307,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 8297,
									"end": 8311,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8293,
									"end": 8315,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8287,
									"end": 8291,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 8280,
									"end": 8316,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "tag",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7176,
									"end": 8571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9604,
									"end": 50056,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 9604,
									"end": 50056,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9604,
									"end": 50056,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9604,
									"end": 50056,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9604,
									"end": 50056,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9604,
									"end": 50056,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9604,
									"end": 50056,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 9604,
									"end": 50056,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9604,
									"end": 50056,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220221a51dfe0c2d40109246e4bbbae500da405e5fa7f8aeab1754ecc5c3891e12464736f6c63430008130033",
									".code": [
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9604,
											"end": 50056,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 17864,
											"end": 18494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 17864,
											"end": 18494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 17864,
											"end": 18494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 18748,
											"end": 18846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 18748,
											"end": 18846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 25069,
											"end": 25283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 25069,
											"end": 25283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 25069,
											"end": 25283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24521,
											"end": 24919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 24521,
											"end": 24919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14603,
											"end": 14920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 14603,
											"end": 14920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 28612,
											"end": 31376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 28612,
											"end": 31376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 31467,
											"end": 31654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 31467,
											"end": 31654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 20100,
											"end": 20250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 20100,
											"end": 20250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 20100,
											"end": 20250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 15754,
											"end": 15984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 15754,
											"end": 15984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 15754,
											"end": 15984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 18917,
											"end": 19019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 18917,
											"end": 19019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 25610,
											"end": 25841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 25610,
											"end": 25841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 32235,
											"end": 32631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 32235,
											"end": 32631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 19120,
											"end": 19433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 19120,
											"end": 19433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 19120,
											"end": 19433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 25991,
											"end": 26153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 25991,
											"end": 26153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 25991,
											"end": 26153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17949,
											"end": 17953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18282,
											"end": 18292,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 18267,
											"end": 18292,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 18267,
											"end": 18292,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 18267,
											"end": 18278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18267,
											"end": 18292,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18267,
											"end": 18292,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 18267,
											"end": 18292,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18267,
											"end": 18292,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18267,
											"end": 18368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18267,
											"end": 18368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 18267,
											"end": 18368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18267,
											"end": 18368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18358,
											"end": 18368,
											"name": "PUSH",
											"source": 0,
											"value": "80AC58CD"
										},
										{
											"begin": 18343,
											"end": 18368,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 18343,
											"end": 18368,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 18343,
											"end": 18354,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18343,
											"end": 18368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18343,
											"end": 18368,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 18343,
											"end": 18368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18343,
											"end": 18368,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18267,
											"end": 18368,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 18267,
											"end": 18368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18267,
											"end": 18444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18267,
											"end": 18444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 18267,
											"end": 18444,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18267,
											"end": 18444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18444,
											"name": "PUSH",
											"source": 0,
											"value": "5B5E139F"
										},
										{
											"begin": 18419,
											"end": 18444,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 18419,
											"end": 18444,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 18419,
											"end": 18430,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18419,
											"end": 18444,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18419,
											"end": 18444,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 18419,
											"end": 18444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18419,
											"end": 18444,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18267,
											"end": 18444,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 18267,
											"end": 18444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18248,
											"end": 18444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18248,
											"end": 18444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18802,
											"end": 18815,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18834,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 18827,
											"end": 18839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 18827,
											"end": 18839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25145,
											"end": 25152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25169,
											"end": 25185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25177,
											"end": 25184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25169,
											"end": 25176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 25169,
											"end": 25185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25169,
											"end": 25185,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25169,
											"end": 25185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25164,
											"end": 25228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 25164,
											"end": 25228,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25194,
											"end": 25228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25228,
											"name": "PUSH",
											"source": 0,
											"value": "CF4700E400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25194,
											"end": 25228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25228,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25194,
											"end": 25228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25194,
											"end": 25228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25228,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25228,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25164,
											"end": 25228,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 25164,
											"end": 25228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25261,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25246,
											"end": 25270,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25262,
											"end": 25269,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25270,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25270,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25270,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25246,
											"end": 25270,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25270,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25270,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25270,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25246,
											"end": 25270,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25270,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25246,
											"end": 25270,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25246,
											"end": 25276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25246,
											"end": 25276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25276,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25276,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25246,
											"end": 25276,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25276,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25276,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25246,
											"end": 25276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25239,
											"end": 25276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25239,
											"end": 25276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24609,
											"end": 24622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24625,
											"end": 24641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 24633,
											"end": 24640,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24625,
											"end": 24632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 24625,
											"end": 24641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24625,
											"end": 24641,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 24625,
											"end": 24641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24609,
											"end": 24641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24609,
											"end": 24641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24679,
											"end": 24684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24656,
											"end": 24684,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24656,
											"end": 24684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24656,
											"end": 24675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 24656,
											"end": 24673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 24656,
											"end": 24675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24656,
											"end": 24675,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 24656,
											"end": 24675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24656,
											"end": 24684,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24656,
											"end": 24684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24656,
											"end": 24684,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24652,
											"end": 24824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 24652,
											"end": 24824,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24703,
											"end": 24747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 24720,
											"end": 24725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24727,
											"end": 24746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 24727,
											"end": 24744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 24727,
											"end": 24746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24727,
											"end": 24746,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 24727,
											"end": 24746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24703,
											"end": 24719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 24703,
											"end": 24747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24703,
											"end": 24747,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 24703,
											"end": 24747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24698,
											"end": 24824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 24698,
											"end": 24824,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24774,
											"end": 24809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24774,
											"end": 24809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24774,
											"end": 24809,
											"name": "PUSH",
											"source": 0,
											"value": "CFB3B94200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24774,
											"end": 24809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24774,
											"end": 24809,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24774,
											"end": 24809,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24774,
											"end": 24809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24774,
											"end": 24809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24774,
											"end": 24809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24774,
											"end": 24809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24774,
											"end": 24809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24774,
											"end": 24809,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24774,
											"end": 24809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24774,
											"end": 24809,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24698,
											"end": 24824,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 24698,
											"end": 24824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24652,
											"end": 24824,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 24652,
											"end": 24824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24867,
											"end": 24869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24849,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24834,
											"end": 24858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24850,
											"end": 24857,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24858,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24834,
											"end": 24858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24858,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24834,
											"end": 24858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24834,
											"end": 24858,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24834,
											"end": 24864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24904,
											"end": 24911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24900,
											"end": 24902,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 24912,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24884,
											"end": 24912,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24893,
											"end": 24898,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 24912,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24884,
											"end": 24912,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 24912,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 24884,
											"end": 24912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24884,
											"end": 24912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 24912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24884,
											"end": 24912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 24912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 24912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 24912,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 24912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 24912,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 24599,
											"end": 24919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14664,
											"end": 14671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14888,
											"end": 14903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14888,
											"end": 14901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 14888,
											"end": 14903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14888,
											"end": 14903,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14888,
											"end": 14903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14873,
											"end": 14885,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14873,
											"end": 14885,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14857,
											"end": 14870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14857,
											"end": 14870,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14857,
											"end": 14885,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14857,
											"end": 14903,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14850,
											"end": 14903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14850,
											"end": 14903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28749,
											"end": 28776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28779,
											"end": 28806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 28798,
											"end": 28805,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 28779,
											"end": 28806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28806,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 28779,
											"end": 28806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28749,
											"end": 28806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28749,
											"end": 28806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28862,
											"end": 28866,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28821,
											"end": 28866,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28821,
											"end": 28866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28837,
											"end": 28856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28821,
											"end": 28866,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28821,
											"end": 28866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28821,
											"end": 28866,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28817,
											"end": 28903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 28817,
											"end": 28903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28875,
											"end": 28903,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28875,
											"end": 28903,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28875,
											"end": 28903,
											"name": "PUSH",
											"source": 0,
											"value": "A114810000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28875,
											"end": 28903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28875,
											"end": 28903,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28875,
											"end": 28903,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28875,
											"end": 28903,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28875,
											"end": 28903,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28875,
											"end": 28903,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28875,
											"end": 28903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28875,
											"end": 28903,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28875,
											"end": 28903,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28875,
											"end": 28903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28875,
											"end": 28903,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28817,
											"end": 28903,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 28817,
											"end": 28903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28915,
											"end": 28942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28944,
											"end": 28967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28971,
											"end": 29006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 28998,
											"end": 29005,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28971,
											"end": 28997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 28971,
											"end": 29006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28971,
											"end": 29006,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 28971,
											"end": 29006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28914,
											"end": 29006,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28914,
											"end": 29006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28914,
											"end": 29006,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28914,
											"end": 29006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29103,
											"end": 29171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 29128,
											"end": 29143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 29149,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29151,
											"end": 29170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 29151,
											"end": 29168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 29151,
											"end": 29170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29151,
											"end": 29170,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 29151,
											"end": 29170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29103,
											"end": 29127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 29103,
											"end": 29171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29103,
											"end": 29171,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 29103,
											"end": 29171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29098,
											"end": 29277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 29098,
											"end": 29277,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29190,
											"end": 29233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 29207,
											"end": 29211,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29213,
											"end": 29232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 29213,
											"end": 29230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 29213,
											"end": 29232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29213,
											"end": 29232,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 29213,
											"end": 29232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29190,
											"end": 29206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 29190,
											"end": 29233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29190,
											"end": 29233,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 29190,
											"end": 29233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29185,
											"end": 29277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 29185,
											"end": 29277,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29277,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29242,
											"end": 29277,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29277,
											"name": "PUSH",
											"source": 0,
											"value": "59C896BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29242,
											"end": 29277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29277,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29277,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29242,
											"end": 29277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29277,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29242,
											"end": 29277,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29277,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29277,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29277,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29185,
											"end": 29277,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 29185,
											"end": 29277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29098,
											"end": 29277,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 29098,
											"end": 29277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29306,
											"end": 29307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29292,
											"end": 29308,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29292,
											"end": 29308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29292,
											"end": 29294,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29292,
											"end": 29308,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29292,
											"end": 29308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29292,
											"end": 29308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29288,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 29288,
											"end": 29340,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29317,
											"end": 29340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29317,
											"end": 29340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29317,
											"end": 29340,
											"name": "PUSH",
											"source": 0,
											"value": "EA553B3400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29317,
											"end": 29340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29317,
											"end": 29340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29317,
											"end": 29340,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29317,
											"end": 29340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29317,
											"end": 29340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29317,
											"end": 29340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29317,
											"end": 29340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29317,
											"end": 29340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29317,
											"end": 29340,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29317,
											"end": 29340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29317,
											"end": 29340,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29288,
											"end": 29340,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 29288,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29351,
											"end": 29394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 29373,
											"end": 29377,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29379,
											"end": 29381,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29383,
											"end": 29390,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29392,
											"end": 29393,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29351,
											"end": 29372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 29351,
											"end": 29394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29351,
											"end": 29394,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 29351,
											"end": 29394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29483,
											"end": 29498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29480,
											"end": 29637,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29480,
											"end": 29637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 29480,
											"end": 29637,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29621,
											"end": 29622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29600,
											"end": 29619,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29593,
											"end": 29623,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29480,
											"end": 29637,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 29480,
											"end": 29637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30009,
											"end": 30027,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30028,
											"end": 30032,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30007,
											"end": 30033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30007,
											"end": 30033,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30007,
											"end": 30033,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30007,
											"end": 30033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30007,
											"end": 30033,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30007,
											"end": 30033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30007,
											"end": 30033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30007,
											"end": 30033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30007,
											"end": 30033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30007,
											"end": 30033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30007,
											"end": 30033,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30007,
											"end": 30033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30077,
											"end": 30095,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30096,
											"end": 30098,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30075,
											"end": 30099,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30075,
											"end": 30099,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30075,
											"end": 30099,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30075,
											"end": 30099,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30075,
											"end": 30099,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30075,
											"end": 30099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30075,
											"end": 30099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30075,
											"end": 30099,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30075,
											"end": 30099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30075,
											"end": 30099,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30075,
											"end": 30099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30392,
											"end": 30535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 30428,
											"end": 30430,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30476,
											"end": 30521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 30491,
											"end": 30495,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 30497,
											"end": 30499,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 30501,
											"end": 30520,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30476,
											"end": 30490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 30476,
											"end": 30521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30476,
											"end": 30521,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 30476,
											"end": 30521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11101,
											"end": 11109,
											"name": "PUSH",
											"source": 0,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30448,
											"end": 30521,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 30392,
											"end": 30410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 30392,
											"end": 30535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30392,
											"end": 30535,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 30392,
											"end": 30535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30363,
											"end": 30389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30381,
											"end": 30388,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30389,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30363,
											"end": 30389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30389,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30363,
											"end": 30389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30363,
											"end": 30389,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30535,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30535,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30535,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30703,
											"end": 30704,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11101,
											"end": 11109,
											"name": "PUSH",
											"source": 0,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30652,
											"end": 30671,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30652,
											"end": 30699,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30652,
											"end": 30704,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30648,
											"end": 31265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 30648,
											"end": 31265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30724,
											"end": 30743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30756,
											"end": 30757,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30746,
											"end": 30753,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30746,
											"end": 30757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30724,
											"end": 30757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30724,
											"end": 30757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30911,
											"end": 30912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30877,
											"end": 30894,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30877,
											"end": 30907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30895,
											"end": 30906,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30877,
											"end": 30907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30877,
											"end": 30907,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30877,
											"end": 30907,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30877,
											"end": 30907,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30877,
											"end": 30907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30877,
											"end": 30907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30877,
											"end": 30907,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30877,
											"end": 30907,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30877,
											"end": 30907,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30877,
											"end": 30907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30877,
											"end": 30907,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30877,
											"end": 30907,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30877,
											"end": 30912,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30873,
											"end": 31251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 30873,
											"end": 31251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31013,
											"end": 31026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31013,
											"end": 31026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30998,
											"end": 31009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30998,
											"end": 31026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30994,
											"end": 31233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 30994,
											"end": 31233,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31191,
											"end": 31210,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31175,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31158,
											"end": 31188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31176,
											"end": 31187,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31158,
											"end": 31188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31158,
											"end": 31188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31158,
											"end": 31188,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31210,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30994,
											"end": 31233,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 30994,
											"end": 31233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30873,
											"end": 31251,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 30873,
											"end": 31251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30706,
											"end": 31265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30648,
											"end": 31265,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 30648,
											"end": 31265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31309,
											"end": 31316,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31305,
											"end": 31307,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31290,
											"end": 31317,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31290,
											"end": 31317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31299,
											"end": 31303,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31290,
											"end": 31317,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31290,
											"end": 31317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31290,
											"end": 31317,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 31290,
											"end": 31317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31290,
											"end": 31317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31290,
											"end": 31317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31290,
											"end": 31317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31290,
											"end": 31317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31290,
											"end": 31317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31290,
											"end": 31317,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31290,
											"end": 31317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31290,
											"end": 31317,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 31327,
											"end": 31369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 31348,
											"end": 31352,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31354,
											"end": 31356,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31358,
											"end": 31365,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31367,
											"end": 31368,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31327,
											"end": 31347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 31327,
											"end": 31369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31327,
											"end": 31369,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 31327,
											"end": 31369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28739,
											"end": 31376,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28739,
											"end": 31376,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28739,
											"end": 31376,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31608,
											"end": 31647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 31625,
											"end": 31629,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31631,
											"end": 31633,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31635,
											"end": 31642,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31608,
											"end": 31647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31608,
											"end": 31647,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31608,
											"end": 31647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31608,
											"end": 31647,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31608,
											"end": 31647,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31608,
											"end": 31647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31608,
											"end": 31647,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31608,
											"end": 31647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31608,
											"end": 31647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31608,
											"end": 31647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31608,
											"end": 31647,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31608,
											"end": 31647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31608,
											"end": 31624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 31608,
											"end": 31647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31608,
											"end": 31647,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 31608,
											"end": 31647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20172,
											"end": 20179,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20214,
											"end": 20241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 20233,
											"end": 20240,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20214,
											"end": 20232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 20214,
											"end": 20241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20214,
											"end": 20241,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 20214,
											"end": 20241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20191,
											"end": 20243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20191,
											"end": 20243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15826,
											"end": 15833,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15866,
											"end": 15867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15849,
											"end": 15868,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15849,
											"end": 15868,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15849,
											"end": 15854,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15849,
											"end": 15868,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15849,
											"end": 15868,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15849,
											"end": 15868,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15845,
											"end": 15905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 15845,
											"end": 15905,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15905,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15877,
											"end": 15905,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15905,
											"name": "PUSH",
											"source": 0,
											"value": "8F4EB60400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15877,
											"end": 15905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15905,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15905,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15877,
											"end": 15905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15905,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15877,
											"end": 15905,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15905,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15905,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15905,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15845,
											"end": 15905,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 15845,
											"end": 15905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10069,
											"end": 10082,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15922,
											"end": 15940,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15941,
											"end": 15946,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15922,
											"end": 15977,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15915,
											"end": 15977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15915,
											"end": 15977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18973,
											"end": 18986,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19005,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 18998,
											"end": 19012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 18998,
											"end": 19012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25756,
											"end": 25764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25722,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25723,
											"end": 25742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 25723,
											"end": 25740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 25723,
											"end": 25742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25723,
											"end": 25742,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 25723,
											"end": 25742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25744,
											"end": 25752,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25815,
											"end": 25823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25794,
											"end": 25813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 25794,
											"end": 25811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 25794,
											"end": 25813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25794,
											"end": 25813,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 25794,
											"end": 25813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 25825,
											"end": 25833,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 25779,
											"end": 25834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 32417,
											"end": 32421,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32423,
											"end": 32425,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32427,
											"end": 32434,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 32404,
											"end": 32435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32435,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 32404,
											"end": 32435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32467,
											"end": 32468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32449,
											"end": 32451,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32449,
											"end": 32463,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32449,
											"end": 32463,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32449,
											"end": 32463,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 32449,
											"end": 32468,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32445,
											"end": 32625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 32445,
											"end": 32625,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32487,
											"end": 32543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 32518,
											"end": 32522,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32524,
											"end": 32526,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32528,
											"end": 32535,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32537,
											"end": 32542,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32487,
											"end": 32517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 32487,
											"end": 32543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32487,
											"end": 32543,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 32487,
											"end": 32543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32482,
											"end": 32625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 32482,
											"end": 32625,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32570,
											"end": 32610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32570,
											"end": 32610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32570,
											"end": 32610,
											"name": "PUSH",
											"source": 0,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32570,
											"end": 32610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32570,
											"end": 32610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32570,
											"end": 32610,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32570,
											"end": 32610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32570,
											"end": 32610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32570,
											"end": 32610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32570,
											"end": 32610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32570,
											"end": 32610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32570,
											"end": 32610,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32570,
											"end": 32610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32570,
											"end": 32610,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32482,
											"end": 32625,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 32482,
											"end": 32625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32445,
											"end": 32625,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 32445,
											"end": 32625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19193,
											"end": 19206,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19223,
											"end": 19239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 19231,
											"end": 19238,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19223,
											"end": 19230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 19223,
											"end": 19239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19223,
											"end": 19239,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 19223,
											"end": 19239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19218,
											"end": 19277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 19218,
											"end": 19277,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19248,
											"end": 19277,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19248,
											"end": 19277,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19248,
											"end": 19277,
											"name": "PUSH",
											"source": 0,
											"value": "A14C4B5000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19248,
											"end": 19277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19248,
											"end": 19277,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19248,
											"end": 19277,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19248,
											"end": 19277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19248,
											"end": 19277,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19248,
											"end": 19277,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19248,
											"end": 19277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19248,
											"end": 19277,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19248,
											"end": 19277,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19248,
											"end": 19277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19248,
											"end": 19277,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19218,
											"end": 19277,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 19218,
											"end": 19277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19288,
											"end": 19309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19312,
											"end": 19322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 19312,
											"end": 19320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 19312,
											"end": 19322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19312,
											"end": 19322,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 19312,
											"end": 19322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19288,
											"end": 19322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19288,
											"end": 19322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19364,
											"end": 19365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19345,
											"end": 19352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19339,
											"end": 19360,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19339,
											"end": 19365,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19401,
											"end": 19419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 19411,
											"end": 19418,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19401,
											"end": 19410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 19401,
											"end": 19419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19401,
											"end": 19419,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 19401,
											"end": 19419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 19375,
											"end": 19420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19332,
											"end": 19426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19332,
											"end": 19426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19332,
											"end": 19426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26088,
											"end": 26092,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26111,
											"end": 26129,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26130,
											"end": 26135,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26137,
											"end": 26145,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26104,
											"end": 26146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26104,
											"end": 26146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26402,
											"end": 26679,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 26402,
											"end": 26679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26467,
											"end": 26471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26521,
											"end": 26528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 26502,
											"end": 26515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 26502,
											"end": 26517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26517,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 26502,
											"end": 26517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26528,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26567,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 26502,
											"end": 26567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26554,
											"end": 26567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26554,
											"end": 26567,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26544,
											"end": 26551,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26544,
											"end": 26567,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26567,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 26502,
											"end": 26567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26653,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 26502,
											"end": 26653,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26652,
											"end": 26653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10827,
											"end": 10835,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26604,
											"end": 26621,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26604,
											"end": 26630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26622,
											"end": 26629,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26630,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26604,
											"end": 26630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26630,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26604,
											"end": 26630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26604,
											"end": 26630,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26630,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26653,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26653,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 26502,
											"end": 26653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26483,
											"end": 26653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26483,
											"end": 26653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26402,
											"end": 26679,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26402,
											"end": 26679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26402,
											"end": 26679,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26402,
											"end": 26679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48146,
											"end": 48249,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 48146,
											"end": 48249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48206,
											"end": 48213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48232,
											"end": 48242,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 48225,
											"end": 48242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48225,
											"end": 48242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48146,
											"end": 48249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48146,
											"end": 48249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14135,
											"end": 14225,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 14135,
											"end": 14225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14135,
											"end": 14225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14135,
											"end": 14225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21224,
											"end": 22473,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 21224,
											"end": 22473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21291,
											"end": 21298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21310,
											"end": 21322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21325,
											"end": 21332,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21310,
											"end": 21332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21310,
											"end": 21332,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21390,
											"end": 21394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21371,
											"end": 21386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 21371,
											"end": 21384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 21371,
											"end": 21386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21371,
											"end": 21386,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 21371,
											"end": 21386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21371,
											"end": 21394,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21367,
											"end": 22409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 21367,
											"end": 22409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21423,
											"end": 21436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21423,
											"end": 21436,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21416,
											"end": 21420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21416,
											"end": 21436,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21412,
											"end": 22409,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21412,
											"end": 22409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 21412,
											"end": 22409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21460,
											"end": 21474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21477,
											"end": 21494,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21477,
											"end": 21500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21495,
											"end": 21499,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21477,
											"end": 21500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21477,
											"end": 21500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21477,
											"end": 21500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21477,
											"end": 21500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21477,
											"end": 21500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21477,
											"end": 21500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21477,
											"end": 21500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21477,
											"end": 21500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21477,
											"end": 21500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21477,
											"end": 21500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21477,
											"end": 21500,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21477,
											"end": 21500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21460,
											"end": 21500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21460,
											"end": 21500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21592,
											"end": 21593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10827,
											"end": 10835,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21564,
											"end": 21570,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21564,
											"end": 21588,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21564,
											"end": 21593,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21560,
											"end": 22391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 21560,
											"end": 22391,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22219,
											"end": 22330,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 22219,
											"end": 22330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22236,
											"end": 22237,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22226,
											"end": 22232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22226,
											"end": 22237,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22219,
											"end": 22330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 22219,
											"end": 22330,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22295,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22278,
											"end": 22303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22296,
											"end": 22302,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22296,
											"end": 22302,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22296,
											"end": 22302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22296,
											"end": 22302,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22296,
											"end": 22302,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22296,
											"end": 22302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22296,
											"end": 22302,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22278,
											"end": 22303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22278,
											"end": 22303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22278,
											"end": 22303,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22303,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22269,
											"end": 22303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22269,
											"end": 22303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22219,
											"end": 22330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 22219,
											"end": 22330,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22219,
											"end": 22330,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 22219,
											"end": 22330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22355,
											"end": 22368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22355,
											"end": 22368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22355,
											"end": 22368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22355,
											"end": 22368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22355,
											"end": 22368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 22355,
											"end": 22368,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21560,
											"end": 22391,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 21560,
											"end": 22391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21438,
											"end": 22409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21412,
											"end": 22409,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 21412,
											"end": 22409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21367,
											"end": 22409,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 21367,
											"end": 22409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22435,
											"end": 22466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22435,
											"end": 22466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22435,
											"end": 22466,
											"name": "PUSH",
											"source": 0,
											"value": "DF2D9B4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22435,
											"end": 22466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22435,
											"end": 22466,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22435,
											"end": 22466,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22435,
											"end": 22466,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22435,
											"end": 22466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22435,
											"end": 22466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22435,
											"end": 22466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22435,
											"end": 22466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22435,
											"end": 22466,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22435,
											"end": 22466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22435,
											"end": 22466,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21224,
											"end": 22473,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 21224,
											"end": 22473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21224,
											"end": 22473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21224,
											"end": 22473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21224,
											"end": 22473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21224,
											"end": 22473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27537,
											"end": 28011,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 27537,
											"end": 28011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27636,
											"end": 27663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27665,
											"end": 27688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27704,
											"end": 27742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27745,
											"end": 27760,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27745,
											"end": 27769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27761,
											"end": 27768,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27745,
											"end": 27769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27745,
											"end": 27769,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27745,
											"end": 27769,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27745,
											"end": 27769,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27745,
											"end": 27769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27745,
											"end": 27769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27745,
											"end": 27769,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27745,
											"end": 27769,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27745,
											"end": 27769,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27745,
											"end": 27769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27745,
											"end": 27769,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27704,
											"end": 27769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27704,
											"end": 27769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27919,
											"end": 27937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27896,
											"end": 27937,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27896,
											"end": 27937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 27994,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27969,
											"end": 27995,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27950,
											"end": 27995,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27950,
											"end": 27995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 28005,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27537,
											"end": 28011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27537,
											"end": 28011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27537,
											"end": 28011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27537,
											"end": 28011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26783,
											"end": 27429,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 26783,
											"end": 27429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26928,
											"end": 26939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27090,
											"end": 27106,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27083,
											"end": 27088,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27079,
											"end": 27107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27070,
											"end": 27107,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27070,
											"end": 27107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27248,
											"end": 27264,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27237,
											"end": 27246,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27233,
											"end": 27265,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27220,
											"end": 27265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27220,
											"end": 27265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27396,
											"end": 27411,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27385,
											"end": 27394,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27382,
											"end": 27412,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27374,
											"end": 27379,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27363,
											"end": 27372,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27380,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27357,
											"end": 27413,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 27347,
											"end": 27413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27347,
											"end": 27413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26783,
											"end": 27429,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26783,
											"end": 27429,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26783,
											"end": 27429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26783,
											"end": 27429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26783,
											"end": 27429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26783,
											"end": 27429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33275,
											"end": 33429,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 33275,
											"end": 33429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33275,
											"end": 33429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33275,
											"end": 33429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33275,
											"end": 33429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33275,
											"end": 33429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33275,
											"end": 33429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47473,
											"end": 47777,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 47473,
											"end": 47777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47604,
											"end": 47611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47623,
											"end": 47639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11225,
											"name": "PUSH",
											"source": 0,
											"value": "E8"
										},
										{
											"begin": 47649,
											"end": 47668,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47649,
											"end": 47690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47649,
											"end": 47690,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 47623,
											"end": 47691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47623,
											"end": 47691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11225,
											"name": "PUSH",
											"source": 0,
											"value": "E8"
										},
										{
											"begin": 47716,
											"end": 47747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 47727,
											"end": 47731,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 47733,
											"end": 47735,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 47737,
											"end": 47746,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 47716,
											"end": 47726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 47716,
											"end": 47747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47716,
											"end": 47747,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 47716,
											"end": 47747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47708,
											"end": 47748,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 47708,
											"end": 47748,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47708,
											"end": 47770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47708,
											"end": 47770,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 47701,
											"end": 47770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47701,
											"end": 47770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47701,
											"end": 47770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47473,
											"end": 47777,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 47473,
											"end": 47777,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47473,
											"end": 47777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47473,
											"end": 47777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47473,
											"end": 47777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47473,
											"end": 47777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23006,
											"end": 23449,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 23006,
											"end": 23449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23086,
											"end": 23100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23251,
											"end": 23267,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23244,
											"end": 23249,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23240,
											"end": 23268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23231,
											"end": 23268,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23231,
											"end": 23268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23426,
											"end": 23431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23412,
											"end": 23423,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 23387,
											"end": 23410,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 23383,
											"end": 23424,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 23380,
											"end": 23432,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 23373,
											"end": 23378,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23370,
											"end": 23433,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 23360,
											"end": 23433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23360,
											"end": 23433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23006,
											"end": 23449,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23006,
											"end": 23449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23006,
											"end": 23449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23006,
											"end": 23449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23006,
											"end": 23449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34076,
											"end": 34229,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 34076,
											"end": 34229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34076,
											"end": 34229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34076,
											"end": 34229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34076,
											"end": 34229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34076,
											"end": 34229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34076,
											"end": 34229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34657,
											"end": 35354,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 34657,
											"end": 35354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34815,
											"end": 34819,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34860,
											"end": 34862,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34880,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34835,
											"end": 34880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34880,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 34881,
											"end": 34900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 34881,
											"end": 34898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 34881,
											"end": 34900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34881,
											"end": 34900,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 34881,
											"end": 34900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34902,
											"end": 34906,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34908,
											"end": 34915,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34917,
											"end": 34922,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 34835,
											"end": 34923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 34835,
											"end": 34923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35130,
											"end": 35131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35113,
											"end": 35119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35113,
											"end": 35126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35113,
											"end": 35131,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35109,
											"end": 35338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 35109,
											"end": 35338,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35158,
											"end": 35198,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35158,
											"end": 35198,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35158,
											"end": 35198,
											"name": "PUSH",
											"source": 0,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35158,
											"end": 35198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35158,
											"end": 35198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35158,
											"end": 35198,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35158,
											"end": 35198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35158,
											"end": 35198,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35158,
											"end": 35198,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35158,
											"end": 35198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35158,
											"end": 35198,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35158,
											"end": 35198,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35158,
											"end": 35198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35158,
											"end": 35198,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35109,
											"end": 35338,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 35109,
											"end": 35338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35298,
											"end": 35304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35292,
											"end": 35305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35283,
											"end": 35289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35279,
											"end": 35281,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35275,
											"end": 35290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35268,
											"end": 35306,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35001,
											"end": 35055,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 35001,
											"end": 35055,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 35001,
											"end": 35055,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 34991,
											"end": 35055,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34991,
											"end": 35055,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 34991,
											"end": 35055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34991,
											"end": 34997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34991,
											"end": 35055,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34991,
											"end": 35055,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 34991,
											"end": 35055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34991,
											"end": 35055,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34984,
											"end": 35055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34984,
											"end": 35055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34984,
											"end": 35055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34657,
											"end": 35354,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 34657,
											"end": 35354,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34657,
											"end": 35354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34657,
											"end": 35354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34657,
											"end": 35354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34657,
											"end": 35354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34657,
											"end": 35354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19678,
											"end": 19770,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 19678,
											"end": 19770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19729,
											"end": 19742,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19754,
											"end": 19763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19754,
											"end": 19763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19754,
											"end": 19763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19754,
											"end": 19763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19754,
											"end": 19763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19754,
											"end": 19763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19754,
											"end": 19763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19754,
											"end": 19763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19754,
											"end": 19763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19754,
											"end": 19763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19754,
											"end": 19763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19754,
											"end": 19763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19754,
											"end": 19763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19754,
											"end": 19763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19678,
											"end": 19770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19678,
											"end": 19770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48346,
											"end": 50054,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 48346,
											"end": 50054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48411,
											"end": 48428,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 48839,
											"end": 48843,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 48832,
											"end": 48836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48826,
											"end": 48837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48822,
											"end": 48844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48929,
											"end": 48930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48923,
											"end": 48927,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48916,
											"end": 48931,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49002,
											"end": 49006,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48999,
											"end": 49000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48995,
											"end": 49007,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48988,
											"end": 49007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48988,
											"end": 49007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49082,
											"end": 49083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49077,
											"end": 49080,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49070,
											"end": 49084,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49183,
											"end": 49186,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49417,
											"end": 49422,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49399,
											"end": 49818,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 49399,
											"end": 49818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49425,
											"end": 49426,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 49399,
											"end": 49818,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49399,
											"end": 49818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 49399,
											"end": 49818,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49464,
											"end": 49465,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 49459,
											"end": 49462,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49455,
											"end": 49466,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49448,
											"end": 49466,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 49448,
											"end": 49466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49632,
											"end": 49634,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 49626,
											"end": 49630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49622,
											"end": 49635,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 49618,
											"end": 49620,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 49614,
											"end": 49636,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49609,
											"end": 49612,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49601,
											"end": 49637,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 49724,
											"end": 49726,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 49718,
											"end": 49722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49714,
											"end": 49727,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 49706,
											"end": 49727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49706,
											"end": 49727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49789,
											"end": 49793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49399,
											"end": 49818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 49779,
											"end": 49804,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49399,
											"end": 49818,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 49399,
											"end": 49818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49403,
											"end": 49424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49855,
											"end": 49858,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49850,
											"end": 49853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49846,
											"end": 49859,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49968,
											"end": 49972,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49963,
											"end": 49966,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49959,
											"end": 49973,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49952,
											"end": 49973,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 49952,
											"end": 49973,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50031,
											"end": 50037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50026,
											"end": 50029,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50019,
											"end": 50038,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48449,
											"end": 50048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48449,
											"end": 50048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48449,
											"end": 50048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48346,
											"end": 50054,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48346,
											"end": 50054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48346,
											"end": 50054,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48346,
											"end": 50054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47184,
											"end": 47327,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 47184,
											"end": 47327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47317,
											"end": 47323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47184,
											"end": 47327,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 47184,
											"end": 47327,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47184,
											"end": 47327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47184,
											"end": 47327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47184,
											"end": 47327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47184,
											"end": 47327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 4995,
											"end": 5000,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 4977,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 4975,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4965,
											"end": 5002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5107,
											"end": 5111,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5145,
											"end": 5147,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5134,
											"end": 5143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5130,
											"end": 5148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 5226,
											"end": 5227,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5224,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5211,
											"end": 5228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5202,
											"end": 5208,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 5158,
											"end": 5229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5014,
											"end": 5236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5327,
											"end": 5333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5335,
											"end": 5341,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5386,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5372,
											"end": 5381,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5370,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5359,
											"end": 5382,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5387,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 5390,
											"end": 5469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5510,
											"end": 5511,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 5580,
											"end": 5587,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5577,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5560,
											"end": 5569,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5556,
											"end": 5578,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 5535,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5481,
											"end": 5598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5639,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 5708,
											"end": 5715,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5699,
											"end": 5705,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5697,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5684,
											"end": 5706,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 5663,
											"end": 5716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 5716,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 5716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5608,
											"end": 5726,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5765,
											"end": 5767,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 5836,
											"end": 5843,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5827,
											"end": 5833,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5816,
											"end": 5825,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5812,
											"end": 5834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 5791,
											"end": 5844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5926,
											"end": 5932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5975,
											"end": 5977,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5963,
											"end": 5972,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5954,
											"end": 5961,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5950,
											"end": 5973,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5946,
											"end": 5978,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 5981,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6101,
											"end": 6102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 6171,
											"end": 6178,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6160,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6147,
											"end": 6169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 6126,
											"end": 6179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6116,
											"end": 6179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6116,
											"end": 6179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6072,
											"end": 6189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 6272,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6298,
											"end": 6310,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6202,
											"end": 6318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6412,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 6421,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6560,
											"end": 6583,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 6591,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 6781,
											"end": 6788,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6757,
											"end": 6779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 6736,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6682,
											"end": 6799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6840,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 6906,
											"end": 6913,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6882,
											"end": 6904,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 6864,
											"end": 6914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6809,
											"end": 6924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7231,
											"end": 7308,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7333,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7357,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 7452,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7444,
											"end": 7450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7440,
											"end": 7480,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7580,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7412,
											"end": 7650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7369,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 7717,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 7746,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 7964,
											"end": 7982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 8002,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 8098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8191,
											"end": 8194,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8178,
											"end": 8208,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8224,
											"end": 8240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8217,
											"end": 8244,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8333,
											"end": 8338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 8374,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 8358,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8432,
											"end": 8453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8473,
											"end": 8489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8522,
											"end": 8525,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8513,
											"end": 8519,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8508,
											"end": 8511,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8504,
											"end": 8520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8501,
											"end": 8526,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 8529,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 8619,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8787,
											"end": 8793,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8783,
											"end": 8800,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8779,
											"end": 8806,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 8810,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 9026,
											"end": 9029,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9018,
											"end": 9024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9003,
											"end": 9009,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 8952,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8759,
											"end": 9036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9153,
											"end": 9159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9210,
											"end": 9213,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9198,
											"end": 9207,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9185,
											"end": 9208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9181,
											"end": 9214,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 9535,
											"end": 9542,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9526,
											"end": 9532,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9511,
											"end": 9533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 9490,
											"end": 9543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 9663,
											"end": 9670,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9639,
											"end": 9661,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 9618,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9748,
											"end": 9750,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9720,
											"end": 9752,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9768,
											"end": 9798,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 9801,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 9960,
											"end": 9967,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9940,
											"end": 9949,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9958,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 9906,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9691,
											"end": 9978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10059,
											"end": 10065,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10116,
											"end": 10118,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10113,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10095,
											"end": 10102,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10091,
											"end": 10114,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10087,
											"end": 10119,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 10122,
											"end": 10201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10242,
											"end": 10243,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 10312,
											"end": 10319,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10303,
											"end": 10309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10292,
											"end": 10301,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10288,
											"end": 10310,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 10267,
											"end": 10320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10213,
											"end": 10330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10369,
											"end": 10371,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 10440,
											"end": 10447,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10431,
											"end": 10437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10420,
											"end": 10429,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10416,
											"end": 10438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 10395,
											"end": 10448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10340,
											"end": 10458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10519,
											"end": 10596,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10516,
											"end": 10517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10509,
											"end": 10597,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10620,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 10613,
											"end": 10614,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10606,
											"end": 10621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10640,
											"end": 10644,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10637,
											"end": 10638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10630,
											"end": 10645,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10701,
											"end": 10707,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10738,
											"end": 10739,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10732,
											"end": 10736,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10728,
											"end": 10740,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10785,
											"end": 10786,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10779,
											"end": 10783,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10775,
											"end": 10787,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10862,
											"end": 10866,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 10854,
											"end": 10860,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10924,
											"end": 10926,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10916,
											"end": 10922,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10913,
											"end": 10927,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10893,
											"end": 10911,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10890,
											"end": 10928,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 10943,
											"end": 10961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10708,
											"end": 10977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11085,
											"end": 11096,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11122,
											"end": 11125,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11107,
											"end": 11125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11107,
											"end": 11125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10983,
											"end": 11131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 11304,
											"end": 11309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 11271,
											"end": 11310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 11408,
											"end": 11414,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11403,
											"end": 11406,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 11326,
											"end": 11415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "tag",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11415,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 11482,
											"end": 11488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11477,
											"end": 11480,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11470,
											"end": 11474,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11463,
											"end": 11468,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11459,
											"end": 11475,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 11424,
											"end": 11489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "tag",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11509,
											"end": 11512,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11505,
											"end": 11521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11498,
											"end": 11521,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11498,
											"end": 11521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11247,
											"end": 11527,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11137,
											"end": 11527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11713,
											"end": 11716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 11826,
											"end": 11829,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11817,
											"end": 11823,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 11735,
											"end": 11830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "tag",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11728,
											"end": 11830,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11728,
											"end": 11830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 11938,
											"end": 11941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 11935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 11847,
											"end": 11942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11840,
											"end": 11942,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11840,
											"end": 11942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11959,
											"end": 11962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11952,
											"end": 11962,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11952,
											"end": 11962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11533,
											"end": 11968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11974,
											"end": 12072,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 11974,
											"end": 12072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12025,
											"end": 12031,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12059,
											"end": 12064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12053,
											"end": 12065,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12043,
											"end": 12065,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12043,
											"end": 12065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11974,
											"end": 12072,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11974,
											"end": 12072,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11974,
											"end": 12072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11974,
											"end": 12072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12078,
											"end": 12246,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 12078,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12161,
											"end": 12172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12195,
											"end": 12201,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12190,
											"end": 12193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12183,
											"end": 12202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12235,
											"end": 12239,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12230,
											"end": 12233,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12226,
											"end": 12240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12211,
											"end": 12240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12211,
											"end": 12240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12078,
											"end": 12246,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12078,
											"end": 12246,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12078,
											"end": 12246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12078,
											"end": 12246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12078,
											"end": 12246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12252,
											"end": 12625,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 12252,
											"end": 12625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12338,
											"end": 12341,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12366,
											"end": 12404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 12398,
											"end": 12403,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12366,
											"end": 12404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 12366,
											"end": 12404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12366,
											"end": 12404,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 12366,
											"end": 12404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12420,
											"end": 12490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 12483,
											"end": 12489,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12478,
											"end": 12481,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12420,
											"end": 12490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 12420,
											"end": 12490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12420,
											"end": 12490,
											"name": "tag",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 12420,
											"end": 12490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12413,
											"end": 12490,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12413,
											"end": 12490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12499,
											"end": 12564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 12557,
											"end": 12563,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12552,
											"end": 12555,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12545,
											"end": 12549,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12538,
											"end": 12543,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12534,
											"end": 12550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12499,
											"end": 12564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 12499,
											"end": 12564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12499,
											"end": 12564,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 12499,
											"end": 12564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12589,
											"end": 12618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 12611,
											"end": 12617,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12589,
											"end": 12618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 12589,
											"end": 12618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12589,
											"end": 12618,
											"name": "tag",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 12589,
											"end": 12618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12584,
											"end": 12587,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12580,
											"end": 12619,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12573,
											"end": 12619,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12573,
											"end": 12619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12342,
											"end": 12625,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12252,
											"end": 12625,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12252,
											"end": 12625,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12252,
											"end": 12625,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12252,
											"end": 12625,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12252,
											"end": 12625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12826,
											"end": 12830,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12864,
											"end": 12867,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 12853,
											"end": 12862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12849,
											"end": 12868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12841,
											"end": 12868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12841,
											"end": 12868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12878,
											"end": 12949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 12946,
											"end": 12947,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12935,
											"end": 12944,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12931,
											"end": 12948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12922,
											"end": 12928,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12878,
											"end": 12949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 12878,
											"end": 12949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12878,
											"end": 12949,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 12878,
											"end": 12949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12959,
											"end": 13031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 13027,
											"end": 13029,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13016,
											"end": 13025,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13012,
											"end": 13030,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13003,
											"end": 13009,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12959,
											"end": 13031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 12959,
											"end": 13031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12959,
											"end": 13031,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 12959,
											"end": 13031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13041,
											"end": 13113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 13109,
											"end": 13111,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13098,
											"end": 13107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13094,
											"end": 13112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13085,
											"end": 13091,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13041,
											"end": 13113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 13041,
											"end": 13113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13041,
											"end": 13113,
											"name": "tag",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 13041,
											"end": 13113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13160,
											"end": 13169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13154,
											"end": 13158,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13150,
											"end": 13170,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13145,
											"end": 13147,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13134,
											"end": 13143,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13130,
											"end": 13148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13123,
											"end": 13171,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13188,
											"end": 13264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 13259,
											"end": 13263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13250,
											"end": 13256,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13188,
											"end": 13264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 13188,
											"end": 13264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13188,
											"end": 13264,
											"name": "tag",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 13188,
											"end": 13264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13180,
											"end": 13264,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13180,
											"end": 13264,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12631,
											"end": 13271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13277,
											"end": 13418,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 13277,
											"end": 13418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13333,
											"end": 13338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13364,
											"end": 13370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13358,
											"end": 13371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13349,
											"end": 13371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13349,
											"end": 13371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13380,
											"end": 13412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 13406,
											"end": 13411,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13380,
											"end": 13412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 13380,
											"end": 13412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13380,
											"end": 13412,
											"name": "tag",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 13380,
											"end": 13412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13277,
											"end": 13418,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13277,
											"end": 13418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13277,
											"end": 13418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13277,
											"end": 13418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13277,
											"end": 13418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13424,
											"end": 13773,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 13424,
											"end": 13773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13493,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13542,
											"end": 13544,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13530,
											"end": 13539,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13521,
											"end": 13528,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13517,
											"end": 13540,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13513,
											"end": 13545,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 13510,
											"end": 13629,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13510,
											"end": 13629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 13510,
											"end": 13629,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13548,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 13548,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 13548,
											"end": 13627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13548,
											"end": 13627,
											"name": "tag",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 13548,
											"end": 13627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13510,
											"end": 13629,
											"name": "tag",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 13510,
											"end": 13629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13668,
											"end": 13669,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13693,
											"end": 13756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 13748,
											"end": 13755,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13739,
											"end": 13745,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13728,
											"end": 13737,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13724,
											"end": 13746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13693,
											"end": 13756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 13693,
											"end": 13756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13693,
											"end": 13756,
											"name": "tag",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 13693,
											"end": 13756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13683,
											"end": 13756,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13683,
											"end": 13756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13639,
											"end": 13766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13424,
											"end": 13773,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13424,
											"end": 13773,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13424,
											"end": 13773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13424,
											"end": 13773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13424,
											"end": 13773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/ERC-721A_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721A\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC-721A_flattened.sol\":\"ERC721A\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC-721A_flattened.sol\":{\"keccak256\":\"0xec806a3c709e60327e79deaaa3b73942a5294639b5bc574ebb759d0b7a3b3a12\",\"urls\":[\"bzz-raw://b4d30921cb4fd9ea1f7c942863ae0ce89c76c1a7e83906549de7cb3b786118b4\",\"dweb:/ipfs/QmaipAuMjpZeeVq2kSPwhjbPxAdEjw6aYyHfcvr1yh9nPk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 295,
								"contract": "contracts/ERC-721A_flattened.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 297,
								"contract": "contracts/ERC-721A_flattened.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 299,
								"contract": "contracts/ERC-721A_flattened.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 301,
								"contract": "contracts/ERC-721A_flattened.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 305,
								"contract": "contracts/ERC-721A_flattened.sol:ERC721A",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 309,
								"contract": "contracts/ERC-721A_flattened.sol:ERC721A",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 314,
								"contract": "contracts/ERC-721A_flattened.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)227_storage)"
							},
							{
								"astId": 320,
								"contract": "contracts/ERC-721A_flattened.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)227_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)227_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)227_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 226,
										"contract": "contracts/ERC-721A_flattened.sol:ERC721A",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721A__IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721 token receiver.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721 token receiver.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC-721A_flattened.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC-721A_flattened.sol\":{\"keccak256\":\"0xec806a3c709e60327e79deaaa3b73942a5294639b5bc574ebb759d0b7a3b3a12\",\"urls\":[\"bzz-raw://b4d30921cb4fd9ea1f7c942863ae0ce89c76c1a7e83906549de7cb3b786118b4\",\"dweb:/ipfs/QmaipAuMjpZeeVq2kSPwhjbPxAdEjw6aYyHfcvr1yh9nPk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"GasCompareERC721A": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC-721A_flattened.sol\":50120:50388  contract GasCompareERC721A is ERC721A {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ERC-721A_flattened.sol\":50164:50206  constructor() ERC721A(\"Azuki\", \"AZUKI\") {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/ERC-721A_flattened.sol\":13655:13809  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x417a756b69000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x415a554b49000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/ERC-721A_flattened.sol\":13729:13734  name_ */\n  dup2\n    /* \"contracts/ERC-721A_flattened.sol\":13721:13726  _name */\n  0x02\n    /* \"contracts/ERC-721A_flattened.sol\":13721:13734  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"contracts/ERC-721A_flattened.sol\":13754:13761  symbol_ */\n  dup1\n    /* \"contracts/ERC-721A_flattened.sol\":13744:13751  _symbol */\n  0x03\n    /* \"contracts/ERC-721A_flattened.sol\":13744:13761  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"contracts/ERC-721A_flattened.sol\":13787:13802  _startTokenId() */\n  tag_8\n    /* \"contracts/ERC-721A_flattened.sol\":13787:13800  _startTokenId */\n  shl(0x20, tag_9)\n    /* \"contracts/ERC-721A_flattened.sol\":13787:13802  _startTokenId() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/ERC-721A_flattened.sol\":13771:13784  _currentIndex */\n  0x00\n    /* \"contracts/ERC-721A_flattened.sol\":13771:13802  _currentIndex = _startTokenId() */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ERC-721A_flattened.sol\":13655:13809  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/ERC-721A_flattened.sol\":50120:50388  contract GasCompareERC721A is ERC721A {... */\n  jump(tag_11)\n    /* \"contracts/ERC-721A_flattened.sol\":14135:14225  function _startTokenId() internal view virtual returns (uint256) {... */\ntag_9:\n    /* \"contracts/ERC-721A_flattened.sol\":14191:14198  uint256 */\n  0x00\n    /* \"contracts/ERC-721A_flattened.sol\":14135:14225  function _startTokenId() internal view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_13:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_14:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_15:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_16:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_38:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_40\n  tag_15\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":714:798   */\ntag_39:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_17:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_18:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_19:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_20:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_45\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_19\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1429:1468   */\n  tag_46\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_19\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_21:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_22:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_23:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_50\n    /* \"#utility.yul\":1818:1852   */\n  tag_51\n    /* \"#utility.yul\":1827:1851   */\n  tag_52\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_21\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1818:1852   */\n  tag_22\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1800:1853   */\n  tag_21\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_24:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_25:\n    /* \"#utility.yul\":2056:2095   */\n  tag_55\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_23\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2117:2208   */\n  tag_56\n    /* \"#utility.yul\":2166:2207   */\n  tag_57\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_24\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_20\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_26:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_27:\n    /* \"#utility.yul\":2377:2409   */\n  tag_60\n  tag_26\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2418:2483   */\n  tag_61\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_25\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_28:\n    /* \"#utility.yul\":2555:2675   */\ntag_63:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_66\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_27\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_63)\ntag_65:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_29:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_69\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_17\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2906:2935   */\n  tag_70\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_18\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_71:\n    /* \"#utility.yul\":3133:3213   */\n  tag_72\n    /* \"#utility.yul\":3189:3211   */\n  tag_73\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_18\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_28\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_68:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_30:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_31:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_76\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_30\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_32:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_78\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_31\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_80\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_13\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_82\n  tag_14\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":4038:4094   */\ntag_81:\n    /* \"#utility.yul\":4118:4156   */\n  tag_83\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_16\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":4203:4270   */\n  tag_84\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_29\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_86\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_87:\n    /* \"#utility.yul\":5144:5211   */\n  tag_88\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_32\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_85)\n    /* \"#utility.yul\":4365:4983   */\ntag_86:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_89\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_17\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_90:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_90)\ntag_92:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_94\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_31\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_93:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_85:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ERC-721A_flattened.sol\":50120:50388  contract GasCompareERC721A is ERC721A {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC-721A_flattened.sol\":50120:50388  contract GasCompareERC721A is ERC721A {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_16\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_12\n      jumpi\n      jump(tag_1)\n    tag_17:\n      dup1\n      0x095ea7b3\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC-721A_flattened.sol\":17864:18494  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC-721A_flattened.sol\":18748:18846  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC-721A_flattened.sol\":25069:25283  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC-721A_flattened.sol\":24521:24919  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_5:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"contracts/ERC-721A_flattened.sol\":14603:14920  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC-721A_flattened.sol\":28612:31376  function transferFrom(... */\n    tag_7:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"contracts/ERC-721A_flattened.sol\":31467:31654  function safeTransferFrom(... */\n    tag_8:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/ERC-721A_flattened.sol\":20100:20250  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC-721A_flattened.sol\":15754:15984  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC-721A_flattened.sol\":18917:19019  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC-721A_flattened.sol\":50212:50386  function mint(uint256 quantity) external payable {... */\n    tag_12:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      stop\n        /* \"contracts/ERC-721A_flattened.sol\":25610:25841  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      stop\n        /* \"contracts/ERC-721A_flattened.sol\":32235:32631  function safeTransferFrom(... */\n    tag_14:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      stop\n        /* \"contracts/ERC-721A_flattened.sol\":19120:19433  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC-721A_flattened.sol\":25991:26153  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC-721A_flattened.sol\":17864:18494  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_24:\n        /* \"contracts/ERC-721A_flattened.sol\":17949:17953  bool */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":18282:18292  0x01ffc9a7 */\n      0x01ffc9a7\n        /* \"contracts/ERC-721A_flattened.sol\":18267:18292  interfaceId == 0x01ffc9a7 */\n      0xe0\n      shl\n        /* \"contracts/ERC-721A_flattened.sol\":18267:18278  interfaceId */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":18267:18292  interfaceId == 0x01ffc9a7 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC-721A_flattened.sol\":18267:18368  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_94\n      jumpi\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":18358:18368  0x80ac58cd */\n      0x80ac58cd\n        /* \"contracts/ERC-721A_flattened.sol\":18343:18368  interfaceId == 0x80ac58cd */\n      0xe0\n      shl\n        /* \"contracts/ERC-721A_flattened.sol\":18343:18354  interfaceId */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":18343:18368  interfaceId == 0x80ac58cd */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC-721A_flattened.sol\":18267:18368  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_94:\n        /* \"contracts/ERC-721A_flattened.sol\":18267:18444  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_95\n      jumpi\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":18434:18444  0x5b5e139f */\n      0x5b5e139f\n        /* \"contracts/ERC-721A_flattened.sol\":18419:18444  interfaceId == 0x5b5e139f */\n      0xe0\n      shl\n        /* \"contracts/ERC-721A_flattened.sol\":18419:18430  interfaceId */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":18419:18444  interfaceId == 0x5b5e139f */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC-721A_flattened.sol\":18267:18444  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_95:\n        /* \"contracts/ERC-721A_flattened.sol\":18248:18444  return... */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":17864:18494  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":18748:18846  function name() public view virtual override returns (string memory) {... */\n    tag_29:\n        /* \"contracts/ERC-721A_flattened.sol\":18802:18815  string memory */\n      0x60\n        /* \"contracts/ERC-721A_flattened.sol\":18834:18839  _name */\n      0x02\n        /* \"contracts/ERC-721A_flattened.sol\":18827:18839  return _name */\n      dup1\n      sload\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_99\n      swap1\n      tag_98\n      jump\t// in\n    tag_99:\n      dup1\n      iszero\n      tag_100\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_101\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_100)\n    tag_101:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_102:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_102\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_100:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":18748:18846  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":25069:25283  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_36:\n        /* \"contracts/ERC-721A_flattened.sol\":25145:25152  address */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":25169:25185  _exists(tokenId) */\n      tag_104\n        /* \"contracts/ERC-721A_flattened.sol\":25177:25184  tokenId */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":25169:25176  _exists */\n      tag_105\n        /* \"contracts/ERC-721A_flattened.sol\":25169:25185  _exists(tokenId) */\n      jump\t// in\n    tag_104:\n        /* \"contracts/ERC-721A_flattened.sol\":25164:25228  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_106\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":25194:25228  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      0xcf4700e400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC-721A_flattened.sol\":25164:25228  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_106:\n        /* \"contracts/ERC-721A_flattened.sol\":25246:25261  _tokenApprovals */\n      0x06\n        /* \"contracts/ERC-721A_flattened.sol\":25246:25270  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":25262:25269  tokenId */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":25246:25270  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC-721A_flattened.sol\":25246:25276  _tokenApprovals[tokenId].value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":25239:25276  return _tokenApprovals[tokenId].value */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":25069:25283  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":24521:24919  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_42:\n        /* \"contracts/ERC-721A_flattened.sol\":24609:24622  address owner */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":24625:24641  ownerOf(tokenId) */\n      tag_108\n        /* \"contracts/ERC-721A_flattened.sol\":24633:24640  tokenId */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":24625:24632  ownerOf */\n      tag_58\n        /* \"contracts/ERC-721A_flattened.sol\":24625:24641  ownerOf(tokenId) */\n      jump\t// in\n    tag_108:\n        /* \"contracts/ERC-721A_flattened.sol\":24609:24641  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":24679:24684  owner */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":24656:24684  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":24656:24675  _msgSenderERC721A() */\n      tag_109\n        /* \"contracts/ERC-721A_flattened.sol\":24656:24673  _msgSenderERC721A */\n      tag_110\n        /* \"contracts/ERC-721A_flattened.sol\":24656:24675  _msgSenderERC721A() */\n      jump\t// in\n    tag_109:\n        /* \"contracts/ERC-721A_flattened.sol\":24656:24684  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC-721A_flattened.sol\":24652:24824  if (_msgSenderERC721A() != owner)... */\n      tag_111\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":24703:24747  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_112\n        /* \"contracts/ERC-721A_flattened.sol\":24720:24725  owner */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":24727:24746  _msgSenderERC721A() */\n      tag_113\n        /* \"contracts/ERC-721A_flattened.sol\":24727:24744  _msgSenderERC721A */\n      tag_110\n        /* \"contracts/ERC-721A_flattened.sol\":24727:24746  _msgSenderERC721A() */\n      jump\t// in\n    tag_113:\n        /* \"contracts/ERC-721A_flattened.sol\":24703:24719  isApprovedForAll */\n      tag_91\n        /* \"contracts/ERC-721A_flattened.sol\":24703:24747  isApprovedForAll(owner, _msgSenderERC721A()) */\n      jump\t// in\n    tag_112:\n        /* \"contracts/ERC-721A_flattened.sol\":24698:24824  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_114\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":24774:24809  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0xcfb3b94200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC-721A_flattened.sol\":24698:24824  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n    tag_114:\n        /* \"contracts/ERC-721A_flattened.sol\":24652:24824  if (_msgSenderERC721A() != owner)... */\n    tag_111:\n        /* \"contracts/ERC-721A_flattened.sol\":24867:24869  to */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":24834:24849  _tokenApprovals */\n      0x06\n        /* \"contracts/ERC-721A_flattened.sol\":24834:24858  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":24850:24857  tokenId */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":24834:24858  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC-721A_flattened.sol\":24834:24864  _tokenApprovals[tokenId].value */\n      0x00\n      add\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":24834:24869  _tokenApprovals[tokenId].value = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":24904:24911  tokenId */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":24900:24902  to */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":24884:24912  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":24893:24898  owner */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":24884:24912  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC-721A_flattened.sol\":24599:24919  {... */\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":24521:24919  function approve(address to, uint256 tokenId) public payable virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":14603:14920  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_45:\n        /* \"contracts/ERC-721A_flattened.sol\":14664:14671  uint256 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":14888:14903  _startTokenId() */\n      tag_116\n        /* \"contracts/ERC-721A_flattened.sol\":14888:14901  _startTokenId */\n      tag_117\n        /* \"contracts/ERC-721A_flattened.sol\":14888:14903  _startTokenId() */\n      jump\t// in\n    tag_116:\n        /* \"contracts/ERC-721A_flattened.sol\":14873:14885  _burnCounter */\n      sload(0x01)\n        /* \"contracts/ERC-721A_flattened.sol\":14857:14870  _currentIndex */\n      sload(0x00)\n        /* \"contracts/ERC-721A_flattened.sol\":14857:14885  _currentIndex - _burnCounter */\n      sub\n        /* \"contracts/ERC-721A_flattened.sol\":14857:14903  _currentIndex - _burnCounter - _startTokenId() */\n      sub\n        /* \"contracts/ERC-721A_flattened.sol\":14850:14903  return _currentIndex - _burnCounter - _startTokenId() */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":14603:14920  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":28612:31376  function transferFrom(... */\n    tag_51:\n        /* \"contracts/ERC-721A_flattened.sol\":28749:28776  uint256 prevOwnershipPacked */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":28779:28806  _packedOwnershipOf(tokenId) */\n      tag_119\n        /* \"contracts/ERC-721A_flattened.sol\":28798:28805  tokenId */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":28779:28797  _packedOwnershipOf */\n      tag_120\n        /* \"contracts/ERC-721A_flattened.sol\":28779:28806  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_119:\n        /* \"contracts/ERC-721A_flattened.sol\":28749:28806  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":28862:28866  from */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":28821:28866  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":28837:28856  prevOwnershipPacked */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":28821:28866  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC-721A_flattened.sol\":28817:28903  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n      tag_121\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":28875:28903  TransferFromIncorrectOwner() */\n      mload(0x40)\n      0xa114810000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC-721A_flattened.sol\":28817:28903  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n    tag_121:\n        /* \"contracts/ERC-721A_flattened.sol\":28915:28942  uint256 approvedAddressSlot */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":28944:28967  address approvedAddress */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":28971:29006  _getApprovedSlotAndAddress(tokenId) */\n      tag_122\n        /* \"contracts/ERC-721A_flattened.sol\":28998:29005  tokenId */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":28971:28997  _getApprovedSlotAndAddress */\n      tag_123\n        /* \"contracts/ERC-721A_flattened.sol\":28971:29006  _getApprovedSlotAndAddress(tokenId) */\n      jump\t// in\n    tag_122:\n        /* \"contracts/ERC-721A_flattened.sol\":28914:29006  (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":29103:29171  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      tag_124\n        /* \"contracts/ERC-721A_flattened.sol\":29128:29143  approvedAddress */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":29145:29149  from */\n      dup8\n        /* \"contracts/ERC-721A_flattened.sol\":29151:29170  _msgSenderERC721A() */\n      tag_125\n        /* \"contracts/ERC-721A_flattened.sol\":29151:29168  _msgSenderERC721A */\n      tag_110\n        /* \"contracts/ERC-721A_flattened.sol\":29151:29170  _msgSenderERC721A() */\n      jump\t// in\n    tag_125:\n        /* \"contracts/ERC-721A_flattened.sol\":29103:29127  _isSenderApprovedOrOwner */\n      tag_126\n        /* \"contracts/ERC-721A_flattened.sol\":29103:29171  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/ERC-721A_flattened.sol\":29098:29277  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_127\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":29190:29233  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_128\n        /* \"contracts/ERC-721A_flattened.sol\":29207:29211  from */\n      dup7\n        /* \"contracts/ERC-721A_flattened.sol\":29213:29232  _msgSenderERC721A() */\n      tag_129\n        /* \"contracts/ERC-721A_flattened.sol\":29213:29230  _msgSenderERC721A */\n      tag_110\n        /* \"contracts/ERC-721A_flattened.sol\":29213:29232  _msgSenderERC721A() */\n      jump\t// in\n    tag_129:\n        /* \"contracts/ERC-721A_flattened.sol\":29190:29206  isApprovedForAll */\n      tag_91\n        /* \"contracts/ERC-721A_flattened.sol\":29190:29233  isApprovedForAll(from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/ERC-721A_flattened.sol\":29185:29277  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n      tag_130\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":29242:29277  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0x59c896be00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC-721A_flattened.sol\":29185:29277  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n    tag_130:\n        /* \"contracts/ERC-721A_flattened.sol\":29098:29277  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n    tag_127:\n        /* \"contracts/ERC-721A_flattened.sol\":29306:29307  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":29292:29308  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":29292:29294  to */\n      dup6\n        /* \"contracts/ERC-721A_flattened.sol\":29292:29308  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC-721A_flattened.sol\":29288:29340  if (to == address(0)) revert TransferToZeroAddress() */\n      tag_131\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":29317:29340  TransferToZeroAddress() */\n      mload(0x40)\n      0xea553b3400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC-721A_flattened.sol\":29288:29340  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_131:\n        /* \"contracts/ERC-721A_flattened.sol\":29351:29394  _beforeTokenTransfers(from, to, tokenId, 1) */\n      tag_132\n        /* \"contracts/ERC-721A_flattened.sol\":29373:29377  from */\n      dup7\n        /* \"contracts/ERC-721A_flattened.sol\":29379:29381  to */\n      dup7\n        /* \"contracts/ERC-721A_flattened.sol\":29383:29390  tokenId */\n      dup7\n        /* \"contracts/ERC-721A_flattened.sol\":29392:29393  1 */\n      0x01\n        /* \"contracts/ERC-721A_flattened.sol\":29351:29372  _beforeTokenTransfers */\n      tag_133\n        /* \"contracts/ERC-721A_flattened.sol\":29351:29394  _beforeTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_132:\n        /* \"contracts/ERC-721A_flattened.sol\":29483:29498  approvedAddress */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":29480:29637  if approvedAddress {... */\n      iszero\n      tag_134\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":29621:29622  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":29600:29619  approvedAddressSlot */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":29593:29623  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"contracts/ERC-721A_flattened.sol\":29480:29637  if approvedAddress {... */\n    tag_134:\n        /* \"contracts/ERC-721A_flattened.sol\":30009:30027  _packedAddressData */\n      0x05\n        /* \"contracts/ERC-721A_flattened.sol\":30009:30033  _packedAddressData[from] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":30028:30032  from */\n      dup8\n        /* \"contracts/ERC-721A_flattened.sol\":30009:30033  _packedAddressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":30007:30033  --_packedAddressData[from] */\n      dup2\n      sload\n      0x01\n      swap1\n      sub\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":30077:30095  _packedAddressData */\n      0x05\n        /* \"contracts/ERC-721A_flattened.sol\":30077:30099  _packedAddressData[to] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":30096:30098  to */\n      dup7\n        /* \"contracts/ERC-721A_flattened.sol\":30077:30099  _packedAddressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":30075:30099  ++_packedAddressData[to] */\n      dup2\n      sload\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":30392:30535  _packOwnershipData(... */\n      tag_135\n        /* \"contracts/ERC-721A_flattened.sol\":30428:30430  to */\n      dup6\n        /* \"contracts/ERC-721A_flattened.sol\":30476:30521  _nextExtraData(from, to, prevOwnershipPacked) */\n      tag_136\n        /* \"contracts/ERC-721A_flattened.sol\":30491:30495  from */\n      dup9\n        /* \"contracts/ERC-721A_flattened.sol\":30497:30499  to */\n      dup9\n        /* \"contracts/ERC-721A_flattened.sol\":30501:30520  prevOwnershipPacked */\n      dup8\n        /* \"contracts/ERC-721A_flattened.sol\":30476:30490  _nextExtraData */\n      tag_137\n        /* \"contracts/ERC-721A_flattened.sol\":30476:30521  _nextExtraData(from, to, prevOwnershipPacked) */\n      jump\t// in\n    tag_136:\n        /* \"contracts/ERC-721A_flattened.sol\":11101:11109  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"contracts/ERC-721A_flattened.sol\":30448:30521  _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked) */\n      or\n        /* \"contracts/ERC-721A_flattened.sol\":30392:30410  _packOwnershipData */\n      tag_138\n        /* \"contracts/ERC-721A_flattened.sol\":30392:30535  _packOwnershipData(... */\n      jump\t// in\n    tag_135:\n        /* \"contracts/ERC-721A_flattened.sol\":30363:30380  _packedOwnerships */\n      0x04\n        /* \"contracts/ERC-721A_flattened.sol\":30363:30389  _packedOwnerships[tokenId] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":30381:30388  tokenId */\n      dup7\n        /* \"contracts/ERC-721A_flattened.sol\":30363:30389  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC-721A_flattened.sol\":30363:30535  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":30703:30704  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":11101:11109  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"contracts/ERC-721A_flattened.sol\":30652:30671  prevOwnershipPacked */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":30652:30699  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":30652:30704  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0 */\n      sub\n        /* \"contracts/ERC-721A_flattened.sol\":30648:31265  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_139\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":30724:30743  uint256 nextTokenId */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":30756:30757  1 */\n      0x01\n        /* \"contracts/ERC-721A_flattened.sol\":30746:30753  tokenId */\n      dup6\n        /* \"contracts/ERC-721A_flattened.sol\":30746:30757  tokenId + 1 */\n      add\n        /* \"contracts/ERC-721A_flattened.sol\":30724:30757  uint256 nextTokenId = tokenId + 1 */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":30911:30912  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":30877:30894  _packedOwnerships */\n      0x04\n        /* \"contracts/ERC-721A_flattened.sol\":30877:30907  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":30895:30906  nextTokenId */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":30877:30907  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC-721A_flattened.sol\":30877:30912  _packedOwnerships[nextTokenId] == 0 */\n      sub\n        /* \"contracts/ERC-721A_flattened.sol\":30873:31251  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_140\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":31013:31026  _currentIndex */\n      sload(0x00)\n        /* \"contracts/ERC-721A_flattened.sol\":30998:31009  nextTokenId */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":30998:31026  nextTokenId != _currentIndex */\n      eq\n        /* \"contracts/ERC-721A_flattened.sol\":30994:31233  if (nextTokenId != _currentIndex) {... */\n      tag_141\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":31191:31210  prevOwnershipPacked */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":31158:31175  _packedOwnerships */\n      0x04\n        /* \"contracts/ERC-721A_flattened.sol\":31158:31188  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":31176:31187  nextTokenId */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":31158:31188  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC-721A_flattened.sol\":31158:31210  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":30994:31233  if (nextTokenId != _currentIndex) {... */\n    tag_141:\n        /* \"contracts/ERC-721A_flattened.sol\":30873:31251  if (_packedOwnerships[nextTokenId] == 0) {... */\n    tag_140:\n        /* \"contracts/ERC-721A_flattened.sol\":30706:31265  {... */\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":30648:31265  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_139:\n        /* \"contracts/ERC-721A_flattened.sol\":31309:31316  tokenId */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":31305:31307  to */\n      dup6\n        /* \"contracts/ERC-721A_flattened.sol\":31290:31317  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":31299:31303  from */\n      dup8\n        /* \"contracts/ERC-721A_flattened.sol\":31290:31317  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC-721A_flattened.sol\":31327:31369  _afterTokenTransfers(from, to, tokenId, 1) */\n      tag_142\n        /* \"contracts/ERC-721A_flattened.sol\":31348:31352  from */\n      dup7\n        /* \"contracts/ERC-721A_flattened.sol\":31354:31356  to */\n      dup7\n        /* \"contracts/ERC-721A_flattened.sol\":31358:31365  tokenId */\n      dup7\n        /* \"contracts/ERC-721A_flattened.sol\":31367:31368  1 */\n      0x01\n        /* \"contracts/ERC-721A_flattened.sol\":31327:31347  _afterTokenTransfers */\n      tag_143\n        /* \"contracts/ERC-721A_flattened.sol\":31327:31369  _afterTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_142:\n        /* \"contracts/ERC-721A_flattened.sol\":28739:31376  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":28612:31376  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":31467:31654  function safeTransferFrom(... */\n    tag_54:\n        /* \"contracts/ERC-721A_flattened.sol\":31608:31647  safeTransferFrom(from, to, tokenId, '') */\n      tag_145\n        /* \"contracts/ERC-721A_flattened.sol\":31625:31629  from */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":31631:31633  to */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":31635:31642  tokenId */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":31608:31647  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":31608:31624  safeTransferFrom */\n      tag_81\n        /* \"contracts/ERC-721A_flattened.sol\":31608:31647  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_145:\n        /* \"contracts/ERC-721A_flattened.sol\":31467:31654  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":20100:20250  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_58:\n        /* \"contracts/ERC-721A_flattened.sol\":20172:20179  address */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":20214:20241  _packedOwnershipOf(tokenId) */\n      tag_147\n        /* \"contracts/ERC-721A_flattened.sol\":20233:20240  tokenId */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":20214:20232  _packedOwnershipOf */\n      tag_120\n        /* \"contracts/ERC-721A_flattened.sol\":20214:20241  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_147:\n        /* \"contracts/ERC-721A_flattened.sol\":20191:20243  return address(uint160(_packedOwnershipOf(tokenId))) */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":20100:20250  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":15754:15984  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_64:\n        /* \"contracts/ERC-721A_flattened.sol\":15826:15833  uint256 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":15866:15867  0 */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":15849:15868  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":15849:15854  owner */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":15849:15868  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC-721A_flattened.sol\":15845:15905  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      tag_149\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":15877:15905  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      0x8f4eb60400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC-721A_flattened.sol\":15845:15905  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_149:\n        /* \"contracts/ERC-721A_flattened.sol\":10069:10082  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"contracts/ERC-721A_flattened.sol\":15922:15940  _packedAddressData */\n      0x05\n        /* \"contracts/ERC-721A_flattened.sol\":15922:15947  _packedAddressData[owner] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":15941:15946  owner */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":15922:15947  _packedAddressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC-721A_flattened.sol\":15922:15977  _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":15915:15977  return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":15754:15984  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":18917:19019  function symbol() public view virtual override returns (string memory) {... */\n    tag_68:\n        /* \"contracts/ERC-721A_flattened.sol\":18973:18986  string memory */\n      0x60\n        /* \"contracts/ERC-721A_flattened.sol\":19005:19012  _symbol */\n      0x03\n        /* \"contracts/ERC-721A_flattened.sol\":18998:19012  return _symbol */\n      dup1\n      sload\n      tag_151\n      swap1\n      tag_98\n      jump\t// in\n    tag_151:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_152\n      swap1\n      tag_98\n      jump\t// in\n    tag_152:\n      dup1\n      iszero\n      tag_153\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_154\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_153)\n    tag_154:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_155:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_155\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_153:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":18917:19019  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":50212:50386  function mint(uint256 quantity) external payable {... */\n    tag_72:\n        /* \"contracts/ERC-721A_flattened.sol\":50352:50379  _mint(msg.sender, quantity) */\n      tag_157\n        /* \"contracts/ERC-721A_flattened.sol\":50358:50368  msg.sender */\n      caller\n        /* \"contracts/ERC-721A_flattened.sol\":50370:50378  quantity */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":50352:50357  _mint */\n      tag_158\n        /* \"contracts/ERC-721A_flattened.sol\":50352:50379  _mint(msg.sender, quantity) */\n      jump\t// in\n    tag_157:\n        /* \"contracts/ERC-721A_flattened.sol\":50212:50386  function mint(uint256 quantity) external payable {... */\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":25610:25841  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_77:\n        /* \"contracts/ERC-721A_flattened.sol\":25756:25764  approved */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":25704:25722  _operatorApprovals */\n      0x07\n        /* \"contracts/ERC-721A_flattened.sol\":25704:25743  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":25723:25742  _msgSenderERC721A() */\n      tag_160\n        /* \"contracts/ERC-721A_flattened.sol\":25723:25740  _msgSenderERC721A */\n      tag_110\n        /* \"contracts/ERC-721A_flattened.sol\":25723:25742  _msgSenderERC721A() */\n      jump\t// in\n    tag_160:\n        /* \"contracts/ERC-721A_flattened.sol\":25704:25743  _operatorApprovals[_msgSenderERC721A()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC-721A_flattened.sol\":25704:25753  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":25744:25752  operator */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":25704:25753  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":25704:25764  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":25815:25823  operator */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":25779:25834  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":25794:25813  _msgSenderERC721A() */\n      tag_161\n        /* \"contracts/ERC-721A_flattened.sol\":25794:25811  _msgSenderERC721A */\n      tag_110\n        /* \"contracts/ERC-721A_flattened.sol\":25794:25813  _msgSenderERC721A() */\n      jump\t// in\n    tag_161:\n        /* \"contracts/ERC-721A_flattened.sol\":25779:25834  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"contracts/ERC-721A_flattened.sol\":25825:25833  approved */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":25779:25834  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      tag_162\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC-721A_flattened.sol\":25610:25841  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":32235:32631  function safeTransferFrom(... */\n    tag_81:\n        /* \"contracts/ERC-721A_flattened.sol\":32404:32435  transferFrom(from, to, tokenId) */\n      tag_164\n        /* \"contracts/ERC-721A_flattened.sol\":32417:32421  from */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":32423:32425  to */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":32427:32434  tokenId */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":32404:32416  transferFrom */\n      tag_51\n        /* \"contracts/ERC-721A_flattened.sol\":32404:32435  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_164:\n        /* \"contracts/ERC-721A_flattened.sol\":32467:32468  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":32449:32451  to */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":32449:32463  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"contracts/ERC-721A_flattened.sol\":32449:32468  to.code.length != 0 */\n      eq\n        /* \"contracts/ERC-721A_flattened.sol\":32445:32625  if (to.code.length != 0)... */\n      tag_165\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":32487:32543  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_166\n        /* \"contracts/ERC-721A_flattened.sol\":32518:32522  from */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":32524:32526  to */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":32528:32535  tokenId */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":32537:32542  _data */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":32487:32517  _checkContractOnERC721Received */\n      tag_167\n        /* \"contracts/ERC-721A_flattened.sol\":32487:32543  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_166:\n        /* \"contracts/ERC-721A_flattened.sol\":32482:32625  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_168\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":32570:32610  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC-721A_flattened.sol\":32482:32625  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_168:\n        /* \"contracts/ERC-721A_flattened.sol\":32445:32625  if (to.code.length != 0)... */\n    tag_165:\n        /* \"contracts/ERC-721A_flattened.sol\":32235:32631  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":19120:19433  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_85:\n        /* \"contracts/ERC-721A_flattened.sol\":19193:19206  string memory */\n      0x60\n        /* \"contracts/ERC-721A_flattened.sol\":19223:19239  _exists(tokenId) */\n      tag_170\n        /* \"contracts/ERC-721A_flattened.sol\":19231:19238  tokenId */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":19223:19230  _exists */\n      tag_105\n        /* \"contracts/ERC-721A_flattened.sol\":19223:19239  _exists(tokenId) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/ERC-721A_flattened.sol\":19218:19277  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_171\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":19248:19277  URIQueryForNonexistentToken() */\n      mload(0x40)\n      0xa14c4b5000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC-721A_flattened.sol\":19218:19277  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_171:\n        /* \"contracts/ERC-721A_flattened.sol\":19288:19309  string memory baseURI */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":19312:19322  _baseURI() */\n      tag_172\n        /* \"contracts/ERC-721A_flattened.sol\":19312:19320  _baseURI */\n      tag_173\n        /* \"contracts/ERC-721A_flattened.sol\":19312:19322  _baseURI() */\n      jump\t// in\n    tag_172:\n        /* \"contracts/ERC-721A_flattened.sol\":19288:19322  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":19364:19365  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":19345:19352  baseURI */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":19339:19360  bytes(baseURI).length */\n      mload\n        /* \"contracts/ERC-721A_flattened.sol\":19339:19365  bytes(baseURI).length != 0 */\n      sub\n        /* \"contracts/ERC-721A_flattened.sol\":19339:19426  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_174\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_175)\n    tag_174:\n        /* \"contracts/ERC-721A_flattened.sol\":19392:19399  baseURI */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":19401:19419  _toString(tokenId) */\n      tag_176\n        /* \"contracts/ERC-721A_flattened.sol\":19411:19418  tokenId */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":19401:19410  _toString */\n      tag_177\n        /* \"contracts/ERC-721A_flattened.sol\":19401:19419  _toString(tokenId) */\n      jump\t// in\n    tag_176:\n        /* \"contracts/ERC-721A_flattened.sol\":19375:19420  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_178\n      swap3\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/ERC-721A_flattened.sol\":19339:19426  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_175:\n        /* \"contracts/ERC-721A_flattened.sol\":19332:19426  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":19120:19433  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":25991:26153  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_91:\n        /* \"contracts/ERC-721A_flattened.sol\":26088:26092  bool */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":26111:26129  _operatorApprovals */\n      0x07\n        /* \"contracts/ERC-721A_flattened.sol\":26111:26136  _operatorApprovals[owner] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":26130:26135  owner */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":26111:26136  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC-721A_flattened.sol\":26111:26146  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":26137:26145  operator */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":26111:26146  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":26104:26146  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":25991:26153  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":26402:26679  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_105:\n        /* \"contracts/ERC-721A_flattened.sol\":26467:26471  bool */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":26521:26528  tokenId */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":26502:26517  _startTokenId() */\n      tag_182\n        /* \"contracts/ERC-721A_flattened.sol\":26502:26515  _startTokenId */\n      tag_117\n        /* \"contracts/ERC-721A_flattened.sol\":26502:26517  _startTokenId() */\n      jump\t// in\n    tag_182:\n        /* \"contracts/ERC-721A_flattened.sol\":26502:26528  _startTokenId() <= tokenId */\n      gt\n      iszero\n        /* \"contracts/ERC-721A_flattened.sol\":26502:26567  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_183\n      jumpi\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":26554:26567  _currentIndex */\n      sload(0x00)\n        /* \"contracts/ERC-721A_flattened.sol\":26544:26551  tokenId */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":26544:26567  tokenId < _currentIndex */\n      lt\n        /* \"contracts/ERC-721A_flattened.sol\":26502:26567  _startTokenId() <= tokenId &&... */\n    tag_183:\n        /* \"contracts/ERC-721A_flattened.sol\":26502:26653  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_184\n      jumpi\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":26652:26653  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":10827:10835  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"contracts/ERC-721A_flattened.sol\":26604:26621  _packedOwnerships */\n      0x04\n        /* \"contracts/ERC-721A_flattened.sol\":26604:26630  _packedOwnerships[tokenId] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":26622:26629  tokenId */\n      dup6\n        /* \"contracts/ERC-721A_flattened.sol\":26604:26630  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC-721A_flattened.sol\":26604:26648  _packedOwnerships[tokenId] & _BITMASK_BURNED */\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":26604:26653  _packedOwnerships[tokenId] & _BITMASK_BURNED == 0 */\n      eq\n        /* \"contracts/ERC-721A_flattened.sol\":26502:26653  _startTokenId() <= tokenId &&... */\n    tag_184:\n        /* \"contracts/ERC-721A_flattened.sol\":26483:26653  return... */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":26402:26679  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":48146:48249  function _msgSenderERC721A() internal view virtual returns (address) {... */\n    tag_110:\n        /* \"contracts/ERC-721A_flattened.sol\":48206:48213  address */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":48232:48242  msg.sender */\n      caller\n        /* \"contracts/ERC-721A_flattened.sol\":48225:48242  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":48146:48249  function _msgSenderERC721A() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":14135:14225  function _startTokenId() internal view virtual returns (uint256) {... */\n    tag_117:\n        /* \"contracts/ERC-721A_flattened.sol\":14191:14198  uint256 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":14135:14225  function _startTokenId() internal view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":21224:22473  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_120:\n        /* \"contracts/ERC-721A_flattened.sol\":21291:21298  uint256 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":21310:21322  uint256 curr */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":21325:21332  tokenId */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":21310:21332  uint256 curr = tokenId */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":21390:21394  curr */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":21371:21386  _startTokenId() */\n      tag_188\n        /* \"contracts/ERC-721A_flattened.sol\":21371:21384  _startTokenId */\n      tag_117\n        /* \"contracts/ERC-721A_flattened.sol\":21371:21386  _startTokenId() */\n      jump\t// in\n    tag_188:\n        /* \"contracts/ERC-721A_flattened.sol\":21371:21394  _startTokenId() <= curr */\n      gt\n        /* \"contracts/ERC-721A_flattened.sol\":21367:22409  if (_startTokenId() <= curr)... */\n      tag_189\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":21423:21436  _currentIndex */\n      sload(0x00)\n        /* \"contracts/ERC-721A_flattened.sol\":21416:21420  curr */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":21416:21436  curr < _currentIndex */\n      lt\n        /* \"contracts/ERC-721A_flattened.sol\":21412:22409  if (curr < _currentIndex) {... */\n      iszero\n      tag_190\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":21460:21474  uint256 packed */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":21477:21494  _packedOwnerships */\n      0x04\n        /* \"contracts/ERC-721A_flattened.sol\":21477:21500  _packedOwnerships[curr] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":21495:21499  curr */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":21477:21500  _packedOwnerships[curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC-721A_flattened.sol\":21460:21500  uint256 packed = _packedOwnerships[curr] */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":21592:21593  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":10827:10835  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"contracts/ERC-721A_flattened.sol\":21564:21570  packed */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":21564:21588  packed & _BITMASK_BURNED */\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":21564:21593  packed & _BITMASK_BURNED == 0 */\n      sub\n        /* \"contracts/ERC-721A_flattened.sol\":21560:22391  if (packed & _BITMASK_BURNED == 0) {... */\n      tag_191\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":22219:22330  while (packed == 0) {... */\n    tag_192:\n        /* \"contracts/ERC-721A_flattened.sol\":22236:22237  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":22226:22232  packed */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":22226:22237  packed == 0 */\n      sub\n        /* \"contracts/ERC-721A_flattened.sol\":22219:22330  while (packed == 0) {... */\n      tag_193\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":22278:22295  _packedOwnerships */\n      0x04\n        /* \"contracts/ERC-721A_flattened.sol\":22278:22303  _packedOwnerships[--curr] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":22296:22302  --curr */\n      dup4\n      0x01\n      swap1\n      sub\n      swap4\n      pop\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":22278:22303  _packedOwnerships[--curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC-721A_flattened.sol\":22269:22303  packed = _packedOwnerships[--curr] */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":22219:22330  while (packed == 0) {... */\n      jump(tag_192)\n    tag_193:\n        /* \"contracts/ERC-721A_flattened.sol\":22362:22368  packed */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":22355:22368  return packed */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_187)\n        /* \"contracts/ERC-721A_flattened.sol\":21560:22391  if (packed & _BITMASK_BURNED == 0) {... */\n    tag_191:\n        /* \"contracts/ERC-721A_flattened.sol\":21438:22409  {... */\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":21412:22409  if (curr < _currentIndex) {... */\n    tag_190:\n        /* \"contracts/ERC-721A_flattened.sol\":21367:22409  if (_startTokenId() <= curr)... */\n    tag_189:\n        /* \"contracts/ERC-721A_flattened.sol\":22435:22466  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      0xdf2d9b4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC-721A_flattened.sol\":21224:22473  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_187:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":27537:28011  function _getApprovedSlotAndAddress(uint256 tokenId)... */\n    tag_123:\n        /* \"contracts/ERC-721A_flattened.sol\":27636:27663  uint256 approvedAddressSlot */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":27665:27688  address approvedAddress */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":27704:27742  TokenApprovalRef storage tokenApproval */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":27745:27760  _tokenApprovals */\n      0x06\n        /* \"contracts/ERC-721A_flattened.sol\":27745:27769  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":27761:27768  tokenId */\n      dup6\n        /* \"contracts/ERC-721A_flattened.sol\":27745:27769  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC-721A_flattened.sol\":27704:27769  TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":27919:27937  tokenApproval.slot */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":27896:27937  approvedAddressSlot := tokenApproval.slot */\n      swap3\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":27975:27994  approvedAddressSlot */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":27969:27995  sload(approvedAddressSlot) */\n      sload\n        /* \"contracts/ERC-721A_flattened.sol\":27950:27995  approvedAddress := sload(approvedAddressSlot) */\n      swap2\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":27882:28005  {... */\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":27537:28011  function _getApprovedSlotAndAddress(uint256 tokenId)... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":26783:27429  function _isSenderApprovedOrOwner(... */\n    tag_126:\n        /* \"contracts/ERC-721A_flattened.sol\":26928:26939  bool result */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":27090:27106  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ERC-721A_flattened.sol\":27083:27088  owner */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":27079:27107  and(owner, _BITMASK_ADDRESS) */\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":27070:27107  owner := and(owner, _BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":27248:27264  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ERC-721A_flattened.sol\":27237:27246  msgSender */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":27233:27265  and(msgSender, _BITMASK_ADDRESS) */\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":27220:27265  msgSender := and(msgSender, _BITMASK_ADDRESS) */\n      swap2\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":27396:27411  approvedAddress */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":27385:27394  msgSender */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":27382:27412  eq(msgSender, approvedAddress) */\n      eq\n        /* \"contracts/ERC-721A_flattened.sol\":27374:27379  owner */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":27363:27372  msgSender */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":27360:27380  eq(msgSender, owner) */\n      eq\n        /* \"contracts/ERC-721A_flattened.sol\":27357:27413  or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      or\n        /* \"contracts/ERC-721A_flattened.sol\":27347:27413  result := or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":26783:27429  function _isSenderApprovedOrOwner(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":33275:33429  function _beforeTokenTransfers(... */\n    tag_133:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":47473:47777  function _nextExtraData(... */\n    tag_137:\n        /* \"contracts/ERC-721A_flattened.sol\":47604:47611  uint256 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":47623:47639  uint24 extraData */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":11222:11225  232 */\n      0xe8\n        /* \"contracts/ERC-721A_flattened.sol\":47649:47668  prevOwnershipPacked */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":47649:47690  prevOwnershipPacked >> _BITPOS_EXTRA_DATA */\n      swap1\n      shr\n        /* \"contracts/ERC-721A_flattened.sol\":47623:47691  uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA) */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":11222:11225  232 */\n      0xe8\n        /* \"contracts/ERC-721A_flattened.sol\":47716:47747  _extraData(from, to, extraData) */\n      tag_198\n        /* \"contracts/ERC-721A_flattened.sol\":47727:47731  from */\n      dup7\n        /* \"contracts/ERC-721A_flattened.sol\":47733:47735  to */\n      dup7\n        /* \"contracts/ERC-721A_flattened.sol\":47737:47746  extraData */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":47716:47726  _extraData */\n      tag_199\n        /* \"contracts/ERC-721A_flattened.sol\":47716:47747  _extraData(from, to, extraData) */\n      jump\t// in\n    tag_198:\n        /* \"contracts/ERC-721A_flattened.sol\":47708:47748  uint256(_extraData(from, to, extraData)) */\n      0xffffff\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":47708:47770  uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA */\n      swap1\n      shl\n        /* \"contracts/ERC-721A_flattened.sol\":47701:47770  return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":47473:47777  function _nextExtraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":23006:23449  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n    tag_138:\n        /* \"contracts/ERC-721A_flattened.sol\":23086:23100  uint256 result */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":23251:23267  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ERC-721A_flattened.sol\":23244:23249  owner */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":23240:23268  and(owner, _BITMASK_ADDRESS) */\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":23231:23268  owner := and(owner, _BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":23426:23431  flags */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":23412:23423  timestamp() */\n      timestamp\n        /* \"contracts/ERC-721A_flattened.sol\":23387:23410  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"contracts/ERC-721A_flattened.sol\":23383:23424  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"contracts/ERC-721A_flattened.sol\":23380:23432  or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags) */\n      or\n        /* \"contracts/ERC-721A_flattened.sol\":23373:23378  owner */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":23370:23433  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n        /* \"contracts/ERC-721A_flattened.sol\":23360:23433  result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":23006:23449  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":34076:34229  function _afterTokenTransfers(... */\n    tag_143:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":35800:38702  function _mint(address to, uint256 quantity) internal virtual {... */\n    tag_158:\n        /* \"contracts/ERC-721A_flattened.sol\":35872:35892  uint256 startTokenId */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":35895:35908  _currentIndex */\n      dup1\n      sload\n        /* \"contracts/ERC-721A_flattened.sol\":35872:35908  uint256 startTokenId = _currentIndex */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":35934:35935  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":35922:35930  quantity */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":35922:35935  quantity == 0 */\n      sub\n        /* \"contracts/ERC-721A_flattened.sol\":35918:35962  if (quantity == 0) revert MintZeroQuantity() */\n      tag_203\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":35944:35962  MintZeroQuantity() */\n      mload(0x40)\n      0xb562e8dd00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC-721A_flattened.sol\":35918:35962  if (quantity == 0) revert MintZeroQuantity() */\n    tag_203:\n        /* \"contracts/ERC-721A_flattened.sol\":35973:36034  _beforeTokenTransfers(address(0), to, startTokenId, quantity) */\n      tag_204\n        /* \"contracts/ERC-721A_flattened.sol\":36003:36004  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":36007:36009  to */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":36011:36023  startTokenId */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":36025:36033  quantity */\n      dup6\n        /* \"contracts/ERC-721A_flattened.sol\":35973:35994  _beforeTokenTransfers */\n      tag_133\n        /* \"contracts/ERC-721A_flattened.sol\":35973:36034  _beforeTokenTransfers(address(0), to, startTokenId, quantity) */\n      jump\t// in\n    tag_204:\n        /* \"contracts/ERC-721A_flattened.sol\":36506:36507  1 */\n      0x01\n        /* \"contracts/ERC-721A_flattened.sol\":10204:10206  64 */\n      0x40\n        /* \"contracts/ERC-721A_flattened.sol\":36476:36477  1 */\n      0x01\n        /* \"contracts/ERC-721A_flattened.sol\":36476:36502  1 << _BITPOS_NUMBER_MINTED */\n      swap1\n      shl\n        /* \"contracts/ERC-721A_flattened.sol\":36475:36507  (1 << _BITPOS_NUMBER_MINTED) | 1 */\n      or\n        /* \"contracts/ERC-721A_flattened.sol\":36463:36471  quantity */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":36463:36508  quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      mul\n        /* \"contracts/ERC-721A_flattened.sol\":36437:36455  _packedAddressData */\n      0x05\n        /* \"contracts/ERC-721A_flattened.sol\":36437:36459  _packedAddressData[to] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":36456:36458  to */\n      dup6\n        /* \"contracts/ERC-721A_flattened.sol\":36437:36459  _packedAddressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":36437:36508  _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":36778:36914  _packOwnershipData(... */\n      tag_205\n        /* \"contracts/ERC-721A_flattened.sol\":36814:36816  to */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":36867:36900  _nextExtraData(address(0), to, 0) */\n      tag_206\n        /* \"contracts/ERC-721A_flattened.sol\":36890:36891  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":36894:36896  to */\n      dup7\n        /* \"contracts/ERC-721A_flattened.sol\":36898:36899  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":36867:36881  _nextExtraData */\n      tag_137\n        /* \"contracts/ERC-721A_flattened.sol\":36867:36900  _nextExtraData(address(0), to, 0) */\n      jump\t// in\n    tag_206:\n        /* \"contracts/ERC-721A_flattened.sol\":36834:36864  _nextInitializedFlag(quantity) */\n      tag_207\n        /* \"contracts/ERC-721A_flattened.sol\":36855:36863  quantity */\n      dup6\n        /* \"contracts/ERC-721A_flattened.sol\":36834:36854  _nextInitializedFlag */\n      tag_208\n        /* \"contracts/ERC-721A_flattened.sol\":36834:36864  _nextInitializedFlag(quantity) */\n      jump\t// in\n    tag_207:\n        /* \"contracts/ERC-721A_flattened.sol\":36834:36900  _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0) */\n      or\n        /* \"contracts/ERC-721A_flattened.sol\":36778:36796  _packOwnershipData */\n      tag_138\n        /* \"contracts/ERC-721A_flattened.sol\":36778:36914  _packOwnershipData(... */\n      jump\t// in\n    tag_205:\n        /* \"contracts/ERC-721A_flattened.sol\":36744:36761  _packedOwnerships */\n      0x04\n        /* \"contracts/ERC-721A_flattened.sol\":36744:36775  _packedOwnerships[startTokenId] */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":36762:36774  startTokenId */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":36744:36775  _packedOwnerships[startTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC-721A_flattened.sol\":36744:36914  _packedOwnerships[startTokenId] = _packOwnershipData(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":36929:36945  uint256 toMasked */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":36959:36970  uint256 end */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":36988:36996  quantity */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":36973:36985  startTokenId */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":36973:36996  startTokenId + quantity */\n      add\n        /* \"contracts/ERC-721A_flattened.sol\":36959:36996  uint256 end = startTokenId + quantity */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":37501:37517  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ERC-721A_flattened.sol\":37497:37499  to */\n      dup6\n        /* \"contracts/ERC-721A_flattened.sol\":37493:37518  and(to, _BITMASK_ADDRESS) */\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":37481:37518  toMasked := and(to, _BITMASK_ADDRESS) */\n      swap2\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":37865:37877  startTokenId */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":37826:37834  toMasked */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":37786:37787  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":37725:37750  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ERC-721A_flattened.sol\":37667:37668  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":37607:37608  0 */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":37581:37909  log4(... */\n      log4\n        /* \"contracts/ERC-721A_flattened.sol\":38229:38230  1 */\n      0x01\n        /* \"contracts/ERC-721A_flattened.sol\":38215:38227  startTokenId */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":38211:38231  add(startTokenId, 1) */\n      add\n        /* \"contracts/ERC-721A_flattened.sol\":38170:38509  for {... */\n    tag_209:\n        /* \"contracts/ERC-721A_flattened.sol\":38269:38272  end */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":38260:38267  tokenId */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":38257:38273  eq(tokenId, end) */\n      eq\n        /* \"contracts/ERC-721A_flattened.sol\":38170:38509  for {... */\n      tag_211\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":38483:38490  tokenId */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":38473:38481  toMasked */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":38470:38471  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":38443:38468  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ERC-721A_flattened.sol\":38440:38441  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":38437:38438  0 */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":38432:38491  log4(0, 0, _TRANSFER_EVENT_SIGNATURE, 0, toMasked, tokenId) */\n      log4\n        /* \"contracts/ERC-721A_flattened.sol\":38321:38322  1 */\n      0x01\n        /* \"contracts/ERC-721A_flattened.sol\":38312:38319  tokenId */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":38308:38323  add(tokenId, 1) */\n      add\n        /* \"contracts/ERC-721A_flattened.sol\":38297:38323  tokenId := add(tokenId, 1) */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":38170:38509  for {... */\n      jump(tag_209)\n    tag_211:\n        /* \"contracts/ERC-721A_flattened.sol\":38174:38249  {... */\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":38552:38553  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":38540:38548  toMasked */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":38540:38553  toMasked == 0 */\n      sub\n        /* \"contracts/ERC-721A_flattened.sol\":38536:38581  if (toMasked == 0) revert MintToZeroAddress() */\n      tag_212\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":38562:38581  MintToZeroAddress() */\n      mload(0x40)\n      0x2e07630000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC-721A_flattened.sol\":38536:38581  if (toMasked == 0) revert MintToZeroAddress() */\n    tag_212:\n        /* \"contracts/ERC-721A_flattened.sol\":38612:38615  end */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":38596:38609  _currentIndex */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":38596:38615  _currentIndex = end */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":36217:38626  unchecked {... */\n      pop\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":38635:38695  _afterTokenTransfers(address(0), to, startTokenId, quantity) */\n      tag_213\n        /* \"contracts/ERC-721A_flattened.sol\":38664:38665  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":38668:38670  to */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":38672:38684  startTokenId */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":38686:38694  quantity */\n      dup6\n        /* \"contracts/ERC-721A_flattened.sol\":38635:38655  _afterTokenTransfers */\n      tag_143\n        /* \"contracts/ERC-721A_flattened.sol\":38635:38695  _afterTokenTransfers(address(0), to, startTokenId, quantity) */\n      jump\t// in\n    tag_213:\n        /* \"contracts/ERC-721A_flattened.sol\":35862:38702  {... */\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":35800:38702  function _mint(address to, uint256 quantity) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":34657:35354  function _checkContractOnERC721Received(... */\n    tag_167:\n        /* \"contracts/ERC-721A_flattened.sol\":34815:34819  bool */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":34860:34862  to */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":34835:34880  ERC721A__IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"contracts/ERC-721A_flattened.sol\":34881:34900  _msgSenderERC721A() */\n      tag_215\n        /* \"contracts/ERC-721A_flattened.sol\":34881:34898  _msgSenderERC721A */\n      tag_110\n        /* \"contracts/ERC-721A_flattened.sol\":34881:34900  _msgSenderERC721A() */\n      jump\t// in\n    tag_215:\n        /* \"contracts/ERC-721A_flattened.sol\":34902:34906  from */\n      dup8\n        /* \"contracts/ERC-721A_flattened.sol\":34908:34915  tokenId */\n      dup7\n        /* \"contracts/ERC-721A_flattened.sol\":34917:34922  _data */\n      dup7\n        /* \"contracts/ERC-721A_flattened.sol\":34835:34923  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_218\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_219\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n      0x01\n    tag_218:\n        /* \"contracts/ERC-721A_flattened.sol\":34831:35348  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_221\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_226\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_225)\n    tag_226:\n      0x60\n      swap2\n      pop\n    tag_225:\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":35130:35131  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":35113:35119  reason */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":35113:35126  reason.length */\n      mload\n        /* \"contracts/ERC-721A_flattened.sol\":35113:35131  reason.length == 0 */\n      sub\n        /* \"contracts/ERC-721A_flattened.sol\":35109:35338  if (reason.length == 0) {... */\n      tag_227\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":35158:35198  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC-721A_flattened.sol\":35109:35338  if (reason.length == 0) {... */\n    tag_227:\n        /* \"contracts/ERC-721A_flattened.sol\":35298:35304  reason */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":35292:35305  mload(reason) */\n      mload\n        /* \"contracts/ERC-721A_flattened.sol\":35283:35289  reason */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":35279:35281  32 */\n      0x20\n        /* \"contracts/ERC-721A_flattened.sol\":35275:35290  add(32, reason) */\n      add\n        /* \"contracts/ERC-721A_flattened.sol\":35268:35306  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"contracts/ERC-721A_flattened.sol\":34831:35348  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_221:\n        /* \"contracts/ERC-721A_flattened.sol\":35001:35055  ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"contracts/ERC-721A_flattened.sol\":34991:35055  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ERC-721A_flattened.sol\":34991:34997  retval */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":34991:35055  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC-721A_flattened.sol\":34984:35055  return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":34657:35354  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":19678:19770  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_173:\n        /* \"contracts/ERC-721A_flattened.sol\":19729:19742  string memory */\n      0x60\n        /* \"contracts/ERC-721A_flattened.sol\":19754:19763  return '' */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":19678:19770  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":48346:50054  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n    tag_177:\n        /* \"contracts/ERC-721A_flattened.sol\":48411:48428  string memory str */\n      0x60\n        /* \"contracts/ERC-721A_flattened.sol\":48839:48843  0xa0 */\n      0xa0\n        /* \"contracts/ERC-721A_flattened.sol\":48832:48836  0x40 */\n      0x40\n        /* \"contracts/ERC-721A_flattened.sol\":48826:48837  mload(0x40) */\n      mload\n        /* \"contracts/ERC-721A_flattened.sol\":48822:48844  add(mload(0x40), 0xa0) */\n      add\n        /* \"contracts/ERC-721A_flattened.sol\":48929:48930  m */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":48923:48927  0x40 */\n      0x40\n        /* \"contracts/ERC-721A_flattened.sol\":48916:48931  mstore(0x40, m) */\n      mstore\n        /* \"contracts/ERC-721A_flattened.sol\":49002:49006  0x20 */\n      0x20\n        /* \"contracts/ERC-721A_flattened.sol\":48999:49000  m */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":48995:49007  sub(m, 0x20) */\n      sub\n        /* \"contracts/ERC-721A_flattened.sol\":48988:49007  str := sub(m, 0x20) */\n      swap2\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":49082:49083  0 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":49077:49080  str */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":49070:49084  mstore(str, 0) */\n      mstore\n        /* \"contracts/ERC-721A_flattened.sol\":49183:49186  str */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":49417:49422  value */\n      dup4\n        /* \"contracts/ERC-721A_flattened.sol\":49399:49818  for { let temp := value } 1 {} {... */\n    tag_232:\n        /* \"contracts/ERC-721A_flattened.sol\":49425:49426  1 */\n      0x01\n        /* \"contracts/ERC-721A_flattened.sol\":49399:49818  for { let temp := value } 1 {} {... */\n      iszero\n      tag_234\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":49464:49465  1 */\n      0x01\n        /* \"contracts/ERC-721A_flattened.sol\":49459:49462  str */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":49455:49466  sub(str, 1) */\n      sub\n        /* \"contracts/ERC-721A_flattened.sol\":49448:49466  str := sub(str, 1) */\n      swap4\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":49632:49634  10 */\n      0x0a\n        /* \"contracts/ERC-721A_flattened.sol\":49626:49630  temp */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":49622:49635  mod(temp, 10) */\n      mod\n        /* \"contracts/ERC-721A_flattened.sol\":49618:49620  48 */\n      0x30\n        /* \"contracts/ERC-721A_flattened.sol\":49614:49636  add(48, mod(temp, 10)) */\n      add\n        /* \"contracts/ERC-721A_flattened.sol\":49609:49612  str */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":49601:49637  mstore8(str, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"contracts/ERC-721A_flattened.sol\":49724:49726  10 */\n      0x0a\n        /* \"contracts/ERC-721A_flattened.sol\":49718:49722  temp */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":49714:49727  div(temp, 10) */\n      div\n        /* \"contracts/ERC-721A_flattened.sol\":49706:49727  temp := div(temp, 10) */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":49789:49793  temp */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":49399:49818  for { let temp := value } 1 {} {... */\n      tag_232\n        /* \"contracts/ERC-721A_flattened.sol\":49779:49804  if iszero(temp) { break } */\n      jumpi\n        /* \"contracts/ERC-721A_flattened.sol\":49399:49818  for { let temp := value } 1 {} {... */\n    tag_234:\n        /* \"contracts/ERC-721A_flattened.sol\":49403:49424  { let temp := value } */\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":49855:49858  str */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":49850:49853  end */\n      dup2\n        /* \"contracts/ERC-721A_flattened.sol\":49846:49859  sub(end, str) */\n      sub\n        /* \"contracts/ERC-721A_flattened.sol\":49968:49972  0x20 */\n      0x20\n        /* \"contracts/ERC-721A_flattened.sol\":49963:49966  str */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":49959:49973  sub(str, 0x20) */\n      sub\n        /* \"contracts/ERC-721A_flattened.sol\":49952:49973  str := sub(str, 0x20) */\n      swap4\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":50031:50037  length */\n      dup1\n        /* \"contracts/ERC-721A_flattened.sol\":50026:50029  str */\n      dup5\n        /* \"contracts/ERC-721A_flattened.sol\":50019:50038  mstore(str, length) */\n      mstore\n        /* \"contracts/ERC-721A_flattened.sol\":48449:50048  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":48346:50054  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":47184:47327  function _extraData(... */\n    tag_199:\n        /* \"contracts/ERC-721A_flattened.sol\":47317:47323  uint24 */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":47184:47327  function _extraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC-721A_flattened.sol\":23546:23864  function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {... */\n    tag_208:\n        /* \"contracts/ERC-721A_flattened.sol\":23616:23630  uint256 result */\n      0x00\n        /* \"contracts/ERC-721A_flattened.sol\":23845:23846  1 */\n      0x01\n        /* \"contracts/ERC-721A_flattened.sol\":23835:23843  quantity */\n      dup3\n        /* \"contracts/ERC-721A_flattened.sol\":23832:23847  eq(quantity, 1) */\n      eq\n        /* \"contracts/ERC-721A_flattened.sol\":23806:23830  _BITPOS_NEXT_INITIALIZED */\n      0xe1\n        /* \"contracts/ERC-721A_flattened.sol\":23802:23848  shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1)) */\n      shl\n        /* \"contracts/ERC-721A_flattened.sol\":23792:23848  result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1)) */\n      swap1\n      pop\n        /* \"contracts/ERC-721A_flattened.sol\":23546:23864  function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_238:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_239:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_240:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_241:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_242:\n        /* \"#utility.yul\":561:584   */\n      tag_284\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_241\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_285\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_285:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_243:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_287\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_242\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_23:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_290\n      tag_239\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":833:952   */\n    tag_289:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_291\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_243\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_244:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_245:\n        /* \"#utility.yul\":1268:1289   */\n      tag_294\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_244\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_26:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_296\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_245\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_246:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_247:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_248:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_300:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_300)\n    tag_302:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_249:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_250:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_305\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_246\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":2329:2400   */\n      tag_306\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_247\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_307\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_248\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":2499:2528   */\n      tag_308\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_249\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_31:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_310\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_250\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_251:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_252:\n        /* \"#utility.yul\":3016:3040   */\n      tag_313\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_251\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_314\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_314:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_253:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_316\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_252\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_35:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_319\n      tag_239\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":3292:3411   */\n    tag_318:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_320\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_253\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_254:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_255:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_323\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_254\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_256:\n        /* \"#utility.yul\":3872:3896   */\n      tag_325\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_255\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_38:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_327\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_256\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_257:\n        /* \"#utility.yul\":4210:4234   */\n      tag_329\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_255\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_330\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_330:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_258:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_332\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_257\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_41:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_335\n      tag_239\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":4503:4622   */\n    tag_334:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_336\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_258\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_337\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_253\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5008   */\n    tag_259:\n        /* \"#utility.yul\":4977:5001   */\n      tag_339\n        /* \"#utility.yul\":4995:5000   */\n      dup2\n        /* \"#utility.yul\":4977:5001   */\n      tag_251\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":4972:4975   */\n      dup3\n        /* \"#utility.yul\":4965:5002   */\n      mstore\n        /* \"#utility.yul\":4890:5008   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5014:5236   */\n    tag_47:\n        /* \"#utility.yul\":5107:5111   */\n      0x00\n        /* \"#utility.yul\":5145:5147   */\n      0x20\n        /* \"#utility.yul\":5134:5143   */\n      dup3\n        /* \"#utility.yul\":5130:5148   */\n      add\n        /* \"#utility.yul\":5122:5148   */\n      swap1\n      pop\n        /* \"#utility.yul\":5158:5229   */\n      tag_341\n        /* \"#utility.yul\":5226:5227   */\n      0x00\n        /* \"#utility.yul\":5215:5224   */\n      dup4\n        /* \"#utility.yul\":5211:5228   */\n      add\n        /* \"#utility.yul\":5202:5208   */\n      dup5\n        /* \"#utility.yul\":5158:5229   */\n      tag_259\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":5014:5236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5242:5861   */\n    tag_50:\n        /* \"#utility.yul\":5319:5325   */\n      0x00\n        /* \"#utility.yul\":5327:5333   */\n      dup1\n        /* \"#utility.yul\":5335:5341   */\n      0x00\n        /* \"#utility.yul\":5384:5386   */\n      0x60\n        /* \"#utility.yul\":5372:5381   */\n      dup5\n        /* \"#utility.yul\":5363:5370   */\n      dup7\n        /* \"#utility.yul\":5359:5382   */\n      sub\n        /* \"#utility.yul\":5355:5387   */\n      slt\n        /* \"#utility.yul\":5352:5471   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":5390:5469   */\n      tag_344\n      tag_239\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":5352:5471   */\n    tag_343:\n        /* \"#utility.yul\":5510:5511   */\n      0x00\n        /* \"#utility.yul\":5535:5588   */\n      tag_345\n        /* \"#utility.yul\":5580:5587   */\n      dup7\n        /* \"#utility.yul\":5571:5577   */\n      dup3\n        /* \"#utility.yul\":5560:5569   */\n      dup8\n        /* \"#utility.yul\":5556:5578   */\n      add\n        /* \"#utility.yul\":5535:5588   */\n      tag_258\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":5525:5588   */\n      swap4\n      pop\n        /* \"#utility.yul\":5481:5598   */\n      pop\n        /* \"#utility.yul\":5637:5639   */\n      0x20\n        /* \"#utility.yul\":5663:5716   */\n      tag_346\n        /* \"#utility.yul\":5708:5715   */\n      dup7\n        /* \"#utility.yul\":5699:5705   */\n      dup3\n        /* \"#utility.yul\":5688:5697   */\n      dup8\n        /* \"#utility.yul\":5684:5706   */\n      add\n        /* \"#utility.yul\":5663:5716   */\n      tag_258\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":5653:5716   */\n      swap3\n      pop\n        /* \"#utility.yul\":5608:5726   */\n      pop\n        /* \"#utility.yul\":5765:5767   */\n      0x40\n        /* \"#utility.yul\":5791:5844   */\n      tag_347\n        /* \"#utility.yul\":5836:5843   */\n      dup7\n        /* \"#utility.yul\":5827:5833   */\n      dup3\n        /* \"#utility.yul\":5816:5825   */\n      dup8\n        /* \"#utility.yul\":5812:5834   */\n      add\n        /* \"#utility.yul\":5791:5844   */\n      tag_253\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":5781:5844   */\n      swap2\n      pop\n        /* \"#utility.yul\":5736:5854   */\n      pop\n        /* \"#utility.yul\":5242:5861   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5867:6196   */\n    tag_63:\n        /* \"#utility.yul\":5926:5932   */\n      0x00\n        /* \"#utility.yul\":5975:5977   */\n      0x20\n        /* \"#utility.yul\":5963:5972   */\n      dup3\n        /* \"#utility.yul\":5954:5961   */\n      dup5\n        /* \"#utility.yul\":5950:5973   */\n      sub\n        /* \"#utility.yul\":5946:5978   */\n      slt\n        /* \"#utility.yul\":5943:6062   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":5981:6060   */\n      tag_350\n      tag_239\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":5943:6062   */\n    tag_349:\n        /* \"#utility.yul\":6101:6102   */\n      0x00\n        /* \"#utility.yul\":6126:6179   */\n      tag_351\n        /* \"#utility.yul\":6171:6178   */\n      dup5\n        /* \"#utility.yul\":6162:6168   */\n      dup3\n        /* \"#utility.yul\":6151:6160   */\n      dup6\n        /* \"#utility.yul\":6147:6169   */\n      add\n        /* \"#utility.yul\":6126:6179   */\n      tag_258\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":6116:6179   */\n      swap2\n      pop\n        /* \"#utility.yul\":6072:6189   */\n      pop\n        /* \"#utility.yul\":5867:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6318   */\n    tag_260:\n        /* \"#utility.yul\":6272:6293   */\n      tag_353\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6272:6293   */\n      tag_244\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":6265:6270   */\n      dup2\n        /* \"#utility.yul\":6262:6294   */\n      eq\n        /* \"#utility.yul\":6252:6312   */\n      tag_354\n      jumpi\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6305:6306   */\n      dup1\n        /* \"#utility.yul\":6298:6310   */\n      revert\n        /* \"#utility.yul\":6252:6312   */\n    tag_354:\n        /* \"#utility.yul\":6202:6318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6324:6457   */\n    tag_261:\n        /* \"#utility.yul\":6367:6372   */\n      0x00\n        /* \"#utility.yul\":6405:6411   */\n      dup2\n        /* \"#utility.yul\":6392:6412   */\n      calldataload\n        /* \"#utility.yul\":6383:6412   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6451   */\n      tag_356\n        /* \"#utility.yul\":6445:6450   */\n      dup2\n        /* \"#utility.yul\":6421:6451   */\n      tag_260\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":6324:6457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6931   */\n    tag_76:\n        /* \"#utility.yul\":6528:6534   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup1\n        /* \"#utility.yul\":6585:6587   */\n      0x40\n        /* \"#utility.yul\":6573:6582   */\n      dup4\n        /* \"#utility.yul\":6564:6571   */\n      dup6\n        /* \"#utility.yul\":6560:6583   */\n      sub\n        /* \"#utility.yul\":6556:6588   */\n      slt\n        /* \"#utility.yul\":6553:6672   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":6591:6670   */\n      tag_359\n      tag_239\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":6553:6672   */\n    tag_358:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6736:6789   */\n      tag_360\n        /* \"#utility.yul\":6781:6788   */\n      dup6\n        /* \"#utility.yul\":6772:6778   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      dup7\n        /* \"#utility.yul\":6757:6779   */\n      add\n        /* \"#utility.yul\":6736:6789   */\n      tag_258\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":6726:6789   */\n      swap3\n      pop\n        /* \"#utility.yul\":6682:6799   */\n      pop\n        /* \"#utility.yul\":6838:6840   */\n      0x20\n        /* \"#utility.yul\":6864:6914   */\n      tag_361\n        /* \"#utility.yul\":6906:6913   */\n      dup6\n        /* \"#utility.yul\":6897:6903   */\n      dup3\n        /* \"#utility.yul\":6886:6895   */\n      dup7\n        /* \"#utility.yul\":6882:6904   */\n      add\n        /* \"#utility.yul\":6864:6914   */\n      tag_261\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":6854:6914   */\n      swap2\n      pop\n        /* \"#utility.yul\":6809:6924   */\n      pop\n        /* \"#utility.yul\":6463:6931   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7054   */\n    tag_262:\n        /* \"#utility.yul\":7046:7047   */\n      0x00\n        /* \"#utility.yul\":7043:7044   */\n      dup1\n        /* \"#utility.yul\":7036:7048   */\n      revert\n        /* \"#utility.yul\":7060:7177   */\n    tag_263:\n        /* \"#utility.yul\":7169:7170   */\n      0x00\n        /* \"#utility.yul\":7166:7167   */\n      dup1\n        /* \"#utility.yul\":7159:7171   */\n      revert\n        /* \"#utility.yul\":7183:7363   */\n    tag_264:\n        /* \"#utility.yul\":7231:7308   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7228:7229   */\n      0x00\n        /* \"#utility.yul\":7221:7309   */\n      mstore\n        /* \"#utility.yul\":7328:7332   */\n      0x41\n        /* \"#utility.yul\":7325:7326   */\n      0x04\n        /* \"#utility.yul\":7318:7333   */\n      mstore\n        /* \"#utility.yul\":7352:7356   */\n      0x24\n        /* \"#utility.yul\":7349:7350   */\n      0x00\n        /* \"#utility.yul\":7342:7357   */\n      revert\n        /* \"#utility.yul\":7369:7650   */\n    tag_265:\n        /* \"#utility.yul\":7452:7479   */\n      tag_366\n        /* \"#utility.yul\":7474:7478   */\n      dup3\n        /* \"#utility.yul\":7452:7479   */\n      tag_249\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":7444:7450   */\n      dup2\n        /* \"#utility.yul\":7440:7480   */\n      add\n        /* \"#utility.yul\":7582:7588   */\n      dup2\n        /* \"#utility.yul\":7570:7580   */\n      dup2\n        /* \"#utility.yul\":7567:7589   */\n      lt\n        /* \"#utility.yul\":7546:7564   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7534:7544   */\n      dup3\n        /* \"#utility.yul\":7531:7565   */\n      gt\n        /* \"#utility.yul\":7528:7590   */\n      or\n        /* \"#utility.yul\":7525:7613   */\n      iszero\n      tag_367\n      jumpi\n        /* \"#utility.yul\":7593:7611   */\n      tag_368\n      tag_264\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":7525:7613   */\n    tag_367:\n        /* \"#utility.yul\":7633:7643   */\n      dup1\n        /* \"#utility.yul\":7629:7631   */\n      0x40\n        /* \"#utility.yul\":7622:7644   */\n      mstore\n        /* \"#utility.yul\":7412:7650   */\n      pop\n        /* \"#utility.yul\":7369:7650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7785   */\n    tag_266:\n        /* \"#utility.yul\":7690:7696   */\n      0x00\n        /* \"#utility.yul\":7717:7737   */\n      tag_370\n      tag_238\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":7707:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7746:7779   */\n      tag_371\n        /* \"#utility.yul\":7774:7778   */\n      dup3\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7746:7779   */\n      tag_265\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":7656:7785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8098   */\n    tag_267:\n        /* \"#utility.yul\":7852:7856   */\n      0x00\n        /* \"#utility.yul\":7942:7960   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7934:7940   */\n      dup3\n        /* \"#utility.yul\":7931:7961   */\n      gt\n        /* \"#utility.yul\":7928:7984   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":7964:7982   */\n      tag_374\n      tag_264\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":7928:7984   */\n    tag_373:\n        /* \"#utility.yul\":8002:8031   */\n      tag_375\n        /* \"#utility.yul\":8024:8030   */\n      dup3\n        /* \"#utility.yul\":8002:8031   */\n      tag_249\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":7994:8031   */\n      swap1\n      pop\n        /* \"#utility.yul\":8086:8090   */\n      0x20\n        /* \"#utility.yul\":8080:8084   */\n      dup2\n        /* \"#utility.yul\":8076:8091   */\n      add\n        /* \"#utility.yul\":8068:8091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7791:8098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8104:8250   */\n    tag_268:\n        /* \"#utility.yul\":8201:8207   */\n      dup3\n        /* \"#utility.yul\":8196:8199   */\n      dup2\n        /* \"#utility.yul\":8191:8194   */\n      dup4\n        /* \"#utility.yul\":8178:8208   */\n      calldatacopy\n        /* \"#utility.yul\":8242:8243   */\n      0x00\n        /* \"#utility.yul\":8233:8239   */\n      dup4\n        /* \"#utility.yul\":8228:8231   */\n      dup4\n        /* \"#utility.yul\":8224:8240   */\n      add\n        /* \"#utility.yul\":8217:8244   */\n      mstore\n        /* \"#utility.yul\":8104:8250   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8256:8679   */\n    tag_269:\n        /* \"#utility.yul\":8333:8338   */\n      0x00\n        /* \"#utility.yul\":8358:8423   */\n      tag_378\n        /* \"#utility.yul\":8374:8422   */\n      tag_379\n        /* \"#utility.yul\":8415:8421   */\n      dup5\n        /* \"#utility.yul\":8374:8422   */\n      tag_267\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":8358:8423   */\n      tag_266\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":8349:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8446:8452   */\n      dup3\n        /* \"#utility.yul\":8439:8444   */\n      dup2\n        /* \"#utility.yul\":8432:8453   */\n      mstore\n        /* \"#utility.yul\":8484:8488   */\n      0x20\n        /* \"#utility.yul\":8477:8482   */\n      dup2\n        /* \"#utility.yul\":8473:8489   */\n      add\n        /* \"#utility.yul\":8522:8525   */\n      dup5\n        /* \"#utility.yul\":8513:8519   */\n      dup5\n        /* \"#utility.yul\":8508:8511   */\n      dup5\n        /* \"#utility.yul\":8504:8520   */\n      add\n        /* \"#utility.yul\":8501:8526   */\n      gt\n        /* \"#utility.yul\":8498:8610   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":8529:8608   */\n      tag_381\n      tag_263\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":8498:8610   */\n    tag_380:\n        /* \"#utility.yul\":8619:8673   */\n      tag_382\n        /* \"#utility.yul\":8666:8672   */\n      dup5\n        /* \"#utility.yul\":8661:8664   */\n      dup3\n        /* \"#utility.yul\":8656:8659   */\n      dup6\n        /* \"#utility.yul\":8619:8673   */\n      tag_268\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":8339:8679   */\n      pop\n        /* \"#utility.yul\":8256:8679   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9036   */\n    tag_270:\n        /* \"#utility.yul\":8753:8758   */\n      0x00\n        /* \"#utility.yul\":8802:8805   */\n      dup3\n        /* \"#utility.yul\":8795:8799   */\n      0x1f\n        /* \"#utility.yul\":8787:8793   */\n      dup4\n        /* \"#utility.yul\":8783:8800   */\n      add\n        /* \"#utility.yul\":8779:8806   */\n      slt\n        /* \"#utility.yul\":8769:8891   */\n      tag_384\n      jumpi\n        /* \"#utility.yul\":8810:8889   */\n      tag_385\n      tag_262\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":8769:8891   */\n    tag_384:\n        /* \"#utility.yul\":8927:8933   */\n      dup2\n        /* \"#utility.yul\":8914:8934   */\n      calldataload\n        /* \"#utility.yul\":8952:9030   */\n      tag_386\n        /* \"#utility.yul\":9026:9029   */\n      dup5\n        /* \"#utility.yul\":9018:9024   */\n      dup3\n        /* \"#utility.yul\":9011:9015   */\n      0x20\n        /* \"#utility.yul\":9003:9009   */\n      dup7\n        /* \"#utility.yul\":8999:9016   */\n      add\n        /* \"#utility.yul\":8952:9030   */\n      tag_269\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":8943:9030   */\n      swap2\n      pop\n        /* \"#utility.yul\":8759:9036   */\n      pop\n        /* \"#utility.yul\":8698:9036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9985   */\n    tag_80:\n        /* \"#utility.yul\":9137:9143   */\n      0x00\n        /* \"#utility.yul\":9145:9151   */\n      dup1\n        /* \"#utility.yul\":9153:9159   */\n      0x00\n        /* \"#utility.yul\":9161:9167   */\n      dup1\n        /* \"#utility.yul\":9210:9213   */\n      0x80\n        /* \"#utility.yul\":9198:9207   */\n      dup6\n        /* \"#utility.yul\":9189:9196   */\n      dup8\n        /* \"#utility.yul\":9185:9208   */\n      sub\n        /* \"#utility.yul\":9181:9214   */\n      slt\n        /* \"#utility.yul\":9178:9298   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_389\n      tag_239\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":9178:9298   */\n    tag_388:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_390\n        /* \"#utility.yul\":9407:9414   */\n      dup8\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup9\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_258\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":9352:9415   */\n      swap5\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9543   */\n      tag_391\n        /* \"#utility.yul\":9535:9542   */\n      dup8\n        /* \"#utility.yul\":9526:9532   */\n      dup3\n        /* \"#utility.yul\":9515:9524   */\n      dup9\n        /* \"#utility.yul\":9511:9533   */\n      add\n        /* \"#utility.yul\":9490:9543   */\n      tag_258\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":9480:9543   */\n      swap4\n      pop\n        /* \"#utility.yul\":9435:9553   */\n      pop\n        /* \"#utility.yul\":9592:9594   */\n      0x40\n        /* \"#utility.yul\":9618:9671   */\n      tag_392\n        /* \"#utility.yul\":9663:9670   */\n      dup8\n        /* \"#utility.yul\":9654:9660   */\n      dup3\n        /* \"#utility.yul\":9643:9652   */\n      dup9\n        /* \"#utility.yul\":9639:9661   */\n      add\n        /* \"#utility.yul\":9618:9671   */\n      tag_253\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":9608:9671   */\n      swap3\n      pop\n        /* \"#utility.yul\":9563:9681   */\n      pop\n        /* \"#utility.yul\":9748:9750   */\n      0x60\n        /* \"#utility.yul\":9737:9746   */\n      dup6\n        /* \"#utility.yul\":9733:9751   */\n      add\n        /* \"#utility.yul\":9720:9752   */\n      calldataload\n        /* \"#utility.yul\":9779:9797   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9771:9777   */\n      dup2\n        /* \"#utility.yul\":9768:9798   */\n      gt\n        /* \"#utility.yul\":9765:9882   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":9801:9880   */\n      tag_394\n      tag_240\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":9765:9882   */\n    tag_393:\n        /* \"#utility.yul\":9906:9968   */\n      tag_395\n        /* \"#utility.yul\":9960:9967   */\n      dup8\n        /* \"#utility.yul\":9951:9957   */\n      dup3\n        /* \"#utility.yul\":9940:9949   */\n      dup9\n        /* \"#utility.yul\":9936:9958   */\n      add\n        /* \"#utility.yul\":9906:9968   */\n      tag_270\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":9896:9968   */\n      swap2\n      pop\n        /* \"#utility.yul\":9691:9978   */\n      pop\n        /* \"#utility.yul\":9042:9985   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10465   */\n    tag_90:\n        /* \"#utility.yul\":10059:10065   */\n      0x00\n        /* \"#utility.yul\":10067:10073   */\n      dup1\n        /* \"#utility.yul\":10116:10118   */\n      0x40\n        /* \"#utility.yul\":10104:10113   */\n      dup4\n        /* \"#utility.yul\":10095:10102   */\n      dup6\n        /* \"#utility.yul\":10091:10114   */\n      sub\n        /* \"#utility.yul\":10087:10119   */\n      slt\n        /* \"#utility.yul\":10084:10203   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":10122:10201   */\n      tag_398\n      tag_239\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":10084:10203   */\n    tag_397:\n        /* \"#utility.yul\":10242:10243   */\n      0x00\n        /* \"#utility.yul\":10267:10320   */\n      tag_399\n        /* \"#utility.yul\":10312:10319   */\n      dup6\n        /* \"#utility.yul\":10303:10309   */\n      dup3\n        /* \"#utility.yul\":10292:10301   */\n      dup7\n        /* \"#utility.yul\":10288:10310   */\n      add\n        /* \"#utility.yul\":10267:10320   */\n      tag_258\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":10257:10320   */\n      swap3\n      pop\n        /* \"#utility.yul\":10213:10330   */\n      pop\n        /* \"#utility.yul\":10369:10371   */\n      0x20\n        /* \"#utility.yul\":10395:10448   */\n      tag_400\n        /* \"#utility.yul\":10440:10447   */\n      dup6\n        /* \"#utility.yul\":10431:10437   */\n      dup3\n        /* \"#utility.yul\":10420:10429   */\n      dup7\n        /* \"#utility.yul\":10416:10438   */\n      add\n        /* \"#utility.yul\":10395:10448   */\n      tag_258\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":10385:10448   */\n      swap2\n      pop\n        /* \"#utility.yul\":10340:10458   */\n      pop\n        /* \"#utility.yul\":9991:10465   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10471:10651   */\n    tag_271:\n        /* \"#utility.yul\":10519:10596   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10516:10517   */\n      0x00\n        /* \"#utility.yul\":10509:10597   */\n      mstore\n        /* \"#utility.yul\":10616:10620   */\n      0x22\n        /* \"#utility.yul\":10613:10614   */\n      0x04\n        /* \"#utility.yul\":10606:10621   */\n      mstore\n        /* \"#utility.yul\":10640:10644   */\n      0x24\n        /* \"#utility.yul\":10637:10638   */\n      0x00\n        /* \"#utility.yul\":10630:10645   */\n      revert\n        /* \"#utility.yul\":10657:10977   */\n    tag_98:\n        /* \"#utility.yul\":10701:10707   */\n      0x00\n        /* \"#utility.yul\":10738:10739   */\n      0x02\n        /* \"#utility.yul\":10732:10736   */\n      dup3\n        /* \"#utility.yul\":10728:10740   */\n      div\n        /* \"#utility.yul\":10718:10740   */\n      swap1\n      pop\n        /* \"#utility.yul\":10785:10786   */\n      0x01\n        /* \"#utility.yul\":10779:10783   */\n      dup3\n        /* \"#utility.yul\":10775:10787   */\n      and\n        /* \"#utility.yul\":10806:10824   */\n      dup1\n        /* \"#utility.yul\":10796:10877   */\n      tag_403\n      jumpi\n        /* \"#utility.yul\":10862:10866   */\n      0x7f\n        /* \"#utility.yul\":10854:10860   */\n      dup3\n        /* \"#utility.yul\":10850:10867   */\n      and\n        /* \"#utility.yul\":10840:10867   */\n      swap2\n      pop\n        /* \"#utility.yul\":10796:10877   */\n    tag_403:\n        /* \"#utility.yul\":10924:10926   */\n      0x20\n        /* \"#utility.yul\":10916:10922   */\n      dup3\n        /* \"#utility.yul\":10913:10927   */\n      lt\n        /* \"#utility.yul\":10893:10911   */\n      dup2\n        /* \"#utility.yul\":10890:10928   */\n      sub\n        /* \"#utility.yul\":10887:10971   */\n      tag_404\n      jumpi\n        /* \"#utility.yul\":10943:10961   */\n      tag_405\n      tag_271\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":10887:10971   */\n    tag_404:\n        /* \"#utility.yul\":10708:10977   */\n      pop\n        /* \"#utility.yul\":10657:10977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10983:11131   */\n    tag_272:\n        /* \"#utility.yul\":11085:11096   */\n      0x00\n        /* \"#utility.yul\":11122:11125   */\n      dup2\n        /* \"#utility.yul\":11107:11125   */\n      swap1\n      pop\n        /* \"#utility.yul\":10983:11131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11137:11527   */\n    tag_273:\n        /* \"#utility.yul\":11243:11246   */\n      0x00\n        /* \"#utility.yul\":11271:11310   */\n      tag_408\n        /* \"#utility.yul\":11304:11309   */\n      dup3\n        /* \"#utility.yul\":11271:11310   */\n      tag_246\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":11326:11415   */\n      tag_409\n        /* \"#utility.yul\":11408:11414   */\n      dup2\n        /* \"#utility.yul\":11403:11406   */\n      dup6\n        /* \"#utility.yul\":11326:11415   */\n      tag_272\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":11319:11415   */\n      swap4\n      pop\n        /* \"#utility.yul\":11424:11489   */\n      tag_410\n        /* \"#utility.yul\":11482:11488   */\n      dup2\n        /* \"#utility.yul\":11477:11480   */\n      dup6\n        /* \"#utility.yul\":11470:11474   */\n      0x20\n        /* \"#utility.yul\":11463:11468   */\n      dup7\n        /* \"#utility.yul\":11459:11475   */\n      add\n        /* \"#utility.yul\":11424:11489   */\n      tag_248\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":11514:11520   */\n      dup1\n        /* \"#utility.yul\":11509:11512   */\n      dup5\n        /* \"#utility.yul\":11505:11521   */\n      add\n        /* \"#utility.yul\":11498:11521   */\n      swap2\n      pop\n        /* \"#utility.yul\":11247:11527   */\n      pop\n        /* \"#utility.yul\":11137:11527   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11533:11968   */\n    tag_179:\n        /* \"#utility.yul\":11713:11716   */\n      0x00\n        /* \"#utility.yul\":11735:11830   */\n      tag_412\n        /* \"#utility.yul\":11826:11829   */\n      dup3\n        /* \"#utility.yul\":11817:11823   */\n      dup6\n        /* \"#utility.yul\":11735:11830   */\n      tag_273\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":11728:11830   */\n      swap2\n      pop\n        /* \"#utility.yul\":11847:11942   */\n      tag_413\n        /* \"#utility.yul\":11938:11941   */\n      dup3\n        /* \"#utility.yul\":11929:11935   */\n      dup5\n        /* \"#utility.yul\":11847:11942   */\n      tag_273\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":11840:11942   */\n      swap2\n      pop\n        /* \"#utility.yul\":11959:11962   */\n      dup2\n        /* \"#utility.yul\":11952:11962   */\n      swap1\n      pop\n        /* \"#utility.yul\":11533:11968   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11974:12072   */\n    tag_274:\n        /* \"#utility.yul\":12025:12031   */\n      0x00\n        /* \"#utility.yul\":12059:12064   */\n      dup2\n        /* \"#utility.yul\":12053:12065   */\n      mload\n        /* \"#utility.yul\":12043:12065   */\n      swap1\n      pop\n        /* \"#utility.yul\":11974:12072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12078:12246   */\n    tag_275:\n        /* \"#utility.yul\":12161:12172   */\n      0x00\n        /* \"#utility.yul\":12195:12201   */\n      dup3\n        /* \"#utility.yul\":12190:12193   */\n      dup3\n        /* \"#utility.yul\":12183:12202   */\n      mstore\n        /* \"#utility.yul\":12235:12239   */\n      0x20\n        /* \"#utility.yul\":12230:12233   */\n      dup3\n        /* \"#utility.yul\":12226:12240   */\n      add\n        /* \"#utility.yul\":12211:12240   */\n      swap1\n      pop\n        /* \"#utility.yul\":12078:12246   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12252:12625   */\n    tag_276:\n        /* \"#utility.yul\":12338:12341   */\n      0x00\n        /* \"#utility.yul\":12366:12404   */\n      tag_417\n        /* \"#utility.yul\":12398:12403   */\n      dup3\n        /* \"#utility.yul\":12366:12404   */\n      tag_274\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":12420:12490   */\n      tag_418\n        /* \"#utility.yul\":12483:12489   */\n      dup2\n        /* \"#utility.yul\":12478:12481   */\n      dup6\n        /* \"#utility.yul\":12420:12490   */\n      tag_275\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":12413:12490   */\n      swap4\n      pop\n        /* \"#utility.yul\":12499:12564   */\n      tag_419\n        /* \"#utility.yul\":12557:12563   */\n      dup2\n        /* \"#utility.yul\":12552:12555   */\n      dup6\n        /* \"#utility.yul\":12545:12549   */\n      0x20\n        /* \"#utility.yul\":12538:12543   */\n      dup7\n        /* \"#utility.yul\":12534:12550   */\n      add\n        /* \"#utility.yul\":12499:12564   */\n      tag_248\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":12589:12618   */\n      tag_420\n        /* \"#utility.yul\":12611:12617   */\n      dup2\n        /* \"#utility.yul\":12589:12618   */\n      tag_249\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":12584:12587   */\n      dup5\n        /* \"#utility.yul\":12580:12619   */\n      add\n        /* \"#utility.yul\":12573:12619   */\n      swap2\n      pop\n        /* \"#utility.yul\":12342:12625   */\n      pop\n        /* \"#utility.yul\":12252:12625   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12631:13271   */\n    tag_217:\n        /* \"#utility.yul\":12826:12830   */\n      0x00\n        /* \"#utility.yul\":12864:12867   */\n      0x80\n        /* \"#utility.yul\":12853:12862   */\n      dup3\n        /* \"#utility.yul\":12849:12868   */\n      add\n        /* \"#utility.yul\":12841:12868   */\n      swap1\n      pop\n        /* \"#utility.yul\":12878:12949   */\n      tag_422\n        /* \"#utility.yul\":12946:12947   */\n      0x00\n        /* \"#utility.yul\":12935:12944   */\n      dup4\n        /* \"#utility.yul\":12931:12948   */\n      add\n        /* \"#utility.yul\":12922:12928   */\n      dup8\n        /* \"#utility.yul\":12878:12949   */\n      tag_256\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":12959:13031   */\n      tag_423\n        /* \"#utility.yul\":13027:13029   */\n      0x20\n        /* \"#utility.yul\":13016:13025   */\n      dup4\n        /* \"#utility.yul\":13012:13030   */\n      add\n        /* \"#utility.yul\":13003:13009   */\n      dup7\n        /* \"#utility.yul\":12959:13031   */\n      tag_256\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":13041:13113   */\n      tag_424\n        /* \"#utility.yul\":13109:13111   */\n      0x40\n        /* \"#utility.yul\":13098:13107   */\n      dup4\n        /* \"#utility.yul\":13094:13112   */\n      add\n        /* \"#utility.yul\":13085:13091   */\n      dup6\n        /* \"#utility.yul\":13041:13113   */\n      tag_259\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":13160:13169   */\n      dup2\n        /* \"#utility.yul\":13154:13158   */\n      dup2\n        /* \"#utility.yul\":13150:13170   */\n      sub\n        /* \"#utility.yul\":13145:13147   */\n      0x60\n        /* \"#utility.yul\":13134:13143   */\n      dup4\n        /* \"#utility.yul\":13130:13148   */\n      add\n        /* \"#utility.yul\":13123:13171   */\n      mstore\n        /* \"#utility.yul\":13188:13264   */\n      tag_425\n        /* \"#utility.yul\":13259:13263   */\n      dup2\n        /* \"#utility.yul\":13250:13256   */\n      dup5\n        /* \"#utility.yul\":13188:13264   */\n      tag_276\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":13180:13264   */\n      swap1\n      pop\n        /* \"#utility.yul\":12631:13271   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13277:13418   */\n    tag_277:\n        /* \"#utility.yul\":13333:13338   */\n      0x00\n        /* \"#utility.yul\":13364:13370   */\n      dup2\n        /* \"#utility.yul\":13358:13371   */\n      mload\n        /* \"#utility.yul\":13349:13371   */\n      swap1\n      pop\n        /* \"#utility.yul\":13380:13412   */\n      tag_427\n        /* \"#utility.yul\":13406:13411   */\n      dup2\n        /* \"#utility.yul\":13380:13412   */\n      tag_242\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":13277:13418   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13424:13773   */\n    tag_220:\n        /* \"#utility.yul\":13493:13499   */\n      0x00\n        /* \"#utility.yul\":13542:13544   */\n      0x20\n        /* \"#utility.yul\":13530:13539   */\n      dup3\n        /* \"#utility.yul\":13521:13528   */\n      dup5\n        /* \"#utility.yul\":13517:13540   */\n      sub\n        /* \"#utility.yul\":13513:13545   */\n      slt\n        /* \"#utility.yul\":13510:13629   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":13548:13627   */\n      tag_430\n      tag_239\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":13510:13629   */\n    tag_429:\n        /* \"#utility.yul\":13668:13669   */\n      0x00\n        /* \"#utility.yul\":13693:13756   */\n      tag_431\n        /* \"#utility.yul\":13748:13755   */\n      dup5\n        /* \"#utility.yul\":13739:13745   */\n      dup3\n        /* \"#utility.yul\":13728:13737   */\n      dup6\n        /* \"#utility.yul\":13724:13746   */\n      add\n        /* \"#utility.yul\":13693:13756   */\n      tag_277\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":13683:13756   */\n      swap2\n      pop\n        /* \"#utility.yul\":13639:13766   */\n      pop\n        /* \"#utility.yul\":13424:13773   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e49b2c2d750b19309687b10dec36b21aac047fcb5c68e4a5e28d28a7bc34eb8364736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1837": {
									"entryPoint": null,
									"id": 1837,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_341": {
									"entryPoint": null,
									"id": 341,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_350": {
									"entryPoint": 192,
									"id": 350,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 676,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 255,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 208,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 405,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 561,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5231:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "140:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "157:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "160:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "150:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "150:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "254:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "257:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "247:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "281:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "271:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "326:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "346:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "467:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "457:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "457:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "535:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "545:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "565:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "612:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "580:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "653:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "689:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:26:1"
															},
															"nodeType": "YulIf",
															"src": "623:81:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "756:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "751:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:38:1"
															},
															"nodeType": "YulIf",
															"src": "714:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "519:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "528:6:1",
														"type": ""
													}
												],
												"src": "484:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "864:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "874:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "882:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "902:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "895:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "918:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "936:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "851:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "859:4:1",
														"type": ""
													}
												],
												"src": "810:141:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1001:49:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1011:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "984:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "994:6:1",
														"type": ""
													}
												],
												"src": "957:93:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1119:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "1084:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1090:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "1100:8:1",
														"type": ""
													}
												],
												"src": "1056:107:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1245:317:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1417:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1477:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1516:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:1"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1206:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "1213:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "1225:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1238:6:1",
														"type": ""
													}
												],
												"src": "1169:393:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1634:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1595:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1605:7:1",
														"type": ""
													}
												],
												"src": "1568:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1683:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1693:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1700:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1669:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1679:3:1",
														"type": ""
													}
												],
												"src": "1651:60:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1777:82:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1787:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1757:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1767:9:1",
														"type": ""
													}
												],
												"src": "1717:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1912:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1922:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1929:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1898:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1908:3:1",
														"type": ""
													}
												],
												"src": "1865:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2022:193:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:105:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1999:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2005:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "2013:7:1",
														"type": ""
													}
												],
												"src": "1946:269:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2270:24:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2280:8:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2287:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2266:3:1",
														"type": ""
													}
												],
												"src": "2221:73:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2353:136:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2339:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2345:6:1",
														"type": ""
													}
												],
												"src": "2300:189:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2545:136:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2612:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:14:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2577:26:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2579:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2559:2:1",
																"statements": []
															},
															"src": "2555:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "2533:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2540:3:1",
														"type": ""
													}
												],
												"src": "2495:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2766:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2792:431:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3093:27:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3095:23:1",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:1"
																		},
																		"nodeType": "YulIf",
																		"src": "3071:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:11:1"
															},
															"nodeType": "YulIf",
															"src": "2777:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2742:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2749:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2754:10:1",
														"type": ""
													}
												],
												"src": "2687:543:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3299:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3309:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "3274:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3280:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "3290:8:1",
														"type": ""
													}
												],
												"src": "3236:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3410:118:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3497:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:1"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3387:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "3393:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3403:6:1",
														"type": ""
													}
												],
												"src": "3359:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3614:214:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3747:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:1"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3595:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3601:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "3609:4:1",
														"type": ""
													}
												],
												"src": "3533:295:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3925:1303:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4072:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:30:1"
															},
															"nodeType": "YulIf",
															"src": "4038:56:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4118:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4203:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4297:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4308:17:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4321:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4372:611:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4569:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4646:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4687:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "4547:21:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4549:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "4528:3:1",
																					"statements": []
																				},
																				"src": "4524:208:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4768:156:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:1"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "4745:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:1"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4365:618:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5000:222:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5051:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5069:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "5041:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4992:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4342:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "4335:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3914:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3920:3:1",
														"type": ""
													}
												],
												"src": "3833:1395:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x417A756B69000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x415A554B49000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x2 SWAP1 DUP2 PUSH3 0x8F SWAP2 SWAP1 PUSH3 0x33F JUMP JUMPDEST POP DUP1 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xA1 SWAP2 SWAP1 PUSH3 0x33F JUMP JUMPDEST POP PUSH3 0xB2 PUSH3 0xC0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x426 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x147 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x15D JUMPI PUSH3 0x15C PUSH3 0xFF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x1C7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x188 JUMP JUMPDEST PUSH3 0x1D3 DUP7 DUP4 PUSH3 0x188 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x220 PUSH3 0x21A PUSH3 0x214 DUP5 PUSH3 0x1EB JUMP JUMPDEST PUSH3 0x1F5 JUMP JUMPDEST PUSH3 0x1EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x23C DUP4 PUSH3 0x1FF JUMP JUMPDEST PUSH3 0x254 PUSH3 0x24B DUP3 PUSH3 0x227 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x195 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x26B PUSH3 0x25C JUMP JUMPDEST PUSH3 0x278 DUP2 DUP5 DUP5 PUSH3 0x231 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2A0 JUMPI PUSH3 0x294 PUSH1 0x0 DUP3 PUSH3 0x261 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x27E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2EF JUMPI PUSH3 0x2B9 DUP2 PUSH3 0x163 JUMP JUMPDEST PUSH3 0x2C4 DUP5 PUSH3 0x178 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x2D4 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x2EC PUSH3 0x2E3 DUP6 PUSH3 0x178 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x27D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x314 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x2F4 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x32F DUP4 DUP4 PUSH3 0x301 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x34A DUP3 PUSH3 0xC5 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x366 JUMPI PUSH3 0x365 PUSH3 0xD0 JUMP JUMPDEST JUMPDEST PUSH3 0x372 DUP3 SLOAD PUSH3 0x12E JUMP JUMPDEST PUSH3 0x37F DUP3 DUP3 DUP6 PUSH3 0x2A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x3B7 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x3A2 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x3AE DUP6 DUP3 PUSH3 0x321 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x41E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x3C7 DUP7 PUSH3 0x163 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x3F1 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x3CA JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x411 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x40D PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x301 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1B0A DUP1 PUSH3 0x436 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x354 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2B6 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1F5 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x155 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x13E3 JUMP JUMPDEST PUSH2 0x391 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x142B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x152E JUMP JUMPDEST PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x159C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x15E3 JUMP JUMPDEST PUSH2 0x534 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C3 PUSH2 0x678 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1632 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x164D JUMP JUMPDEST PUSH2 0x68F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x164D JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x152E JUMP JUMPDEST PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x159C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x16A0 JUMP JUMPDEST PUSH2 0x9E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1632 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A0 PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x152E JUMP JUMPDEST PUSH2 0xB2D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x16F9 JUMP JUMPDEST PUSH2 0xB3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x186E JUMP JUMPDEST PUSH2 0xC45 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x152E JUMP JUMPDEST PUSH2 0xCB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x18F1 JUMP JUMPDEST PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x388 SWAP2 SWAP1 PUSH2 0x142B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3EC JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x41C JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x432 SWAP1 PUSH2 0x1960 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x45E SWAP1 PUSH2 0x1960 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4AB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x480 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4AB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x48E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C0 DUP3 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53F DUP3 PUSH2 0x9D1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x560 PUSH2 0xE49 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5C3 JUMPI PUSH2 0x58C DUP2 PUSH2 0x587 PUSH2 0xE49 JUMP JUMPDEST PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x682 PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x69A DUP3 PUSH2 0xE56 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x701 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x70D DUP5 PUSH2 0xF22 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x723 DUP2 DUP8 PUSH2 0x71E PUSH2 0xE49 JUMP JUMPDEST PUSH2 0xF49 JUMP JUMPDEST PUSH2 0x76F JUMPI PUSH2 0x738 DUP7 PUSH2 0x733 PUSH2 0xE49 JUMP JUMPDEST PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7E2 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xF8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7ED JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x8BB DUP6 PUSH2 0x897 DUP9 DUP9 DUP8 PUSH2 0xF93 JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND SUB PUSH2 0x941 JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x93F JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x93E JUMPI DUP4 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x9A9 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xFE6 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9CC DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC45 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9DC DUP3 PUSH2 0xE56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0xAAA SWAP1 PUSH2 0x1960 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAD6 SWAP1 PUSH2 0x1960 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB23 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAF8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB23 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB06 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB37 CALLER DUP3 PUSH2 0xFEC JUMP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0xB47 PUSH2 0xE49 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBF4 PUSH2 0xE49 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC39 SWAP2 SWAP1 PUSH2 0x142B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC50 DUP5 DUP5 DUP5 PUSH2 0x68F JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xCB2 JUMPI PUSH2 0xC7B DUP5 DUP5 DUP5 DUP5 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0xCB1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xCC3 DUP3 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0xCF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD03 PUSH2 0x12F7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xD23 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD4E JUMP JUMPDEST DUP1 PUSH2 0xD2D DUP5 PUSH2 0x130E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD3E SWAP3 SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xDF5 PUSH2 0xE51 JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xE04 JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xE42 JUMPI POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP DUP1 PUSH2 0xE65 PUSH2 0xE51 JUMP JUMPDEST GT PUSH2 0xEEB JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0xEEA JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND SUB PUSH2 0xEE8 JUMPI JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0xEDE JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0xEB4 JUMP JUMPDEST DUP1 SWAP3 POP POP POP PUSH2 0xF1D JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0xFAA DUP7 DUP7 DUP5 PUSH2 0x135E JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 DUP3 SUB PUSH2 0x102C JUMPI PUSH1 0x40 MLOAD PUSH32 0xB562E8DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1039 PUSH1 0x0 DUP5 DUP4 DUP6 PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x40 PUSH1 0x1 SWAP1 SHL OR DUP3 MUL PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10B0 DUP4 PUSH2 0x10A1 PUSH1 0x0 DUP7 PUSH1 0x0 PUSH2 0xF93 JUMP JUMPDEST PUSH2 0x10AA DUP6 PUSH2 0x1367 JUMP JUMPDEST OR PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP4 DUP4 ADD SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP2 POP DUP3 DUP3 PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 DUP4 ADD JUMPDEST DUP2 DUP2 EQ PUSH2 0x1151 JUMPI DUP1 DUP4 PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1116 JUMP JUMPDEST POP PUSH1 0x0 DUP3 SUB PUSH2 0x118C JUMPI PUSH1 0x40 MLOAD PUSH32 0x2E07630000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x11A2 PUSH1 0x0 DUP5 DUP4 DUP6 PUSH2 0xFE6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11CD PUSH2 0xE49 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11EF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A46 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x122B JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1228 SWAP2 SWAP1 PUSH2 0x1AA7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12A4 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x125B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1260 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x129C JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP PUSH1 0x0 DUP3 MSTORE DUP2 DUP4 JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1349 JUMPI PUSH1 0x1 DUP5 SUB SWAP4 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP5 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP DUP1 PUSH2 0x1327 JUMPI JUMPDEST POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 SUB SWAP4 POP DUP1 DUP5 MSTORE POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH1 0xE1 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13C0 DUP2 PUSH2 0x138B JUMP JUMPDEST DUP2 EQ PUSH2 0x13CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13DD DUP2 PUSH2 0x13B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F9 JUMPI PUSH2 0x13F8 PUSH2 0x1381 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1407 DUP5 DUP3 DUP6 ADD PUSH2 0x13CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1425 DUP2 PUSH2 0x1410 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1440 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x141C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1480 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A8 DUP3 PUSH2 0x1446 JUMP JUMPDEST PUSH2 0x14B2 DUP2 DUP6 PUSH2 0x1451 JUMP JUMPDEST SWAP4 POP PUSH2 0x14C2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1462 JUMP JUMPDEST PUSH2 0x14CB DUP2 PUSH2 0x148C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14F0 DUP2 DUP5 PUSH2 0x149D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x150B DUP2 PUSH2 0x14F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1528 DUP2 PUSH2 0x1502 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1544 JUMPI PUSH2 0x1543 PUSH2 0x1381 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1552 DUP5 DUP3 DUP6 ADD PUSH2 0x1519 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1586 DUP3 PUSH2 0x155B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1596 DUP2 PUSH2 0x157B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15B1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x158D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15C0 DUP2 PUSH2 0x157B JUMP JUMPDEST DUP2 EQ PUSH2 0x15CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15DD DUP2 PUSH2 0x15B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15FA JUMPI PUSH2 0x15F9 PUSH2 0x1381 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1608 DUP6 DUP3 DUP7 ADD PUSH2 0x15CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1619 DUP6 DUP3 DUP7 ADD PUSH2 0x1519 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x162C DUP2 PUSH2 0x14F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1647 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1623 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1666 JUMPI PUSH2 0x1665 PUSH2 0x1381 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1674 DUP7 DUP3 DUP8 ADD PUSH2 0x15CE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1685 DUP7 DUP3 DUP8 ADD PUSH2 0x15CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1696 DUP7 DUP3 DUP8 ADD PUSH2 0x1519 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16B6 JUMPI PUSH2 0x16B5 PUSH2 0x1381 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16C4 DUP5 DUP3 DUP6 ADD PUSH2 0x15CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16D6 DUP2 PUSH2 0x1410 JUMP JUMPDEST DUP2 EQ PUSH2 0x16E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16F3 DUP2 PUSH2 0x16CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1710 JUMPI PUSH2 0x170F PUSH2 0x1381 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x171E DUP6 DUP3 DUP7 ADD PUSH2 0x15CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x172F DUP6 DUP3 DUP7 ADD PUSH2 0x16E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x177B DUP3 PUSH2 0x148C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x179A JUMPI PUSH2 0x1799 PUSH2 0x1743 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17AD PUSH2 0x1377 JUMP JUMPDEST SWAP1 POP PUSH2 0x17B9 DUP3 DUP3 PUSH2 0x1772 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x17D9 JUMPI PUSH2 0x17D8 PUSH2 0x1743 JUMP JUMPDEST JUMPDEST PUSH2 0x17E2 DUP3 PUSH2 0x148C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1811 PUSH2 0x180C DUP5 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0x17A3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x182D JUMPI PUSH2 0x182C PUSH2 0x173E JUMP JUMPDEST JUMPDEST PUSH2 0x1838 DUP5 DUP3 DUP6 PUSH2 0x17EF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1855 JUMPI PUSH2 0x1854 PUSH2 0x1739 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1865 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x17FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1888 JUMPI PUSH2 0x1887 PUSH2 0x1381 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1896 DUP8 DUP3 DUP9 ADD PUSH2 0x15CE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x18A7 DUP8 DUP3 DUP9 ADD PUSH2 0x15CE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x18B8 DUP8 DUP3 DUP9 ADD PUSH2 0x1519 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18D9 JUMPI PUSH2 0x18D8 PUSH2 0x1386 JUMP JUMPDEST JUMPDEST PUSH2 0x18E5 DUP8 DUP3 DUP9 ADD PUSH2 0x1840 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1908 JUMPI PUSH2 0x1907 PUSH2 0x1381 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1916 DUP6 DUP3 DUP7 ADD PUSH2 0x15CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1927 DUP6 DUP3 DUP7 ADD PUSH2 0x15CE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1978 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x198B JUMPI PUSH2 0x198A PUSH2 0x1931 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19A7 DUP3 PUSH2 0x1446 JUMP JUMPDEST PUSH2 0x19B1 DUP2 DUP6 PUSH2 0x1991 JUMP JUMPDEST SWAP4 POP PUSH2 0x19C1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1462 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19D9 DUP3 DUP6 PUSH2 0x199C JUMP JUMPDEST SWAP2 POP PUSH2 0x19E5 DUP3 DUP5 PUSH2 0x199C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A18 DUP3 PUSH2 0x19F1 JUMP JUMPDEST PUSH2 0x1A22 DUP2 DUP6 PUSH2 0x19FC JUMP JUMPDEST SWAP4 POP PUSH2 0x1A32 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1462 JUMP JUMPDEST PUSH2 0x1A3B DUP2 PUSH2 0x148C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1A5B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x158D JUMP JUMPDEST PUSH2 0x1A68 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x158D JUMP JUMPDEST PUSH2 0x1A75 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1623 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1A87 DUP2 DUP5 PUSH2 0x1A0D JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AA1 DUP2 PUSH2 0x13B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ABD JUMPI PUSH2 0x1ABC PUSH2 0x1381 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ACB DUP5 DUP3 DUP6 ADD PUSH2 0x1A92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 SWAP12 0x2C 0x2D PUSH22 0xB19309687B10DEC36B21AAC047FCB5C68E4A5E28D28 0xA7 0xBC CALLVALUE 0xEB DUP4 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "50120:268:0:-:0;;;50164:42;;;;;;;;;;13655:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13729:5;13721;:13;;;;;;:::i;:::-;;13754:7;13744;:17;;;;;;:::i;:::-;;13787:15;:13;;;:15;;:::i;:::-;13771:13;:31;;;;13655:154;;50120:268;;14135:90;14191:7;14135:90;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;50120:268:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1211": {
									"entryPoint": 4070,
									"id": 1211,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_608": {
									"entryPoint": 4855,
									"id": 608,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1198": {
									"entryPoint": 3981,
									"id": 1198,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1266": {
									"entryPoint": 4519,
									"id": 1266,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_950": {
									"entryPoint": 3562,
									"id": 950,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_1772": {
									"entryPoint": 4958,
									"id": 1772,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedSlotAndAddress_983": {
									"entryPoint": 3874,
									"id": 983,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isSenderApprovedOrOwner_964": {
									"entryPoint": 3913,
									"id": 964,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_1362": {
									"entryPoint": 4076,
									"id": 1362,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSenderERC721A_1815": {
									"entryPoint": 3657,
									"id": 1815,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_1805": {
									"entryPoint": 3987,
									"id": 1805,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_nextInitializedFlag_812": {
									"entryPoint": 4967,
									"id": 812,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_packOwnershipData_802": {
									"entryPoint": 4027,
									"id": 802,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_736": {
									"entryPoint": 3670,
									"id": 736,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_startTokenId_350": {
									"entryPoint": 3665,
									"id": 350,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_1825": {
									"entryPoint": 4878,
									"id": 1825,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_857": {
									"entryPoint": 1332,
									"id": 857,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_423": {
									"entryPoint": 2531,
									"id": 423,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_880": {
									"entryPoint": 1205,
									"id": 880,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_924": {
									"entryPoint": 3414,
									"id": 924,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_1849": {
									"entryPoint": 2861,
									"id": 1849,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_546": {
									"entryPoint": 1059,
									"id": 546,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_628": {
									"entryPoint": 2513,
									"id": 628,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1147": {
									"entryPoint": 2481,
									"id": 1147,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1185": {
									"entryPoint": 3141,
									"id": 1185,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_906": {
									"entryPoint": 2874,
									"id": 906,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_536": {
									"entryPoint": 913,
									"id": 536,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_556": {
									"entryPoint": 2715,
									"id": 556,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_599": {
									"entryPoint": 3256,
									"id": 599,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_375": {
									"entryPoint": 1656,
									"id": 375,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1128": {
									"entryPoint": 1679,
									"id": 1128,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 6142,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 6802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 6208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 6254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6605,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6726,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4983,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 6078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 6641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6127,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5218,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6449,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5955,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5945,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5950,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4998,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4993,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 5559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13776:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:1",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:1",
														"type": ""
													}
												],
												"src": "334:149:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:1"
															},
															"nodeType": "YulIf",
															"src": "541:62:1"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:1",
														"type": ""
													}
												],
												"src": "489:120:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:1",
														"type": ""
													}
												],
												"src": "615:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:1"
															},
															"nodeType": "YulIf",
															"src": "833:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:1",
														"type": ""
													}
												],
												"src": "758:327:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:1",
														"type": ""
													}
												],
												"src": "1091:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:1",
														"type": ""
													}
												],
												"src": "1187:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:1",
														"type": ""
													}
												],
												"src": "1302:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:1",
														"type": ""
													}
												],
												"src": "1518:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:1",
														"type": ""
													}
												],
												"src": "1623:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1879:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1939:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1911:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1913:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1893:3:1",
																"statements": []
															},
															"src": "1889:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1842:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1847:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1852:6:1",
														"type": ""
													}
												],
												"src": "1798:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2108:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2081:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2091:6:1",
														"type": ""
													}
												],
												"src": "2050:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2250:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2322:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2483:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2231:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2238:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2246:3:1",
														"type": ""
													}
												],
												"src": "2158:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2659:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2669:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2761:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2769:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2631:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2643:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2654:4:1",
														"type": ""
													}
												],
												"src": "2541:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2915:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2926:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2897:7:1",
														"type": ""
													}
												],
												"src": "2860:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2986:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3043:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2999:43:1"
															},
															"nodeType": "YulIf",
															"src": "2996:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2979:5:1",
														"type": ""
													}
												],
												"src": "2943:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3133:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3101:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3109:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3117:5:1",
														"type": ""
													}
												],
												"src": "3071:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3282:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3328:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:32:1"
															},
															"nodeType": "YulIf",
															"src": "3292:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3421:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3465:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3252:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3263:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3275:6:1",
														"type": ""
													}
												],
												"src": "3216:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3596:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3588:7:1",
														"type": ""
													}
												],
												"src": "3551:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3728:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3738:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3710:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3720:7:1",
														"type": ""
													}
												],
												"src": "3683:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3850:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3838:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3845:3:1",
														"type": ""
													}
												],
												"src": "3785:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4007:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4017:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3979:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3991:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4002:4:1",
														"type": ""
													}
												],
												"src": "3909:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4180:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:43:1"
															},
															"nodeType": "YulIf",
															"src": "4190:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4173:5:1",
														"type": ""
													}
												],
												"src": "4137:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4317:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4327:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4295:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4303:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4311:5:1",
														"type": ""
													}
												],
												"src": "4265:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4493:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4539:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:32:1"
															},
															"nodeType": "YulIf",
															"src": "4503:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4632:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4676:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4759:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4804:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4455:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4466:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4478:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4486:6:1",
														"type": ""
													}
												],
												"src": "4410:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4955:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4972:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4995:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4977:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4977:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4965:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4965:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4965:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4943:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4950:3:1",
														"type": ""
													}
												],
												"src": "4890:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5112:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5122:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5134:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5145:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5130:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5122:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5202:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5215:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5226:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5211:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5211:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5158:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5158:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5158:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5084:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5096:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5107:4:1",
														"type": ""
													}
												],
												"src": "5014:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5342:519:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5388:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5390:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5390:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5390:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5363:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5372:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5359:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5359:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5384:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5355:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5355:32:1"
															},
															"nodeType": "YulIf",
															"src": "5352:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5481:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5496:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5510:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5500:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5525:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5560:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5571:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5556:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5556:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5580:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5535:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5535:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5525:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5608:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5623:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5637:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5627:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5653:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5688:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5699:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5684:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5684:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5708:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5663:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5663:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5653:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5736:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5751:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5765:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5755:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5781:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5816:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5827:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5812:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5812:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5836:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5791:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5791:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5781:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5296:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5307:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5319:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5327:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5335:6:1",
														"type": ""
													}
												],
												"src": "5242:619:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5933:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5979:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5981:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5981:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5981:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5954:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5963:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5950:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5950:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5975:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5946:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:32:1"
															},
															"nodeType": "YulIf",
															"src": "5943:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "6072:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6087:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6101:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6091:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6116:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6151:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6147:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6126:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6126:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6116:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5903:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5914:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5926:6:1",
														"type": ""
													}
												],
												"src": "5867:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6242:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6296:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6305:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6308:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6298:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6298:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6265:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6287:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6272:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6272:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6262:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6262:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6255:40:1"
															},
															"nodeType": "YulIf",
															"src": "6252:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6235:5:1",
														"type": ""
													}
												],
												"src": "6202:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6373:84:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6383:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6392:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6383:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6445:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6421:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6421:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6421:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6351:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6359:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6367:5:1",
														"type": ""
													}
												],
												"src": "6324:133:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6543:388:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6589:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6591:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6591:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6564:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6560:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6556:32:1"
															},
															"nodeType": "YulIf",
															"src": "6553:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "6682:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6697:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6701:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6726:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6761:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6757:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6781:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6736:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6736:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6809:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6838:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6854:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6886:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6897:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6882:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6882:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6906:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6864:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6864:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6854:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6505:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6516:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6528:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6536:6:1",
														"type": ""
													}
												],
												"src": "6463:468:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7026:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7043:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7046:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7036:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7036:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7149:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7169:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7159:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7159:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7060:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7211:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7228:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7231:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7221:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7221:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7221:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7325:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7328:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7318:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7318:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7349:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7352:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7342:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7183:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7412:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7422:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7444:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7474:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7452:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7452:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7440:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7426:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7591:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7593:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7593:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7534:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7546:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7531:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7531:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7570:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7582:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7567:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7567:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7528:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7528:62:1"
															},
															"nodeType": "YulIf",
															"src": "7525:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7629:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7633:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7622:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7622:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7398:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7406:4:1",
														"type": ""
													}
												],
												"src": "7369:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7697:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7707:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7717:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7717:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7746:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7746:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7746:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7681:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7690:6:1",
														"type": ""
													}
												],
												"src": "7656:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7857:241:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7962:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7964:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7964:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7964:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7942:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7931:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7931:30:1"
															},
															"nodeType": "YulIf",
															"src": "7928:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7994:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8024:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "8002:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8002:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7994:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8068:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8080:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8086:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8068:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7841:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7852:4:1",
														"type": ""
													}
												],
												"src": "7791:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8168:82:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8191:3:1"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8196:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8201:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8178:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8178:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8178:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8228:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8233:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8224:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8242:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8217:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8217:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8150:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8155:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8160:6:1",
														"type": ""
													}
												],
												"src": "8104:146:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8339:340:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8349:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8415:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8374:40:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8374:48:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8358:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8358:65:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8349:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8439:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8432:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8432:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8462:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8477:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8484:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8473:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8466:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8527:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8529:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8529:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8529:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8508:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8513:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8504:16:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8522:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8501:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8501:25:1"
															},
															"nodeType": "YulIf",
															"src": "8498:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8656:3:1"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8661:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8619:36:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8619:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8619:54:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8312:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8317:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8325:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8333:5:1",
														"type": ""
													}
												],
												"src": "8256:423:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8759:277:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8808:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8810:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8810:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8810:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8787:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8795:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8783:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8783:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8802:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8779:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8779:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8772:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8772:35:1"
															},
															"nodeType": "YulIf",
															"src": "8769:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8900:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8927:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8914:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8904:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8943:87:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9011:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8999:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9018:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9026:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8952:46:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8952:78:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8943:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8753:5:1",
														"type": ""
													}
												],
												"src": "8698:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9168:817:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9215:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9185:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9210:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9181:33:1"
															},
															"nodeType": "YulIf",
															"src": "9178:120:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "9308:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9352:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9435:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9480:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9515:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9526:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9511:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9511:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9535:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9490:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9490:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9563:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9578:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9592:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9582:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9608:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9643:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9654:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9639:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9639:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9663:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9618:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9618:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9608:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9691:287:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9706:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9737:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9748:2:1",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9733:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9733:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9720:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9720:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9710:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9799:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9801:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9801:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9801:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9771:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9779:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9768:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9768:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "9765:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9896:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9940:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9951:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9936:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9936:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9960:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9906:29:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9906:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9896:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9114:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9125:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9137:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9145:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9153:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9161:6:1",
														"type": ""
													}
												],
												"src": "9042:943:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10074:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10120:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10122:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10122:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10122:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10095:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10104:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10091:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10091:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10116:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10087:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10087:32:1"
															},
															"nodeType": "YulIf",
															"src": "10084:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "10213:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10228:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10242:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10232:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10257:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10292:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10303:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10288:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10288:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10312:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10267:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10267:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10257:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10340:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10355:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10369:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10359:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10385:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10420:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10431:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10416:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10416:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10440:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10395:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10395:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10385:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10036:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10047:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10059:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10067:6:1",
														"type": ""
													}
												],
												"src": "9991:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10499:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10516:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10519:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10509:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10509:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10509:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10613:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10616:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10606:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10606:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10606:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10637:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10640:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10630:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10630:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10630:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "10471:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10708:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10718:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10732:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10738:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10728:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10728:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10718:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10749:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10779:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10785:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10775:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10775:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10753:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10826:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10840:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10854:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10862:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10850:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10850:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10840:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10806:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10799:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10799:26:1"
															},
															"nodeType": "YulIf",
															"src": "10796:81:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10929:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "10943:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10943:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10943:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10893:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10916:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10924:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10913:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10913:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10890:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10890:38:1"
															},
															"nodeType": "YulIf",
															"src": "10887:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10692:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10701:6:1",
														"type": ""
													}
												],
												"src": "10657:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11097:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11107:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11122:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11107:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11069:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11074:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11085:11:1",
														"type": ""
													}
												],
												"src": "10983:148:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11247:280:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11257:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11304:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11271:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11271:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11261:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11319:96:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11403:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11408:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11326:76:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11326:89:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11319:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11463:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11470:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11459:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11459:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11477:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11482:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "11424:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11424:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11424:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11498:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11509:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11514:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11505:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11505:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11498:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11228:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11235:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11243:3:1",
														"type": ""
													}
												],
												"src": "11137:390:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11717:251:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11728:102:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11817:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11826:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11735:81:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11735:95:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11728:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11840:102:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11929:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11938:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11847:81:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11847:95:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11840:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11952:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11959:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11952:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11688:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11694:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11702:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11713:3:1",
														"type": ""
													}
												],
												"src": "11533:435:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12032:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12043:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12059:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12053:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12053:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12043:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12015:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12025:6:1",
														"type": ""
													}
												],
												"src": "11974:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12173:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12190:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12195:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12183:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12183:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12183:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12211:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12230:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12235:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12226:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12226:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12211:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12145:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12150:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12161:11:1",
														"type": ""
													}
												],
												"src": "12078:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12342:283:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12352:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12398:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12366:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12366:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12356:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12413:77:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12478:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12483:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12420:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12420:70:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12413:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12538:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12545:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12534:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12534:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12552:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12557:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "12499:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12499:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12499:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12573:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12584:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12611:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "12589:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12589:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12580:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12580:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12573:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12323:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12330:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12338:3:1",
														"type": ""
													}
												],
												"src": "12252:373:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12831:440:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12841:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12853:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12864:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12849:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12849:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12841:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12922:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12935:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12946:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12931:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12931:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12878:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12878:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12878:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13003:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13016:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13027:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13012:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13012:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12959:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12959:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12959:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13085:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13098:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13109:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13094:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13094:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13041:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13041:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13041:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13134:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13145:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13130:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13130:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13154:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13160:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13150:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13150:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13123:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13123:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13123:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13180:84:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13250:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13259:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13188:61:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13188:76:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13180:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12779:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12791:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12799:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12807:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12815:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12826:4:1",
														"type": ""
													}
												],
												"src": "12631:640:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13339:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13349:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "13364:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13358:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13358:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13349:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13406:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "13380:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13380:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13380:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "13317:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13325:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13333:5:1",
														"type": ""
													}
												],
												"src": "13277:141:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13500:273:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13546:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "13548:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13548:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13548:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13521:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13530:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13517:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13517:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13542:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13513:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13513:32:1"
															},
															"nodeType": "YulIf",
															"src": "13510:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "13639:127:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13654:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13668:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13658:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13683:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13728:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13739:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13724:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13724:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13748:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "13693:30:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13693:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "13683:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13470:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13481:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13493:6:1",
														"type": ""
													}
												],
												"src": "13424:349:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100e85760003560e01c80636352211e1161008a578063a22cb46511610059578063a22cb465146102d2578063b88d4fde146102fb578063c87b56dd14610317578063e985e9c514610354576100e8565b80636352211e1461021157806370a082311461024e57806395d89b411461028b578063a0712d68146102b6576100e8565b8063095ea7b3116100c6578063095ea7b31461019257806318160ddd146101ae57806323b872dd146101d957806342842e0e146101f5576100e8565b806301ffc9a7146100ed57806306fdde031461012a578063081812fc14610155575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f91906113e3565b610391565b604051610121919061142b565b60405180910390f35b34801561013657600080fd5b5061013f610423565b60405161014c91906114d6565b60405180910390f35b34801561016157600080fd5b5061017c6004803603810190610177919061152e565b6104b5565b604051610189919061159c565b60405180910390f35b6101ac60048036038101906101a791906115e3565b610534565b005b3480156101ba57600080fd5b506101c3610678565b6040516101d09190611632565b60405180910390f35b6101f360048036038101906101ee919061164d565b61068f565b005b61020f600480360381019061020a919061164d565b6109b1565b005b34801561021d57600080fd5b506102386004803603810190610233919061152e565b6109d1565b604051610245919061159c565b60405180910390f35b34801561025a57600080fd5b50610275600480360381019061027091906116a0565b6109e3565b6040516102829190611632565b60405180910390f35b34801561029757600080fd5b506102a0610a9b565b6040516102ad91906114d6565b60405180910390f35b6102d060048036038101906102cb919061152e565b610b2d565b005b3480156102de57600080fd5b506102f960048036038101906102f491906116f9565b610b3a565b005b6103156004803603810190610310919061186e565b610c45565b005b34801561032357600080fd5b5061033e6004803603810190610339919061152e565b610cb8565b60405161034b91906114d6565b60405180910390f35b34801561036057600080fd5b5061037b600480360381019061037691906118f1565b610d56565b604051610388919061142b565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103ec57506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061041c5750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461043290611960565b80601f016020809104026020016040519081016040528092919081815260200182805461045e90611960565b80156104ab5780601f10610480576101008083540402835291602001916104ab565b820191906000526020600020905b81548152906001019060200180831161048e57829003601f168201915b5050505050905090565b60006104c082610dea565b6104f6576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061053f826109d1565b90508073ffffffffffffffffffffffffffffffffffffffff16610560610e49565b73ffffffffffffffffffffffffffffffffffffffff16146105c35761058c81610587610e49565b610d56565b6105c2576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000610682610e51565b6001546000540303905090565b600061069a82610e56565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610701576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008061070d84610f22565b91509150610723818761071e610e49565b610f49565b61076f5761073886610733610e49565b610d56565b61076e576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036107d5576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107e28686866001610f8d565b80156107ed57600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154600101919050819055506108bb85610897888887610f93565b7c020000000000000000000000000000000000000000000000000000000017610fbb565b600460008681526020019081526020016000208190555060007c0200000000000000000000000000000000000000000000000000000000841603610941576000600185019050600060046000838152602001908152602001600020540361093f57600054811461093e578360046000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46109a98686866001610fe6565b505050505050565b6109cc83838360405180602001604052806000815250610c45565b505050565b60006109dc82610e56565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a4a576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b606060038054610aaa90611960565b80601f0160208091040260200160405190810160405280929190818152602001828054610ad690611960565b8015610b235780601f10610af857610100808354040283529160200191610b23565b820191906000526020600020905b815481529060010190602001808311610b0657829003601f168201915b5050505050905090565b610b373382610fec565b50565b8060076000610b47610e49565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610bf4610e49565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c39919061142b565b60405180910390a35050565b610c5084848461068f565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610cb257610c7b848484846111a7565b610cb1576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610cc382610dea565b610cf9576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610d036112f7565b90506000815103610d235760405180602001604052806000815250610d4e565b80610d2d8461130e565b604051602001610d3e9291906119cd565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610df5610e51565b11158015610e04575060005482105b8015610e42575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b600033905090565b600090565b60008082905080610e65610e51565b11610eeb57600054811015610eea5760006004600083815260200190815260200160002054905060007c0100000000000000000000000000000000000000000000000000000000821603610ee8575b60008103610ede576004600083600190039350838152602001908152602001600020549050610eb4565b8092505050610f1d565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e8610faa86868461135e565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b6000805490506000820361102c576040517fb562e8dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110396000848385610f8d565b600160406001901b178202600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506110b0836110a16000866000610f93565b6110aa85611367565b17610fbb565b6004600083815260200190815260200160002081905550600080838301905073ffffffffffffffffffffffffffffffffffffffff85169150828260007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600183015b81811461115157808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600181019050611116565b506000820361118c576040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060008190555050506111a26000848385610fe6565b505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111cd610e49565b8786866040518563ffffffff1660e01b81526004016111ef9493929190611a46565b6020604051808303816000875af192505050801561122b57506040513d601f19601f820116820180604052508101906112289190611aa7565b60015b6112a4573d806000811461125b576040519150601f19603f3d011682016040523d82523d6000602084013e611260565b606091505b50600081510361129c576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b606060a060405101806040526020810391506000825281835b60011561134957600184039350600a81066030018453600a8104905080611327575b50828103602084039350808452505050919050565b60009392505050565b60006001821460e11b9050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6113c08161138b565b81146113cb57600080fd5b50565b6000813590506113dd816113b7565b92915050565b6000602082840312156113f9576113f8611381565b5b6000611407848285016113ce565b91505092915050565b60008115159050919050565b61142581611410565b82525050565b6000602082019050611440600083018461141c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611480578082015181840152602081019050611465565b60008484015250505050565b6000601f19601f8301169050919050565b60006114a882611446565b6114b28185611451565b93506114c2818560208601611462565b6114cb8161148c565b840191505092915050565b600060208201905081810360008301526114f0818461149d565b905092915050565b6000819050919050565b61150b816114f8565b811461151657600080fd5b50565b60008135905061152881611502565b92915050565b60006020828403121561154457611543611381565b5b600061155284828501611519565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115868261155b565b9050919050565b6115968161157b565b82525050565b60006020820190506115b1600083018461158d565b92915050565b6115c08161157b565b81146115cb57600080fd5b50565b6000813590506115dd816115b7565b92915050565b600080604083850312156115fa576115f9611381565b5b6000611608858286016115ce565b925050602061161985828601611519565b9150509250929050565b61162c816114f8565b82525050565b60006020820190506116476000830184611623565b92915050565b60008060006060848603121561166657611665611381565b5b6000611674868287016115ce565b9350506020611685868287016115ce565b925050604061169686828701611519565b9150509250925092565b6000602082840312156116b6576116b5611381565b5b60006116c4848285016115ce565b91505092915050565b6116d681611410565b81146116e157600080fd5b50565b6000813590506116f3816116cd565b92915050565b600080604083850312156117105761170f611381565b5b600061171e858286016115ce565b925050602061172f858286016116e4565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61177b8261148c565b810181811067ffffffffffffffff8211171561179a57611799611743565b5b80604052505050565b60006117ad611377565b90506117b98282611772565b919050565b600067ffffffffffffffff8211156117d9576117d8611743565b5b6117e28261148c565b9050602081019050919050565b82818337600083830152505050565b600061181161180c846117be565b6117a3565b90508281526020810184848401111561182d5761182c61173e565b5b6118388482856117ef565b509392505050565b600082601f83011261185557611854611739565b5b81356118658482602086016117fe565b91505092915050565b6000806000806080858703121561188857611887611381565b5b6000611896878288016115ce565b94505060206118a7878288016115ce565b93505060406118b887828801611519565b925050606085013567ffffffffffffffff8111156118d9576118d8611386565b5b6118e587828801611840565b91505092959194509250565b6000806040838503121561190857611907611381565b5b6000611916858286016115ce565b9250506020611927858286016115ce565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061197857607f821691505b60208210810361198b5761198a611931565b5b50919050565b600081905092915050565b60006119a782611446565b6119b18185611991565b93506119c1818560208601611462565b80840191505092915050565b60006119d9828561199c565b91506119e5828461199c565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000611a18826119f1565b611a2281856119fc565b9350611a32818560208601611462565b611a3b8161148c565b840191505092915050565b6000608082019050611a5b600083018761158d565b611a68602083018661158d565b611a756040830185611623565b8181036060830152611a878184611a0d565b905095945050505050565b600081519050611aa1816113b7565b92915050565b600060208284031215611abd57611abc611381565b5b6000611acb84828501611a92565b9150509291505056fea2646970667358221220e49b2c2d750b19309687b10dec36b21aac047fcb5c68e4a5e28d28a7bc34eb8364736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x354 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2B6 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1F5 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x155 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x13E3 JUMP JUMPDEST PUSH2 0x391 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x142B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x152E JUMP JUMPDEST PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x159C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x15E3 JUMP JUMPDEST PUSH2 0x534 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C3 PUSH2 0x678 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1632 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x164D JUMP JUMPDEST PUSH2 0x68F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x164D JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x152E JUMP JUMPDEST PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x159C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x16A0 JUMP JUMPDEST PUSH2 0x9E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1632 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A0 PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x152E JUMP JUMPDEST PUSH2 0xB2D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x16F9 JUMP JUMPDEST PUSH2 0xB3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x186E JUMP JUMPDEST PUSH2 0xC45 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x152E JUMP JUMPDEST PUSH2 0xCB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x18F1 JUMP JUMPDEST PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x388 SWAP2 SWAP1 PUSH2 0x142B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3EC JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x41C JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x432 SWAP1 PUSH2 0x1960 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x45E SWAP1 PUSH2 0x1960 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4AB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x480 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4AB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x48E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C0 DUP3 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53F DUP3 PUSH2 0x9D1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x560 PUSH2 0xE49 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5C3 JUMPI PUSH2 0x58C DUP2 PUSH2 0x587 PUSH2 0xE49 JUMP JUMPDEST PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x682 PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x69A DUP3 PUSH2 0xE56 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x701 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x70D DUP5 PUSH2 0xF22 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x723 DUP2 DUP8 PUSH2 0x71E PUSH2 0xE49 JUMP JUMPDEST PUSH2 0xF49 JUMP JUMPDEST PUSH2 0x76F JUMPI PUSH2 0x738 DUP7 PUSH2 0x733 PUSH2 0xE49 JUMP JUMPDEST PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7E2 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xF8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7ED JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x8BB DUP6 PUSH2 0x897 DUP9 DUP9 DUP8 PUSH2 0xF93 JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND SUB PUSH2 0x941 JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x93F JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x93E JUMPI DUP4 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x9A9 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xFE6 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9CC DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC45 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9DC DUP3 PUSH2 0xE56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0xAAA SWAP1 PUSH2 0x1960 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAD6 SWAP1 PUSH2 0x1960 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB23 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAF8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB23 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB06 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB37 CALLER DUP3 PUSH2 0xFEC JUMP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0xB47 PUSH2 0xE49 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBF4 PUSH2 0xE49 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC39 SWAP2 SWAP1 PUSH2 0x142B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC50 DUP5 DUP5 DUP5 PUSH2 0x68F JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xCB2 JUMPI PUSH2 0xC7B DUP5 DUP5 DUP5 DUP5 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0xCB1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xCC3 DUP3 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0xCF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD03 PUSH2 0x12F7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xD23 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD4E JUMP JUMPDEST DUP1 PUSH2 0xD2D DUP5 PUSH2 0x130E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD3E SWAP3 SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xDF5 PUSH2 0xE51 JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xE04 JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xE42 JUMPI POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP DUP1 PUSH2 0xE65 PUSH2 0xE51 JUMP JUMPDEST GT PUSH2 0xEEB JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0xEEA JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND SUB PUSH2 0xEE8 JUMPI JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0xEDE JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0xEB4 JUMP JUMPDEST DUP1 SWAP3 POP POP POP PUSH2 0xF1D JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0xFAA DUP7 DUP7 DUP5 PUSH2 0x135E JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 DUP3 SUB PUSH2 0x102C JUMPI PUSH1 0x40 MLOAD PUSH32 0xB562E8DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1039 PUSH1 0x0 DUP5 DUP4 DUP6 PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x40 PUSH1 0x1 SWAP1 SHL OR DUP3 MUL PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10B0 DUP4 PUSH2 0x10A1 PUSH1 0x0 DUP7 PUSH1 0x0 PUSH2 0xF93 JUMP JUMPDEST PUSH2 0x10AA DUP6 PUSH2 0x1367 JUMP JUMPDEST OR PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP4 DUP4 ADD SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP2 POP DUP3 DUP3 PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 DUP4 ADD JUMPDEST DUP2 DUP2 EQ PUSH2 0x1151 JUMPI DUP1 DUP4 PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1116 JUMP JUMPDEST POP PUSH1 0x0 DUP3 SUB PUSH2 0x118C JUMPI PUSH1 0x40 MLOAD PUSH32 0x2E07630000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x11A2 PUSH1 0x0 DUP5 DUP4 DUP6 PUSH2 0xFE6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11CD PUSH2 0xE49 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11EF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A46 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x122B JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1228 SWAP2 SWAP1 PUSH2 0x1AA7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12A4 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x125B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1260 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x129C JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP PUSH1 0x0 DUP3 MSTORE DUP2 DUP4 JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1349 JUMPI PUSH1 0x1 DUP5 SUB SWAP4 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP5 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP DUP1 PUSH2 0x1327 JUMPI JUMPDEST POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 SUB SWAP4 POP DUP1 DUP5 MSTORE POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH1 0xE1 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13C0 DUP2 PUSH2 0x138B JUMP JUMPDEST DUP2 EQ PUSH2 0x13CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13DD DUP2 PUSH2 0x13B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F9 JUMPI PUSH2 0x13F8 PUSH2 0x1381 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1407 DUP5 DUP3 DUP6 ADD PUSH2 0x13CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1425 DUP2 PUSH2 0x1410 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1440 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x141C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1480 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A8 DUP3 PUSH2 0x1446 JUMP JUMPDEST PUSH2 0x14B2 DUP2 DUP6 PUSH2 0x1451 JUMP JUMPDEST SWAP4 POP PUSH2 0x14C2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1462 JUMP JUMPDEST PUSH2 0x14CB DUP2 PUSH2 0x148C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14F0 DUP2 DUP5 PUSH2 0x149D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x150B DUP2 PUSH2 0x14F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1528 DUP2 PUSH2 0x1502 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1544 JUMPI PUSH2 0x1543 PUSH2 0x1381 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1552 DUP5 DUP3 DUP6 ADD PUSH2 0x1519 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1586 DUP3 PUSH2 0x155B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1596 DUP2 PUSH2 0x157B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15B1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x158D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15C0 DUP2 PUSH2 0x157B JUMP JUMPDEST DUP2 EQ PUSH2 0x15CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15DD DUP2 PUSH2 0x15B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15FA JUMPI PUSH2 0x15F9 PUSH2 0x1381 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1608 DUP6 DUP3 DUP7 ADD PUSH2 0x15CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1619 DUP6 DUP3 DUP7 ADD PUSH2 0x1519 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x162C DUP2 PUSH2 0x14F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1647 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1623 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1666 JUMPI PUSH2 0x1665 PUSH2 0x1381 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1674 DUP7 DUP3 DUP8 ADD PUSH2 0x15CE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1685 DUP7 DUP3 DUP8 ADD PUSH2 0x15CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1696 DUP7 DUP3 DUP8 ADD PUSH2 0x1519 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16B6 JUMPI PUSH2 0x16B5 PUSH2 0x1381 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16C4 DUP5 DUP3 DUP6 ADD PUSH2 0x15CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16D6 DUP2 PUSH2 0x1410 JUMP JUMPDEST DUP2 EQ PUSH2 0x16E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16F3 DUP2 PUSH2 0x16CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1710 JUMPI PUSH2 0x170F PUSH2 0x1381 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x171E DUP6 DUP3 DUP7 ADD PUSH2 0x15CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x172F DUP6 DUP3 DUP7 ADD PUSH2 0x16E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x177B DUP3 PUSH2 0x148C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x179A JUMPI PUSH2 0x1799 PUSH2 0x1743 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17AD PUSH2 0x1377 JUMP JUMPDEST SWAP1 POP PUSH2 0x17B9 DUP3 DUP3 PUSH2 0x1772 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x17D9 JUMPI PUSH2 0x17D8 PUSH2 0x1743 JUMP JUMPDEST JUMPDEST PUSH2 0x17E2 DUP3 PUSH2 0x148C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1811 PUSH2 0x180C DUP5 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0x17A3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x182D JUMPI PUSH2 0x182C PUSH2 0x173E JUMP JUMPDEST JUMPDEST PUSH2 0x1838 DUP5 DUP3 DUP6 PUSH2 0x17EF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1855 JUMPI PUSH2 0x1854 PUSH2 0x1739 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1865 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x17FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1888 JUMPI PUSH2 0x1887 PUSH2 0x1381 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1896 DUP8 DUP3 DUP9 ADD PUSH2 0x15CE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x18A7 DUP8 DUP3 DUP9 ADD PUSH2 0x15CE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x18B8 DUP8 DUP3 DUP9 ADD PUSH2 0x1519 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18D9 JUMPI PUSH2 0x18D8 PUSH2 0x1386 JUMP JUMPDEST JUMPDEST PUSH2 0x18E5 DUP8 DUP3 DUP9 ADD PUSH2 0x1840 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1908 JUMPI PUSH2 0x1907 PUSH2 0x1381 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1916 DUP6 DUP3 DUP7 ADD PUSH2 0x15CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1927 DUP6 DUP3 DUP7 ADD PUSH2 0x15CE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1978 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x198B JUMPI PUSH2 0x198A PUSH2 0x1931 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19A7 DUP3 PUSH2 0x1446 JUMP JUMPDEST PUSH2 0x19B1 DUP2 DUP6 PUSH2 0x1991 JUMP JUMPDEST SWAP4 POP PUSH2 0x19C1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1462 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19D9 DUP3 DUP6 PUSH2 0x199C JUMP JUMPDEST SWAP2 POP PUSH2 0x19E5 DUP3 DUP5 PUSH2 0x199C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A18 DUP3 PUSH2 0x19F1 JUMP JUMPDEST PUSH2 0x1A22 DUP2 DUP6 PUSH2 0x19FC JUMP JUMPDEST SWAP4 POP PUSH2 0x1A32 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1462 JUMP JUMPDEST PUSH2 0x1A3B DUP2 PUSH2 0x148C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1A5B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x158D JUMP JUMPDEST PUSH2 0x1A68 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x158D JUMP JUMPDEST PUSH2 0x1A75 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1623 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1A87 DUP2 DUP5 PUSH2 0x1A0D JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AA1 DUP2 PUSH2 0x13B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ABD JUMPI PUSH2 0x1ABC PUSH2 0x1381 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ACB DUP5 DUP3 DUP6 ADD PUSH2 0x1A92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 SWAP12 0x2C 0x2D PUSH22 0xB19309687B10DEC36B21AAC047FCB5C68E4A5E28D28 0xA7 0xBC CALLVALUE 0xEB DUP4 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "50120:268:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17864:630;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18748:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25069:214;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24521:398;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14603:317;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28612:2764;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;31467:187;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;20100:150;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15754:230;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18917:102;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;50212:174;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;25610:231;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;32235:396;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;19120:313;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25991:162;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17864:630;17949:4;18282:10;18267:25;;:11;:25;;;;:101;;;;18358:10;18343:25;;:11;:25;;;;18267:101;:177;;;;18434:10;18419:25;;:11;:25;;;;18267:177;18248:196;;17864:630;;;:::o;18748:98::-;18802:13;18834:5;18827:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18748:98;:::o;25069:214::-;25145:7;25169:16;25177:7;25169;:16::i;:::-;25164:64;;25194:34;;;;;;;;;;;;;;25164:64;25246:15;:24;25262:7;25246:24;;;;;;;;;;;:30;;;;;;;;;;;;25239:37;;25069:214;;;:::o;24521:398::-;24609:13;24625:16;24633:7;24625;:16::i;:::-;24609:32;;24679:5;24656:28;;:19;:17;:19::i;:::-;:28;;;24652:172;;24703:44;24720:5;24727:19;:17;:19::i;:::-;24703:16;:44::i;:::-;24698:126;;24774:35;;;;;;;;;;;;;;24698:126;24652:172;24867:2;24834:15;:24;24850:7;24834:24;;;;;;;;;;;:30;;;:35;;;;;;;;;;;;;;;;;;24904:7;24900:2;24884:28;;24893:5;24884:28;;;;;;;;;;;;24599:320;24521:398;;:::o;14603:317::-;14664:7;14888:15;:13;:15::i;:::-;14873:12;;14857:13;;:28;:46;14850:53;;14603:317;:::o;28612:2764::-;28749:27;28779;28798:7;28779:18;:27::i;:::-;28749:57;;28862:4;28821:45;;28837:19;28821:45;;;28817:86;;28875:28;;;;;;;;;;;;;;28817:86;28915:27;28944:23;28971:35;28998:7;28971:26;:35::i;:::-;28914:92;;;;29103:68;29128:15;29145:4;29151:19;:17;:19::i;:::-;29103:24;:68::i;:::-;29098:179;;29190:43;29207:4;29213:19;:17;:19::i;:::-;29190:16;:43::i;:::-;29185:92;;29242:35;;;;;;;;;;;;;;29185:92;29098:179;29306:1;29292:16;;:2;:16;;;29288:52;;29317:23;;;;;;;;;;;;;;29288:52;29351:43;29373:4;29379:2;29383:7;29392:1;29351:21;:43::i;:::-;29483:15;29480:157;;;29621:1;29600:19;29593:30;29480:157;30009:18;:24;30028:4;30009:24;;;;;;;;;;;;;;;;30007:26;;;;;;;;;;;;30077:18;:22;30096:2;30077:22;;;;;;;;;;;;;;;;30075:24;;;;;;;;;;;30392:143;30428:2;30476:45;30491:4;30497:2;30501:19;30476:14;:45::i;:::-;11101:8;30448:73;30392:18;:143::i;:::-;30363:17;:26;30381:7;30363:26;;;;;;;;;;;:172;;;;30703:1;11101:8;30652:19;:47;:52;30648:617;;30724:19;30756:1;30746:7;:11;30724:33;;30911:1;30877:17;:30;30895:11;30877:30;;;;;;;;;;;;:35;30873:378;;31013:13;;30998:11;:28;30994:239;;31191:19;31158:17;:30;31176:11;31158:30;;;;;;;;;;;:52;;;;30994:239;30873:378;30706:559;30648:617;31309:7;31305:2;31290:27;;31299:4;31290:27;;;;;;;;;;;;31327:42;31348:4;31354:2;31358:7;31367:1;31327:20;:42::i;:::-;28739:2637;;;28612:2764;;;:::o;31467:187::-;31608:39;31625:4;31631:2;31635:7;31608:39;;;;;;;;;;;;:16;:39::i;:::-;31467:187;;;:::o;20100:150::-;20172:7;20214:27;20233:7;20214:18;:27::i;:::-;20191:52;;20100:150;;;:::o;15754:230::-;15826:7;15866:1;15849:19;;:5;:19;;;15845:60;;15877:28;;;;;;;;;;;;;;15845:60;10069:13;15922:18;:25;15941:5;15922:25;;;;;;;;;;;;;;;;:55;15915:62;;15754:230;;;:::o;18917:102::-;18973:13;19005:7;18998:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18917:102;:::o;50212:174::-;50352:27;50358:10;50370:8;50352:5;:27::i;:::-;50212:174;:::o;25610:231::-;25756:8;25704:18;:39;25723:19;:17;:19::i;:::-;25704:39;;;;;;;;;;;;;;;:49;25744:8;25704:49;;;;;;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;25815:8;25779:55;;25794:19;:17;:19::i;:::-;25779:55;;;25825:8;25779:55;;;;;;:::i;:::-;;;;;;;;25610:231;;:::o;32235:396::-;32404:31;32417:4;32423:2;32427:7;32404:12;:31::i;:::-;32467:1;32449:2;:14;;;:19;32445:180;;32487:56;32518:4;32524:2;32528:7;32537:5;32487:30;:56::i;:::-;32482:143;;32570:40;;;;;;;;;;;;;;32482:143;32445:180;32235:396;;;;:::o;19120:313::-;19193:13;19223:16;19231:7;19223;:16::i;:::-;19218:59;;19248:29;;;;;;;;;;;;;;19218:59;19288:21;19312:10;:8;:10::i;:::-;19288:34;;19364:1;19345:7;19339:21;:26;:87;;;;;;;;;;;;;;;;;19392:7;19401:18;19411:7;19401:9;:18::i;:::-;19375:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;19339:87;19332:94;;;19120:313;;;:::o;25991:162::-;26088:4;26111:18;:25;26130:5;26111:25;;;;;;;;;;;;;;;:35;26137:8;26111:35;;;;;;;;;;;;;;;;;;;;;;;;;26104:42;;25991:162;;;;:::o;26402:277::-;26467:4;26521:7;26502:15;:13;:15::i;:::-;:26;;:65;;;;;26554:13;;26544:7;:23;26502:65;:151;;;;;26652:1;10827:8;26604:17;:26;26622:7;26604:26;;;;;;;;;;;;:44;:49;26502:151;26483:170;;26402:277;;;:::o;48146:103::-;48206:7;48232:10;48225:17;;48146:103;:::o;14135:90::-;14191:7;14135:90;:::o;21224:1249::-;21291:7;21310:12;21325:7;21310:22;;21390:4;21371:15;:13;:15::i;:::-;:23;21367:1042;;21423:13;;21416:4;:20;21412:997;;;21460:14;21477:17;:23;21495:4;21477:23;;;;;;;;;;;;21460:40;;21592:1;10827:8;21564:6;:24;:29;21560:831;;22219:111;22236:1;22226:6;:11;22219:111;;22278:17;:25;22296:6;;;;;;;22278:25;;;;;;;;;;;;22269:34;;22219:111;;;22362:6;22355:13;;;;;;21560:831;21438:971;21412:997;21367:1042;22435:31;;;;;;;;;;;;;;21224:1249;;;;:::o;27537:474::-;27636:27;27665:23;27704:38;27745:15;:24;27761:7;27745:24;;;;;;;;;;;27704:65;;27919:18;27896:41;;27975:19;27969:26;27950:45;;27882:123;27537:474;;;:::o;26783:646::-;26928:11;27090:16;27083:5;27079:28;27070:37;;27248:16;27237:9;27233:32;27220:45;;27396:15;27385:9;27382:30;27374:5;27363:9;27360:20;27357:56;27347:66;;26783:646;;;;;:::o;33275:154::-;;;;;:::o;47473:304::-;47604:7;47623:16;11222:3;47649:19;:41;;47623:68;;11222:3;47716:31;47727:4;47733:2;47737:9;47716:10;:31::i;:::-;47708:40;;:62;;47701:69;;;47473:304;;;;;:::o;23006:443::-;23086:14;23251:16;23244:5;23240:28;23231:37;;23426:5;23412:11;23387:23;23383:41;23380:52;23373:5;23370:63;23360:73;;23006:443;;;;:::o;34076:153::-;;;;;:::o;35800:2902::-;35872:20;35895:13;;35872:36;;35934:1;35922:8;:13;35918:44;;35944:18;;;;;;;;;;;;;;35918:44;35973:61;36003:1;36007:2;36011:12;36025:8;35973:21;:61::i;:::-;36506:1;10204:2;36476:1;:26;;36475:32;36463:8;:45;36437:18;:22;36456:2;36437:22;;;;;;;;;;;;;;;;:71;;;;;;;;;;;36778:136;36814:2;36867:33;36890:1;36894:2;36898:1;36867:14;:33::i;:::-;36834:30;36855:8;36834:20;:30::i;:::-;:66;36778:18;:136::i;:::-;36744:17;:31;36762:12;36744:31;;;;;;;;;;;:170;;;;36929:16;36959:11;36988:8;36973:12;:23;36959:37;;37501:16;37497:2;37493:25;37481:37;;37865:12;37826:8;37786:1;37725:25;37667:1;37607;37581:328;38229:1;38215:12;38211:20;38170:339;38269:3;38260:7;38257:16;38170:339;;38483:7;38473:8;38470:1;38443:25;38440:1;38437;38432:59;38321:1;38312:7;38308:15;38297:26;;38170:339;;;38174:75;38552:1;38540:8;:13;38536:45;;38562:19;;;;;;;;;;;;;;38536:45;38612:3;38596:13;:19;;;;36217:2409;;38635:60;38664:1;38668:2;38672:12;38686:8;38635:20;:60::i;:::-;35862:2840;35800:2902;;:::o;34657:697::-;34815:4;34860:2;34835:45;;;34881:19;:17;:19::i;:::-;34902:4;34908:7;34917:5;34835:88;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;34831:517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35130:1;35113:6;:13;:18;35109:229;;35158:40;;;;;;;;;;;;;;35109:229;35298:6;35292:13;35283:6;35279:2;35275:15;35268:38;34831:517;35001:54;;;34991:64;;;:6;:64;;;;34984:71;;;34657:697;;;;;;:::o;19678:92::-;19729:13;19754:9;;;;;;;;;;;;;;19678:92;:::o;48346:1708::-;48411:17;48839:4;48832;48826:11;48822:22;48929:1;48923:4;48916:15;49002:4;48999:1;48995:12;48988:19;;49082:1;49077:3;49070:14;49183:3;49417:5;49399:419;49425:1;49399:419;;;49464:1;49459:3;49455:11;49448:18;;49632:2;49626:4;49622:13;49618:2;49614:22;49609:3;49601:36;49724:2;49718:4;49714:13;49706:21;;49789:4;49399:419;49779:25;49399:419;49403:21;49855:3;49850;49846:13;49968:4;49963:3;49959:14;49952:21;;50031:6;50026:3;50019:19;48449:1599;;;48346:1708;;;:::o;47184:143::-;47317:6;47184:143;;;;;:::o;23546:318::-;23616:14;23845:1;23835:8;23832:15;23806:24;23802:46;23792:56;;23546:318;;;:::o;7:75:1:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:118::-;4977:24;4995:5;4977:24;:::i;:::-;4972:3;4965:37;4890:118;;:::o;5014:222::-;5107:4;5145:2;5134:9;5130:18;5122:26;;5158:71;5226:1;5215:9;5211:17;5202:6;5158:71;:::i;:::-;5014:222;;;;:::o;5242:619::-;5319:6;5327;5335;5384:2;5372:9;5363:7;5359:23;5355:32;5352:119;;;5390:79;;:::i;:::-;5352:119;5510:1;5535:53;5580:7;5571:6;5560:9;5556:22;5535:53;:::i;:::-;5525:63;;5481:117;5637:2;5663:53;5708:7;5699:6;5688:9;5684:22;5663:53;:::i;:::-;5653:63;;5608:118;5765:2;5791:53;5836:7;5827:6;5816:9;5812:22;5791:53;:::i;:::-;5781:63;;5736:118;5242:619;;;;;:::o;5867:329::-;5926:6;5975:2;5963:9;5954:7;5950:23;5946:32;5943:119;;;5981:79;;:::i;:::-;5943:119;6101:1;6126:53;6171:7;6162:6;6151:9;6147:22;6126:53;:::i;:::-;6116:63;;6072:117;5867:329;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:474::-;10059:6;10067;10116:2;10104:9;10095:7;10091:23;10087:32;10084:119;;;10122:79;;:::i;:::-;10084:119;10242:1;10267:53;10312:7;10303:6;10292:9;10288:22;10267:53;:::i;:::-;10257:63;;10213:117;10369:2;10395:53;10440:7;10431:6;10420:9;10416:22;10395:53;:::i;:::-;10385:63;;10340:118;9991:474;;;;;:::o;10471:180::-;10519:77;10516:1;10509:88;10616:4;10613:1;10606:15;10640:4;10637:1;10630:15;10657:320;10701:6;10738:1;10732:4;10728:12;10718:22;;10785:1;10779:4;10775:12;10806:18;10796:81;;10862:4;10854:6;10850:17;10840:27;;10796:81;10924:2;10916:6;10913:14;10893:18;10890:38;10887:84;;10943:18;;:::i;:::-;10887:84;10708:269;10657:320;;;:::o;10983:148::-;11085:11;11122:3;11107:18;;10983:148;;;;:::o;11137:390::-;11243:3;11271:39;11304:5;11271:39;:::i;:::-;11326:89;11408:6;11403:3;11326:89;:::i;:::-;11319:96;;11424:65;11482:6;11477:3;11470:4;11463:5;11459:16;11424:65;:::i;:::-;11514:6;11509:3;11505:16;11498:23;;11247:280;11137:390;;;;:::o;11533:435::-;11713:3;11735:95;11826:3;11817:6;11735:95;:::i;:::-;11728:102;;11847:95;11938:3;11929:6;11847:95;:::i;:::-;11840:102;;11959:3;11952:10;;11533:435;;;;;:::o;11974:98::-;12025:6;12059:5;12053:12;12043:22;;11974:98;;;:::o;12078:168::-;12161:11;12195:6;12190:3;12183:19;12235:4;12230:3;12226:14;12211:29;;12078:168;;;;:::o;12252:373::-;12338:3;12366:38;12398:5;12366:38;:::i;:::-;12420:70;12483:6;12478:3;12420:70;:::i;:::-;12413:77;;12499:65;12557:6;12552:3;12545:4;12538:5;12534:16;12499:65;:::i;:::-;12589:29;12611:6;12589:29;:::i;:::-;12584:3;12580:39;12573:46;;12342:283;12252:373;;;;:::o;12631:640::-;12826:4;12864:3;12853:9;12849:19;12841:27;;12878:71;12946:1;12935:9;12931:17;12922:6;12878:71;:::i;:::-;12959:72;13027:2;13016:9;13012:18;13003:6;12959:72;:::i;:::-;13041;13109:2;13098:9;13094:18;13085:6;13041:72;:::i;:::-;13160:9;13154:4;13150:20;13145:2;13134:9;13130:18;13123:48;13188:76;13259:4;13250:6;13188:76;:::i;:::-;13180:84;;12631:640;;;;;;;:::o;13277:141::-;13333:5;13364:6;13358:13;13349:22;;13380:32;13406:5;13380:32;:::i;:::-;13277:141;;;;:::o;13424:349::-;13493:6;13542:2;13530:9;13521:7;13517:23;13513:32;13510:119;;;13548:79;;:::i;:::-;13510:119;13668:1;13693:63;13748:7;13739:6;13728:9;13724:22;13693:63;:::i;:::-;13683:73;;13639:127;13424:349;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1384400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2927",
								"getApproved(uint256)": "7381",
								"isApprovedForAll(address,address)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "745",
								"symbol()": "infinite",
								"tokenURI(uint256)": "5534",
								"totalSupply()": "4621",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 50120,
									"end": 50388,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 50120,
									"end": 50388,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 50120,
									"end": 50388,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 50164,
									"end": 50206,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 50164,
									"end": 50206,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50164,
									"end": 50206,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 50164,
									"end": 50206,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 50164,
									"end": 50206,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 50164,
									"end": 50206,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50164,
									"end": 50206,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50164,
									"end": 50206,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 50164,
									"end": 50206,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 50164,
									"end": 50206,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50164,
									"end": 50206,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "PUSH",
									"source": 0,
									"value": "417A756B69000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "PUSH",
									"source": 0,
									"value": "415A554B49000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13729,
									"end": 13734,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13721,
									"end": 13726,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 13721,
									"end": 13734,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13721,
									"end": 13734,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13721,
									"end": 13734,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 13721,
									"end": 13734,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13721,
									"end": 13734,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13721,
									"end": 13734,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 13721,
									"end": 13734,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13721,
									"end": 13734,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 13721,
									"end": 13734,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13721,
									"end": 13734,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13754,
									"end": 13761,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13744,
									"end": 13751,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 13744,
									"end": 13761,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13744,
									"end": 13761,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13744,
									"end": 13761,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 13744,
									"end": 13761,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13744,
									"end": 13761,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13744,
									"end": 13761,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 13744,
									"end": 13761,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13744,
									"end": 13761,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 13744,
									"end": 13761,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13744,
									"end": 13761,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13787,
									"end": 13802,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 13787,
									"end": 13800,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 13787,
									"end": 13800,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13787,
									"end": 13800,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 13787,
									"end": 13802,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13787,
									"end": 13802,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 13787,
									"end": 13802,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13787,
									"end": 13802,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 13787,
									"end": 13802,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13771,
									"end": 13784,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13771,
									"end": 13802,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13771,
									"end": 13802,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13771,
									"end": 13802,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13771,
									"end": 13802,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13655,
									"end": 13809,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 50120,
									"end": 50388,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 50120,
									"end": 50388,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14135,
									"end": 14225,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 14135,
									"end": 14225,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14191,
									"end": 14198,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14135,
									"end": 14225,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14135,
									"end": 14225,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 50120,
									"end": 50388,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 50120,
									"end": 50388,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50120,
									"end": 50388,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 50120,
									"end": 50388,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50120,
									"end": 50388,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 50120,
									"end": 50388,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50120,
									"end": 50388,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 50120,
									"end": 50388,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50120,
									"end": 50388,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e49b2c2d750b19309687b10dec36b21aac047fcb5c68e4a5e28d28a7bc34eb8364736f6c63430008130033",
									".code": [
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH",
											"source": 0,
											"value": "A0712D68"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50120,
											"end": 50388,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 17864,
											"end": 18494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17864,
											"end": 18494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 17864,
											"end": 18494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 18748,
											"end": 18846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 18748,
											"end": 18846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 25069,
											"end": 25283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 25069,
											"end": 25283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 25069,
											"end": 25283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 24521,
											"end": 24919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 24521,
											"end": 24919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 14603,
											"end": 14920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 14603,
											"end": 14920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 28612,
											"end": 31376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 28612,
											"end": 31376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 31467,
											"end": 31654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 31467,
											"end": 31654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 20100,
											"end": 20250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 20100,
											"end": 20250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 20100,
											"end": 20250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 15754,
											"end": 15984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 15754,
											"end": 15984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 15754,
											"end": 15984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 18917,
											"end": 19019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 18917,
											"end": 19019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50386,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 50212,
											"end": 50386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 50212,
											"end": 50386,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50212,
											"end": 50386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50386,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 50212,
											"end": 50386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 50212,
											"end": 50386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50386,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 50212,
											"end": 50386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 50212,
											"end": 50386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50386,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 50212,
											"end": 50386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50386,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 25610,
											"end": 25841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 25610,
											"end": 25841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 32235,
											"end": 32631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 32235,
											"end": 32631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 19120,
											"end": 19433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 19120,
											"end": 19433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 19120,
											"end": 19433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 25991,
											"end": 26153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 25991,
											"end": 26153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 25991,
											"end": 26153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17949,
											"end": 17953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18282,
											"end": 18292,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 18267,
											"end": 18292,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 18267,
											"end": 18292,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 18267,
											"end": 18278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18267,
											"end": 18292,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18267,
											"end": 18292,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 18267,
											"end": 18292,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18267,
											"end": 18292,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18267,
											"end": 18368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18267,
											"end": 18368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 18267,
											"end": 18368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18267,
											"end": 18368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18358,
											"end": 18368,
											"name": "PUSH",
											"source": 0,
											"value": "80AC58CD"
										},
										{
											"begin": 18343,
											"end": 18368,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 18343,
											"end": 18368,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 18343,
											"end": 18354,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18343,
											"end": 18368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18343,
											"end": 18368,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 18343,
											"end": 18368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18343,
											"end": 18368,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18267,
											"end": 18368,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 18267,
											"end": 18368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18267,
											"end": 18444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18267,
											"end": 18444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 18267,
											"end": 18444,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18267,
											"end": 18444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18444,
											"name": "PUSH",
											"source": 0,
											"value": "5B5E139F"
										},
										{
											"begin": 18419,
											"end": 18444,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 18419,
											"end": 18444,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 18419,
											"end": 18430,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18419,
											"end": 18444,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18419,
											"end": 18444,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 18419,
											"end": 18444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18419,
											"end": 18444,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18267,
											"end": 18444,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 18267,
											"end": 18444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18248,
											"end": 18444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18248,
											"end": 18444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18802,
											"end": 18815,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18834,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 18827,
											"end": 18839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 18827,
											"end": 18839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25145,
											"end": 25152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25169,
											"end": 25185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 25177,
											"end": 25184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25169,
											"end": 25176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 25169,
											"end": 25185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25169,
											"end": 25185,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 25169,
											"end": 25185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25164,
											"end": 25228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 25164,
											"end": 25228,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25194,
											"end": 25228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25228,
											"name": "PUSH",
											"source": 0,
											"value": "CF4700E400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25194,
											"end": 25228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25228,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25194,
											"end": 25228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25194,
											"end": 25228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25228,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25228,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25164,
											"end": 25228,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 25164,
											"end": 25228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25261,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25246,
											"end": 25270,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25262,
											"end": 25269,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25270,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25270,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25270,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25246,
											"end": 25270,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25270,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25270,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25270,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25246,
											"end": 25270,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25270,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25246,
											"end": 25270,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25246,
											"end": 25276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25246,
											"end": 25276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25276,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25276,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25246,
											"end": 25276,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25276,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25276,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25246,
											"end": 25276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25239,
											"end": 25276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25239,
											"end": 25276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25069,
											"end": 25283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24609,
											"end": 24622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24625,
											"end": 24641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 24633,
											"end": 24640,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24625,
											"end": 24632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 24625,
											"end": 24641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24625,
											"end": 24641,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 24625,
											"end": 24641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24609,
											"end": 24641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24609,
											"end": 24641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24679,
											"end": 24684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24656,
											"end": 24684,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24656,
											"end": 24684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24656,
											"end": 24675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 24656,
											"end": 24673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 24656,
											"end": 24675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24656,
											"end": 24675,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 24656,
											"end": 24675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24656,
											"end": 24684,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24656,
											"end": 24684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24656,
											"end": 24684,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24652,
											"end": 24824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 24652,
											"end": 24824,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24703,
											"end": 24747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 24720,
											"end": 24725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24727,
											"end": 24746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 24727,
											"end": 24744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 24727,
											"end": 24746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24727,
											"end": 24746,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 24727,
											"end": 24746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24703,
											"end": 24719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 24703,
											"end": 24747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24703,
											"end": 24747,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 24703,
											"end": 24747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24698,
											"end": 24824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 24698,
											"end": 24824,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24774,
											"end": 24809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24774,
											"end": 24809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24774,
											"end": 24809,
											"name": "PUSH",
											"source": 0,
											"value": "CFB3B94200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24774,
											"end": 24809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24774,
											"end": 24809,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24774,
											"end": 24809,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24774,
											"end": 24809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24774,
											"end": 24809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24774,
											"end": 24809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24774,
											"end": 24809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24774,
											"end": 24809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24774,
											"end": 24809,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24774,
											"end": 24809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24774,
											"end": 24809,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24698,
											"end": 24824,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 24698,
											"end": 24824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24652,
											"end": 24824,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 24652,
											"end": 24824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24867,
											"end": 24869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24849,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24834,
											"end": 24858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24850,
											"end": 24857,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24858,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24834,
											"end": 24858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24858,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24834,
											"end": 24858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24834,
											"end": 24858,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24834,
											"end": 24864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24834,
											"end": 24869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24904,
											"end": 24911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24900,
											"end": 24902,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 24912,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24884,
											"end": 24912,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24893,
											"end": 24898,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 24912,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24884,
											"end": 24912,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 24912,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 24884,
											"end": 24912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24884,
											"end": 24912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 24912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24884,
											"end": 24912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 24912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 24912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 24912,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 24912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 24912,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 24599,
											"end": 24919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14664,
											"end": 14671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14888,
											"end": 14903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 14888,
											"end": 14901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 14888,
											"end": 14903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14888,
											"end": 14903,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 14888,
											"end": 14903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14873,
											"end": 14885,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14873,
											"end": 14885,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14857,
											"end": 14870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14857,
											"end": 14870,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14857,
											"end": 14885,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14857,
											"end": 14903,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14850,
											"end": 14903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14850,
											"end": 14903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28749,
											"end": 28776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28779,
											"end": 28806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 28798,
											"end": 28805,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 28779,
											"end": 28806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28806,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 28779,
											"end": 28806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28749,
											"end": 28806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28749,
											"end": 28806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28862,
											"end": 28866,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28821,
											"end": 28866,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28821,
											"end": 28866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28837,
											"end": 28856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28821,
											"end": 28866,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28821,
											"end": 28866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28821,
											"end": 28866,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28817,
											"end": 28903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 28817,
											"end": 28903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28875,
											"end": 28903,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28875,
											"end": 28903,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28875,
											"end": 28903,
											"name": "PUSH",
											"source": 0,
											"value": "A114810000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28875,
											"end": 28903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28875,
											"end": 28903,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28875,
											"end": 28903,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28875,
											"end": 28903,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28875,
											"end": 28903,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28875,
											"end": 28903,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28875,
											"end": 28903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28875,
											"end": 28903,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28875,
											"end": 28903,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28875,
											"end": 28903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28875,
											"end": 28903,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28817,
											"end": 28903,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 28817,
											"end": 28903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28915,
											"end": 28942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28944,
											"end": 28967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28971,
											"end": 29006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 28998,
											"end": 29005,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28971,
											"end": 28997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 28971,
											"end": 29006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28971,
											"end": 29006,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 28971,
											"end": 29006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28914,
											"end": 29006,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28914,
											"end": 29006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28914,
											"end": 29006,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28914,
											"end": 29006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29103,
											"end": 29171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 29128,
											"end": 29143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 29149,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29151,
											"end": 29170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 29151,
											"end": 29168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 29151,
											"end": 29170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29151,
											"end": 29170,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 29151,
											"end": 29170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29103,
											"end": 29127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 29103,
											"end": 29171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29103,
											"end": 29171,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 29103,
											"end": 29171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29098,
											"end": 29277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 29098,
											"end": 29277,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29190,
											"end": 29233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 29207,
											"end": 29211,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29213,
											"end": 29232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 29213,
											"end": 29230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 29213,
											"end": 29232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29213,
											"end": 29232,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 29213,
											"end": 29232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29190,
											"end": 29206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 29190,
											"end": 29233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29190,
											"end": 29233,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 29190,
											"end": 29233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29185,
											"end": 29277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 29185,
											"end": 29277,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29277,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29242,
											"end": 29277,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29277,
											"name": "PUSH",
											"source": 0,
											"value": "59C896BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29242,
											"end": 29277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29277,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29277,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29242,
											"end": 29277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29277,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29242,
											"end": 29277,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29277,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29277,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29277,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29185,
											"end": 29277,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 29185,
											"end": 29277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29098,
											"end": 29277,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 29098,
											"end": 29277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29306,
											"end": 29307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29292,
											"end": 29308,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29292,
											"end": 29308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29292,
											"end": 29294,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29292,
											"end": 29308,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29292,
											"end": 29308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29292,
											"end": 29308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29288,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 29288,
											"end": 29340,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29317,
											"end": 29340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29317,
											"end": 29340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29317,
											"end": 29340,
											"name": "PUSH",
											"source": 0,
											"value": "EA553B3400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29317,
											"end": 29340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29317,
											"end": 29340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29317,
											"end": 29340,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29317,
											"end": 29340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29317,
											"end": 29340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29317,
											"end": 29340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29317,
											"end": 29340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29317,
											"end": 29340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29317,
											"end": 29340,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29317,
											"end": 29340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29317,
											"end": 29340,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29288,
											"end": 29340,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 29288,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29351,
											"end": 29394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 29373,
											"end": 29377,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29379,
											"end": 29381,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29383,
											"end": 29390,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29392,
											"end": 29393,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29351,
											"end": 29372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 29351,
											"end": 29394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29351,
											"end": 29394,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 29351,
											"end": 29394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29483,
											"end": 29498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29480,
											"end": 29637,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29480,
											"end": 29637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 29480,
											"end": 29637,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29621,
											"end": 29622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29600,
											"end": 29619,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29593,
											"end": 29623,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29480,
											"end": 29637,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 29480,
											"end": 29637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30009,
											"end": 30027,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30028,
											"end": 30032,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30009,
											"end": 30033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30007,
											"end": 30033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30007,
											"end": 30033,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30007,
											"end": 30033,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30007,
											"end": 30033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30007,
											"end": 30033,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30007,
											"end": 30033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30007,
											"end": 30033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30007,
											"end": 30033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30007,
											"end": 30033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30007,
											"end": 30033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30007,
											"end": 30033,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30007,
											"end": 30033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30077,
											"end": 30095,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30096,
											"end": 30098,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30077,
											"end": 30099,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30075,
											"end": 30099,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30075,
											"end": 30099,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30075,
											"end": 30099,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30075,
											"end": 30099,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30075,
											"end": 30099,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30075,
											"end": 30099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30075,
											"end": 30099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30075,
											"end": 30099,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30075,
											"end": 30099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30075,
											"end": 30099,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30075,
											"end": 30099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30392,
											"end": 30535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 30428,
											"end": 30430,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30476,
											"end": 30521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 30491,
											"end": 30495,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 30497,
											"end": 30499,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 30501,
											"end": 30520,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30476,
											"end": 30490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 30476,
											"end": 30521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30476,
											"end": 30521,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 30476,
											"end": 30521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11101,
											"end": 11109,
											"name": "PUSH",
											"source": 0,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30448,
											"end": 30521,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 30392,
											"end": 30410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 30392,
											"end": 30535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30392,
											"end": 30535,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 30392,
											"end": 30535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30363,
											"end": 30389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30381,
											"end": 30388,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30389,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30363,
											"end": 30389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30389,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30363,
											"end": 30389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30363,
											"end": 30389,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30535,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30535,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30535,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30703,
											"end": 30704,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11101,
											"end": 11109,
											"name": "PUSH",
											"source": 0,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30652,
											"end": 30671,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30652,
											"end": 30699,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30652,
											"end": 30704,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30648,
											"end": 31265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 30648,
											"end": 31265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30724,
											"end": 30743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30756,
											"end": 30757,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30746,
											"end": 30753,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30746,
											"end": 30757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30724,
											"end": 30757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30724,
											"end": 30757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30911,
											"end": 30912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30877,
											"end": 30894,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30877,
											"end": 30907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30895,
											"end": 30906,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30877,
											"end": 30907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30877,
											"end": 30907,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30877,
											"end": 30907,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30877,
											"end": 30907,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30877,
											"end": 30907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30877,
											"end": 30907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30877,
											"end": 30907,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30877,
											"end": 30907,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30877,
											"end": 30907,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30877,
											"end": 30907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30877,
											"end": 30907,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30877,
											"end": 30907,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30877,
											"end": 30912,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30873,
											"end": 31251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 30873,
											"end": 31251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31013,
											"end": 31026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31013,
											"end": 31026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30998,
											"end": 31009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30998,
											"end": 31026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30994,
											"end": 31233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 30994,
											"end": 31233,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31191,
											"end": 31210,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31175,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31158,
											"end": 31188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31176,
											"end": 31187,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31158,
											"end": 31188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31158,
											"end": 31188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31158,
											"end": 31188,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31210,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30994,
											"end": 31233,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 30994,
											"end": 31233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30873,
											"end": 31251,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 30873,
											"end": 31251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30706,
											"end": 31265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30648,
											"end": 31265,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 30648,
											"end": 31265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31309,
											"end": 31316,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31305,
											"end": 31307,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31290,
											"end": 31317,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31290,
											"end": 31317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31299,
											"end": 31303,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31290,
											"end": 31317,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31290,
											"end": 31317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31290,
											"end": 31317,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 31290,
											"end": 31317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31290,
											"end": 31317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31290,
											"end": 31317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31290,
											"end": 31317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31290,
											"end": 31317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31290,
											"end": 31317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31290,
											"end": 31317,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31290,
											"end": 31317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31290,
											"end": 31317,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 31327,
											"end": 31369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 31348,
											"end": 31352,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31354,
											"end": 31356,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31358,
											"end": 31365,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31367,
											"end": 31368,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31327,
											"end": 31347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 31327,
											"end": 31369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31327,
											"end": 31369,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 31327,
											"end": 31369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28739,
											"end": 31376,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28739,
											"end": 31376,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28739,
											"end": 31376,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28612,
											"end": 31376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31608,
											"end": 31647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 31625,
											"end": 31629,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31631,
											"end": 31633,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31635,
											"end": 31642,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31608,
											"end": 31647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31608,
											"end": 31647,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31608,
											"end": 31647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31608,
											"end": 31647,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31608,
											"end": 31647,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31608,
											"end": 31647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31608,
											"end": 31647,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31608,
											"end": 31647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31608,
											"end": 31647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31608,
											"end": 31647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31608,
											"end": 31647,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31608,
											"end": 31647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31608,
											"end": 31624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 31608,
											"end": 31647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31608,
											"end": 31647,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 31608,
											"end": 31647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31467,
											"end": 31654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20172,
											"end": 20179,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20214,
											"end": 20241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 20233,
											"end": 20240,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20214,
											"end": 20232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 20214,
											"end": 20241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20214,
											"end": 20241,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 20214,
											"end": 20241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20191,
											"end": 20243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20191,
											"end": 20243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20100,
											"end": 20250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15826,
											"end": 15833,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15866,
											"end": 15867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15849,
											"end": 15868,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15849,
											"end": 15868,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15849,
											"end": 15854,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15849,
											"end": 15868,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15849,
											"end": 15868,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15849,
											"end": 15868,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15845,
											"end": 15905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 15845,
											"end": 15905,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15905,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15877,
											"end": 15905,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15905,
											"name": "PUSH",
											"source": 0,
											"value": "8F4EB60400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15877,
											"end": 15905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15905,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15905,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15877,
											"end": 15905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15905,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15877,
											"end": 15905,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15905,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15905,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15905,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15845,
											"end": 15905,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 15845,
											"end": 15905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10069,
											"end": 10082,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15922,
											"end": 15940,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15941,
											"end": 15946,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15922,
											"end": 15977,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15915,
											"end": 15977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15915,
											"end": 15977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18973,
											"end": 18986,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19005,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 18998,
											"end": 19012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 18998,
											"end": 19012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18917,
											"end": 19019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50386,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 50212,
											"end": 50386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50352,
											"end": 50379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 50358,
											"end": 50368,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 50370,
											"end": 50378,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50352,
											"end": 50357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 50352,
											"end": 50379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50352,
											"end": 50379,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 50352,
											"end": 50379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25756,
											"end": 25764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25722,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25723,
											"end": 25742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 25723,
											"end": 25740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 25723,
											"end": 25742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25723,
											"end": 25742,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 25723,
											"end": 25742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25704,
											"end": 25743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25744,
											"end": 25752,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 25764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25815,
											"end": 25823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25794,
											"end": 25813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 25794,
											"end": 25811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 25794,
											"end": 25813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25794,
											"end": 25813,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 25794,
											"end": 25813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 25825,
											"end": 25833,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 25779,
											"end": 25834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25779,
											"end": 25834,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 32417,
											"end": 32421,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32423,
											"end": 32425,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32427,
											"end": 32434,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 32404,
											"end": 32435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32435,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 32404,
											"end": 32435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32467,
											"end": 32468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32449,
											"end": 32451,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32449,
											"end": 32463,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32449,
											"end": 32463,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32449,
											"end": 32463,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 32449,
											"end": 32468,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32445,
											"end": 32625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 32445,
											"end": 32625,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32487,
											"end": 32543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 32518,
											"end": 32522,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32524,
											"end": 32526,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32528,
											"end": 32535,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32537,
											"end": 32542,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32487,
											"end": 32517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 32487,
											"end": 32543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32487,
											"end": 32543,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 32487,
											"end": 32543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32482,
											"end": 32625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 32482,
											"end": 32625,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32570,
											"end": 32610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32570,
											"end": 32610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32570,
											"end": 32610,
											"name": "PUSH",
											"source": 0,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32570,
											"end": 32610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32570,
											"end": 32610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32570,
											"end": 32610,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32570,
											"end": 32610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32570,
											"end": 32610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32570,
											"end": 32610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32570,
											"end": 32610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32570,
											"end": 32610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32570,
											"end": 32610,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32570,
											"end": 32610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32570,
											"end": 32610,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32482,
											"end": 32625,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 32482,
											"end": 32625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32445,
											"end": 32625,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 32445,
											"end": 32625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19193,
											"end": 19206,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19223,
											"end": 19239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 19231,
											"end": 19238,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19223,
											"end": 19230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 19223,
											"end": 19239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19223,
											"end": 19239,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 19223,
											"end": 19239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19218,
											"end": 19277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 19218,
											"end": 19277,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19248,
											"end": 19277,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19248,
											"end": 19277,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19248,
											"end": 19277,
											"name": "PUSH",
											"source": 0,
											"value": "A14C4B5000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19248,
											"end": 19277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19248,
											"end": 19277,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19248,
											"end": 19277,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19248,
											"end": 19277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19248,
											"end": 19277,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19248,
											"end": 19277,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19248,
											"end": 19277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19248,
											"end": 19277,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19248,
											"end": 19277,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19248,
											"end": 19277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19248,
											"end": 19277,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19218,
											"end": 19277,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 19218,
											"end": 19277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19288,
											"end": 19309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19312,
											"end": 19322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 19312,
											"end": 19320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 19312,
											"end": 19322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19312,
											"end": 19322,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 19312,
											"end": 19322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19288,
											"end": 19322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19288,
											"end": 19322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19364,
											"end": 19365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19345,
											"end": 19352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19339,
											"end": 19360,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19339,
											"end": 19365,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19401,
											"end": 19419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 19411,
											"end": 19418,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19401,
											"end": 19410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 19401,
											"end": 19419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19401,
											"end": 19419,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 19401,
											"end": 19419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 19375,
											"end": 19420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19375,
											"end": 19420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 19339,
											"end": 19426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19332,
											"end": 19426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19332,
											"end": 19426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19332,
											"end": 19426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26088,
											"end": 26092,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26111,
											"end": 26129,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26130,
											"end": 26135,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26111,
											"end": 26136,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26137,
											"end": 26145,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 26111,
											"end": 26146,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26104,
											"end": 26146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26104,
											"end": 26146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 26153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26402,
											"end": 26679,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 26402,
											"end": 26679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26467,
											"end": 26471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26521,
											"end": 26528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 26502,
											"end": 26515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 26502,
											"end": 26517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26517,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 26502,
											"end": 26517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26528,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26567,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 26502,
											"end": 26567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26554,
											"end": 26567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26554,
											"end": 26567,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26544,
											"end": 26551,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26544,
											"end": 26567,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26567,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 26502,
											"end": 26567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26653,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 26502,
											"end": 26653,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26652,
											"end": 26653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10827,
											"end": 10835,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26604,
											"end": 26621,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26604,
											"end": 26630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26622,
											"end": 26629,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26630,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26604,
											"end": 26630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26630,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26604,
											"end": 26630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26604,
											"end": 26630,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26630,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26653,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26653,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 26502,
											"end": 26653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26483,
											"end": 26653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26483,
											"end": 26653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26402,
											"end": 26679,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26402,
											"end": 26679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26402,
											"end": 26679,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26402,
											"end": 26679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48146,
											"end": 48249,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 48146,
											"end": 48249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48206,
											"end": 48213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48232,
											"end": 48242,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 48225,
											"end": 48242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48225,
											"end": 48242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48146,
											"end": 48249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48146,
											"end": 48249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14135,
											"end": 14225,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 14135,
											"end": 14225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14135,
											"end": 14225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14135,
											"end": 14225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21224,
											"end": 22473,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 21224,
											"end": 22473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21291,
											"end": 21298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21310,
											"end": 21322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21325,
											"end": 21332,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21310,
											"end": 21332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21310,
											"end": 21332,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21390,
											"end": 21394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21371,
											"end": 21386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 21371,
											"end": 21384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 21371,
											"end": 21386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21371,
											"end": 21386,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 21371,
											"end": 21386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21371,
											"end": 21394,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21367,
											"end": 22409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 21367,
											"end": 22409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21423,
											"end": 21436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21423,
											"end": 21436,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21416,
											"end": 21420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21416,
											"end": 21436,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21412,
											"end": 22409,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21412,
											"end": 22409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 21412,
											"end": 22409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21460,
											"end": 21474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21477,
											"end": 21494,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21477,
											"end": 21500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21495,
											"end": 21499,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21477,
											"end": 21500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21477,
											"end": 21500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21477,
											"end": 21500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21477,
											"end": 21500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21477,
											"end": 21500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21477,
											"end": 21500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21477,
											"end": 21500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21477,
											"end": 21500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21477,
											"end": 21500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21477,
											"end": 21500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21477,
											"end": 21500,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21477,
											"end": 21500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21460,
											"end": 21500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21460,
											"end": 21500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21592,
											"end": 21593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10827,
											"end": 10835,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21564,
											"end": 21570,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21564,
											"end": 21588,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21564,
											"end": 21593,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21560,
											"end": 22391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 21560,
											"end": 22391,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22219,
											"end": 22330,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 22219,
											"end": 22330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22236,
											"end": 22237,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22226,
											"end": 22232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22226,
											"end": 22237,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22219,
											"end": 22330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 22219,
											"end": 22330,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22295,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22278,
											"end": 22303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22296,
											"end": 22302,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22296,
											"end": 22302,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22296,
											"end": 22302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22296,
											"end": 22302,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22296,
											"end": 22302,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22296,
											"end": 22302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22296,
											"end": 22302,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22278,
											"end": 22303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22278,
											"end": 22303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22278,
											"end": 22303,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22303,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22269,
											"end": 22303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22269,
											"end": 22303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22219,
											"end": 22330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 22219,
											"end": 22330,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22219,
											"end": 22330,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 22219,
											"end": 22330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22355,
											"end": 22368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22355,
											"end": 22368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22355,
											"end": 22368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22355,
											"end": 22368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22355,
											"end": 22368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 22355,
											"end": 22368,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21560,
											"end": 22391,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 21560,
											"end": 22391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21438,
											"end": 22409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21412,
											"end": 22409,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 21412,
											"end": 22409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21367,
											"end": 22409,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 21367,
											"end": 22409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22435,
											"end": 22466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22435,
											"end": 22466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22435,
											"end": 22466,
											"name": "PUSH",
											"source": 0,
											"value": "DF2D9B4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22435,
											"end": 22466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22435,
											"end": 22466,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22435,
											"end": 22466,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22435,
											"end": 22466,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22435,
											"end": 22466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22435,
											"end": 22466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22435,
											"end": 22466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22435,
											"end": 22466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22435,
											"end": 22466,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22435,
											"end": 22466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22435,
											"end": 22466,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21224,
											"end": 22473,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 21224,
											"end": 22473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21224,
											"end": 22473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21224,
											"end": 22473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21224,
											"end": 22473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21224,
											"end": 22473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27537,
											"end": 28011,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 27537,
											"end": 28011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27636,
											"end": 27663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27665,
											"end": 27688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27704,
											"end": 27742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27745,
											"end": 27760,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27745,
											"end": 27769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27761,
											"end": 27768,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27745,
											"end": 27769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27745,
											"end": 27769,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27745,
											"end": 27769,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27745,
											"end": 27769,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27745,
											"end": 27769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27745,
											"end": 27769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27745,
											"end": 27769,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27745,
											"end": 27769,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27745,
											"end": 27769,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27745,
											"end": 27769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27745,
											"end": 27769,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27704,
											"end": 27769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27704,
											"end": 27769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27919,
											"end": 27937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27896,
											"end": 27937,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27896,
											"end": 27937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 27994,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27969,
											"end": 27995,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27950,
											"end": 27995,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27950,
											"end": 27995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 28005,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27537,
											"end": 28011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27537,
											"end": 28011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27537,
											"end": 28011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27537,
											"end": 28011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26783,
											"end": 27429,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 26783,
											"end": 27429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26928,
											"end": 26939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27090,
											"end": 27106,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27083,
											"end": 27088,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27079,
											"end": 27107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27070,
											"end": 27107,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27070,
											"end": 27107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27248,
											"end": 27264,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27237,
											"end": 27246,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27233,
											"end": 27265,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27220,
											"end": 27265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27220,
											"end": 27265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27396,
											"end": 27411,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27385,
											"end": 27394,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27382,
											"end": 27412,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27374,
											"end": 27379,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27363,
											"end": 27372,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27360,
											"end": 27380,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27357,
											"end": 27413,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 27347,
											"end": 27413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27347,
											"end": 27413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26783,
											"end": 27429,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26783,
											"end": 27429,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26783,
											"end": 27429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26783,
											"end": 27429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26783,
											"end": 27429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26783,
											"end": 27429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33275,
											"end": 33429,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 33275,
											"end": 33429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33275,
											"end": 33429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33275,
											"end": 33429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33275,
											"end": 33429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33275,
											"end": 33429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33275,
											"end": 33429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47473,
											"end": 47777,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 47473,
											"end": 47777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47604,
											"end": 47611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47623,
											"end": 47639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11225,
											"name": "PUSH",
											"source": 0,
											"value": "E8"
										},
										{
											"begin": 47649,
											"end": 47668,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47649,
											"end": 47690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47649,
											"end": 47690,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 47623,
											"end": 47691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47623,
											"end": 47691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11225,
											"name": "PUSH",
											"source": 0,
											"value": "E8"
										},
										{
											"begin": 47716,
											"end": 47747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 47727,
											"end": 47731,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 47733,
											"end": 47735,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 47737,
											"end": 47746,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 47716,
											"end": 47726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 47716,
											"end": 47747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47716,
											"end": 47747,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 47716,
											"end": 47747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47708,
											"end": 47748,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 47708,
											"end": 47748,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47708,
											"end": 47770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47708,
											"end": 47770,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 47701,
											"end": 47770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47701,
											"end": 47770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47701,
											"end": 47770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47473,
											"end": 47777,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 47473,
											"end": 47777,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47473,
											"end": 47777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47473,
											"end": 47777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47473,
											"end": 47777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47473,
											"end": 47777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23006,
											"end": 23449,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 23006,
											"end": 23449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23086,
											"end": 23100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23251,
											"end": 23267,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23244,
											"end": 23249,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23240,
											"end": 23268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23231,
											"end": 23268,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23231,
											"end": 23268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23426,
											"end": 23431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23412,
											"end": 23423,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 23387,
											"end": 23410,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 23383,
											"end": 23424,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 23380,
											"end": 23432,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 23373,
											"end": 23378,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23370,
											"end": 23433,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 23360,
											"end": 23433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23360,
											"end": 23433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23006,
											"end": 23449,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23006,
											"end": 23449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23006,
											"end": 23449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23006,
											"end": 23449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23006,
											"end": 23449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34076,
											"end": 34229,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 34076,
											"end": 34229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34076,
											"end": 34229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34076,
											"end": 34229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34076,
											"end": 34229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34076,
											"end": 34229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34076,
											"end": 34229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 38702,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 35800,
											"end": 38702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35872,
											"end": 35892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35895,
											"end": 35908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35895,
											"end": 35908,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35872,
											"end": 35908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35872,
											"end": 35908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35934,
											"end": 35935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35922,
											"end": 35930,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35922,
											"end": 35935,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35918,
											"end": 35962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 35918,
											"end": 35962,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35944,
											"end": 35962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35944,
											"end": 35962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35944,
											"end": 35962,
											"name": "PUSH",
											"source": 0,
											"value": "B562E8DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35944,
											"end": 35962,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35944,
											"end": 35962,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35944,
											"end": 35962,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35944,
											"end": 35962,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35944,
											"end": 35962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35944,
											"end": 35962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35944,
											"end": 35962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35944,
											"end": 35962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35944,
											"end": 35962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35944,
											"end": 35962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35944,
											"end": 35962,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35918,
											"end": 35962,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 35918,
											"end": 35962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35973,
											"end": 36034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 36003,
											"end": 36004,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36007,
											"end": 36009,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36011,
											"end": 36023,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36025,
											"end": 36033,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35973,
											"end": 35994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 35973,
											"end": 36034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35973,
											"end": 36034,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 35973,
											"end": 36034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36506,
											"end": 36507,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10204,
											"end": 10206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36476,
											"end": 36477,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36476,
											"end": 36502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36476,
											"end": 36502,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 36475,
											"end": 36507,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 36463,
											"end": 36471,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36463,
											"end": 36508,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 36437,
											"end": 36455,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 36437,
											"end": 36459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36456,
											"end": 36458,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36437,
											"end": 36459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36437,
											"end": 36459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36437,
											"end": 36459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36437,
											"end": 36459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36437,
											"end": 36459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36437,
											"end": 36459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36437,
											"end": 36459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36437,
											"end": 36459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36437,
											"end": 36459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36437,
											"end": 36459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36437,
											"end": 36459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36437,
											"end": 36459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36437,
											"end": 36459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36437,
											"end": 36459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36437,
											"end": 36459,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36437,
											"end": 36459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36437,
											"end": 36508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36437,
											"end": 36508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36437,
											"end": 36508,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36437,
											"end": 36508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36437,
											"end": 36508,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36437,
											"end": 36508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36437,
											"end": 36508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36437,
											"end": 36508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36437,
											"end": 36508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36437,
											"end": 36508,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 36437,
											"end": 36508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36778,
											"end": 36914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 36814,
											"end": 36816,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36867,
											"end": 36900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 36890,
											"end": 36891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36894,
											"end": 36896,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 36898,
											"end": 36899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36867,
											"end": 36881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 36867,
											"end": 36900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36867,
											"end": 36900,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 36867,
											"end": 36900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36834,
											"end": 36864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 36855,
											"end": 36863,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36834,
											"end": 36854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 36834,
											"end": 36864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36834,
											"end": 36864,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 36834,
											"end": 36864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36834,
											"end": 36900,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 36778,
											"end": 36796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 36778,
											"end": 36914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36778,
											"end": 36914,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 36778,
											"end": 36914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36744,
											"end": 36761,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36744,
											"end": 36775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36762,
											"end": 36774,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36744,
											"end": 36775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36744,
											"end": 36775,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36744,
											"end": 36775,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36744,
											"end": 36775,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36744,
											"end": 36775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36744,
											"end": 36775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36744,
											"end": 36775,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36744,
											"end": 36775,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36744,
											"end": 36775,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36744,
											"end": 36775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36744,
											"end": 36775,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36744,
											"end": 36914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36744,
											"end": 36914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36744,
											"end": 36914,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 36744,
											"end": 36914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36929,
											"end": 36945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36959,
											"end": 36970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36988,
											"end": 36996,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36973,
											"end": 36985,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36973,
											"end": 36996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36959,
											"end": 36996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36959,
											"end": 36996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37501,
											"end": 37517,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37497,
											"end": 37499,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37493,
											"end": 37518,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37481,
											"end": 37518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37481,
											"end": 37518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37865,
											"end": 37877,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37826,
											"end": 37834,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37786,
											"end": 37787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37725,
											"end": 37750,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 37667,
											"end": 37668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37607,
											"end": 37608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37581,
											"end": 37909,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 38229,
											"end": 38230,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38215,
											"end": 38227,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38211,
											"end": 38231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38170,
											"end": 38509,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 38170,
											"end": 38509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38269,
											"end": 38272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38260,
											"end": 38267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38257,
											"end": 38273,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38170,
											"end": 38509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 38170,
											"end": 38509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38483,
											"end": 38490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38473,
											"end": 38481,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38470,
											"end": 38471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38443,
											"end": 38468,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 38440,
											"end": 38441,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38437,
											"end": 38438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38432,
											"end": 38491,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 38321,
											"end": 38322,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38312,
											"end": 38319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38308,
											"end": 38323,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38297,
											"end": 38323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38297,
											"end": 38323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38170,
											"end": 38509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 38170,
											"end": 38509,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38170,
											"end": 38509,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 38170,
											"end": 38509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38174,
											"end": 38249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38552,
											"end": 38553,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38540,
											"end": 38548,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38540,
											"end": 38553,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38536,
											"end": 38581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 38536,
											"end": 38581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38562,
											"end": 38581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38562,
											"end": 38581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38562,
											"end": 38581,
											"name": "PUSH",
											"source": 0,
											"value": "2E07630000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 38562,
											"end": 38581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38562,
											"end": 38581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38562,
											"end": 38581,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38562,
											"end": 38581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38562,
											"end": 38581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38562,
											"end": 38581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38562,
											"end": 38581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38562,
											"end": 38581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38562,
											"end": 38581,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38562,
											"end": 38581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38562,
											"end": 38581,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38536,
											"end": 38581,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 38536,
											"end": 38581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38612,
											"end": 38615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38596,
											"end": 38609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38596,
											"end": 38615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38596,
											"end": 38615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38596,
											"end": 38615,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38596,
											"end": 38615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36217,
											"end": 38626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36217,
											"end": 38626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38635,
											"end": 38695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 38664,
											"end": 38665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38668,
											"end": 38670,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38672,
											"end": 38684,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38686,
											"end": 38694,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 38635,
											"end": 38655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 38635,
											"end": 38695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38635,
											"end": 38695,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 38635,
											"end": 38695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35862,
											"end": 38702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 38702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 38702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 38702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34657,
											"end": 35354,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 34657,
											"end": 35354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34815,
											"end": 34819,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34860,
											"end": 34862,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34880,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34835,
											"end": 34880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34880,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 34881,
											"end": 34900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 34881,
											"end": 34898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 34881,
											"end": 34900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34881,
											"end": 34900,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 34881,
											"end": 34900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34902,
											"end": 34906,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34908,
											"end": 34915,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34917,
											"end": 34922,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 34835,
											"end": 34923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 34835,
											"end": 34923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 34835,
											"end": 34923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35130,
											"end": 35131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35113,
											"end": 35119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35113,
											"end": 35126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35113,
											"end": 35131,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35109,
											"end": 35338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 35109,
											"end": 35338,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35158,
											"end": 35198,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35158,
											"end": 35198,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35158,
											"end": 35198,
											"name": "PUSH",
											"source": 0,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35158,
											"end": 35198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35158,
											"end": 35198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35158,
											"end": 35198,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35158,
											"end": 35198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35158,
											"end": 35198,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35158,
											"end": 35198,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35158,
											"end": 35198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35158,
											"end": 35198,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35158,
											"end": 35198,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35158,
											"end": 35198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35158,
											"end": 35198,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35109,
											"end": 35338,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 35109,
											"end": 35338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35298,
											"end": 35304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35292,
											"end": 35305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35283,
											"end": 35289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35279,
											"end": 35281,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35275,
											"end": 35290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35268,
											"end": 35306,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 34831,
											"end": 35348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35001,
											"end": 35055,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 35001,
											"end": 35055,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 35001,
											"end": 35055,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 34991,
											"end": 35055,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34991,
											"end": 35055,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 34991,
											"end": 35055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34991,
											"end": 34997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34991,
											"end": 35055,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34991,
											"end": 35055,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 34991,
											"end": 35055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34991,
											"end": 35055,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34984,
											"end": 35055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34984,
											"end": 35055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34984,
											"end": 35055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34657,
											"end": 35354,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 34657,
											"end": 35354,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34657,
											"end": 35354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34657,
											"end": 35354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34657,
											"end": 35354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34657,
											"end": 35354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34657,
											"end": 35354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19678,
											"end": 19770,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 19678,
											"end": 19770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19729,
											"end": 19742,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19754,
											"end": 19763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19754,
											"end": 19763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19754,
											"end": 19763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19754,
											"end": 19763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19754,
											"end": 19763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19754,
											"end": 19763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19754,
											"end": 19763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19754,
											"end": 19763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19754,
											"end": 19763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19754,
											"end": 19763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19754,
											"end": 19763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19754,
											"end": 19763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19754,
											"end": 19763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19754,
											"end": 19763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19678,
											"end": 19770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19678,
											"end": 19770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48346,
											"end": 50054,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 48346,
											"end": 50054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48411,
											"end": 48428,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 48839,
											"end": 48843,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 48832,
											"end": 48836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48826,
											"end": 48837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48822,
											"end": 48844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48929,
											"end": 48930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48923,
											"end": 48927,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48916,
											"end": 48931,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49002,
											"end": 49006,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48999,
											"end": 49000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48995,
											"end": 49007,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48988,
											"end": 49007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48988,
											"end": 49007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49082,
											"end": 49083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49077,
											"end": 49080,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49070,
											"end": 49084,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49183,
											"end": 49186,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49417,
											"end": 49422,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49399,
											"end": 49818,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 49399,
											"end": 49818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49425,
											"end": 49426,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 49399,
											"end": 49818,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49399,
											"end": 49818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 49399,
											"end": 49818,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49464,
											"end": 49465,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 49459,
											"end": 49462,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49455,
											"end": 49466,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49448,
											"end": 49466,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 49448,
											"end": 49466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49632,
											"end": 49634,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 49626,
											"end": 49630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49622,
											"end": 49635,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 49618,
											"end": 49620,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 49614,
											"end": 49636,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49609,
											"end": 49612,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49601,
											"end": 49637,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 49724,
											"end": 49726,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 49718,
											"end": 49722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49714,
											"end": 49727,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 49706,
											"end": 49727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49706,
											"end": 49727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49789,
											"end": 49793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49399,
											"end": 49818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 49779,
											"end": 49804,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49399,
											"end": 49818,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 49399,
											"end": 49818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49403,
											"end": 49424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49855,
											"end": 49858,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49850,
											"end": 49853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49846,
											"end": 49859,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49968,
											"end": 49972,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49963,
											"end": 49966,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49959,
											"end": 49973,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49952,
											"end": 49973,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 49952,
											"end": 49973,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50031,
											"end": 50037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50026,
											"end": 50029,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50019,
											"end": 50038,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48449,
											"end": 50048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48449,
											"end": 50048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48449,
											"end": 50048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48346,
											"end": 50054,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48346,
											"end": 50054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48346,
											"end": 50054,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48346,
											"end": 50054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47184,
											"end": 47327,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 47184,
											"end": 47327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47317,
											"end": 47323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47184,
											"end": 47327,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 47184,
											"end": 47327,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47184,
											"end": 47327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47184,
											"end": 47327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47184,
											"end": 47327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47184,
											"end": 47327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23546,
											"end": 23864,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 23546,
											"end": 23864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23616,
											"end": 23630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23845,
											"end": 23846,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23835,
											"end": 23843,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23832,
											"end": 23847,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23806,
											"end": 23830,
											"name": "PUSH",
											"source": 0,
											"value": "E1"
										},
										{
											"begin": 23802,
											"end": 23848,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 23792,
											"end": 23848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23792,
											"end": 23848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23546,
											"end": 23864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23546,
											"end": 23864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23546,
											"end": 23864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23546,
											"end": 23864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 4995,
											"end": 5000,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 4977,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 4975,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4965,
											"end": 5002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5107,
											"end": 5111,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5145,
											"end": 5147,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5134,
											"end": 5143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5130,
											"end": 5148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 5226,
											"end": 5227,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5224,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5211,
											"end": 5228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5202,
											"end": 5208,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 5158,
											"end": 5229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5014,
											"end": 5236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5327,
											"end": 5333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5335,
											"end": 5341,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5386,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5372,
											"end": 5381,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5370,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5359,
											"end": 5382,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5387,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 5390,
											"end": 5469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5510,
											"end": 5511,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 5580,
											"end": 5587,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5577,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5560,
											"end": 5569,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5556,
											"end": 5578,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 5535,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5481,
											"end": 5598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5639,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 5708,
											"end": 5715,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5699,
											"end": 5705,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5697,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5684,
											"end": 5706,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 5663,
											"end": 5716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 5716,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 5716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5608,
											"end": 5726,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5765,
											"end": 5767,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 5836,
											"end": 5843,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5827,
											"end": 5833,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5816,
											"end": 5825,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5812,
											"end": 5834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 5791,
											"end": 5844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5926,
											"end": 5932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5975,
											"end": 5977,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5963,
											"end": 5972,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5954,
											"end": 5961,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5950,
											"end": 5973,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5946,
											"end": 5978,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 5981,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6101,
											"end": 6102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 6171,
											"end": 6178,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6160,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6147,
											"end": 6169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 6126,
											"end": 6179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6116,
											"end": 6179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6116,
											"end": 6179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6072,
											"end": 6189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 6272,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6298,
											"end": 6310,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6202,
											"end": 6318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6412,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 6421,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6560,
											"end": 6583,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 6591,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 6781,
											"end": 6788,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6757,
											"end": 6779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 6736,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6682,
											"end": 6799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6840,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 6906,
											"end": 6913,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6882,
											"end": 6904,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 6864,
											"end": 6914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6809,
											"end": 6924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7231,
											"end": 7308,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7333,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7357,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 7452,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7444,
											"end": 7450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7440,
											"end": 7480,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7580,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7412,
											"end": 7650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7369,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 7717,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 7746,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 7964,
											"end": 7982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 8002,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 8098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8191,
											"end": 8194,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8178,
											"end": 8208,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8224,
											"end": 8240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8217,
											"end": 8244,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8333,
											"end": 8338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 8374,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 8358,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8432,
											"end": 8453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8473,
											"end": 8489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8522,
											"end": 8525,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8513,
											"end": 8519,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8508,
											"end": 8511,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8504,
											"end": 8520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8501,
											"end": 8526,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 8529,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 8619,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8787,
											"end": 8793,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8783,
											"end": 8800,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8779,
											"end": 8806,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 8810,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 9026,
											"end": 9029,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9018,
											"end": 9024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9003,
											"end": 9009,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 8952,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8759,
											"end": 9036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9153,
											"end": 9159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9210,
											"end": 9213,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9198,
											"end": 9207,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9185,
											"end": 9208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9181,
											"end": 9214,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 9535,
											"end": 9542,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9526,
											"end": 9532,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9511,
											"end": 9533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 9490,
											"end": 9543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 9663,
											"end": 9670,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9639,
											"end": 9661,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 9618,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "tag",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9748,
											"end": 9750,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9720,
											"end": 9752,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9768,
											"end": 9798,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 9801,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "tag",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 9960,
											"end": 9967,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9940,
											"end": 9949,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9958,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 9906,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9691,
											"end": 9978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10059,
											"end": 10065,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10116,
											"end": 10118,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10113,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10095,
											"end": 10102,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10091,
											"end": 10114,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10087,
											"end": 10119,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 10122,
											"end": 10201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "tag",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10242,
											"end": 10243,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 10312,
											"end": 10319,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10303,
											"end": 10309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10292,
											"end": 10301,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10288,
											"end": 10310,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 10267,
											"end": 10320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10213,
											"end": 10330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10369,
											"end": 10371,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 10440,
											"end": 10447,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10431,
											"end": 10437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10420,
											"end": 10429,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10416,
											"end": 10438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 10395,
											"end": 10448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "tag",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10340,
											"end": 10458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10519,
											"end": 10596,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10516,
											"end": 10517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10509,
											"end": 10597,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10620,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 10613,
											"end": 10614,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10606,
											"end": 10621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10640,
											"end": 10644,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10637,
											"end": 10638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10630,
											"end": 10645,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10701,
											"end": 10707,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10738,
											"end": 10739,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10732,
											"end": 10736,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10728,
											"end": 10740,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10785,
											"end": 10786,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10779,
											"end": 10783,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10775,
											"end": 10787,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10862,
											"end": 10866,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 10854,
											"end": 10860,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10924,
											"end": 10926,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10916,
											"end": 10922,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10913,
											"end": 10927,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10893,
											"end": 10911,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10890,
											"end": 10928,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 10943,
											"end": 10961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "tag",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "tag",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10708,
											"end": 10977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11085,
											"end": 11096,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11122,
											"end": 11125,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11107,
											"end": 11125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11107,
											"end": 11125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10983,
											"end": 11131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 11304,
											"end": 11309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 11271,
											"end": 11310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "tag",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 11408,
											"end": 11414,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11403,
											"end": 11406,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 11326,
											"end": 11415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "tag",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11415,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 11482,
											"end": 11488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11477,
											"end": 11480,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11470,
											"end": 11474,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11463,
											"end": 11468,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11459,
											"end": 11475,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 11424,
											"end": 11489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "tag",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11509,
											"end": 11512,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11505,
											"end": 11521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11498,
											"end": 11521,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11498,
											"end": 11521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11247,
											"end": 11527,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11137,
											"end": 11527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11713,
											"end": 11716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 11826,
											"end": 11829,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11817,
											"end": 11823,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 11735,
											"end": 11830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "tag",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11728,
											"end": 11830,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11728,
											"end": 11830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 11938,
											"end": 11941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 11935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 11847,
											"end": 11942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "tag",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11840,
											"end": 11942,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11840,
											"end": 11942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11959,
											"end": 11962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11952,
											"end": 11962,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11952,
											"end": 11962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11533,
											"end": 11968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11974,
											"end": 12072,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 11974,
											"end": 12072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12025,
											"end": 12031,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12059,
											"end": 12064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12053,
											"end": 12065,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12043,
											"end": 12065,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12043,
											"end": 12065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11974,
											"end": 12072,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11974,
											"end": 12072,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11974,
											"end": 12072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11974,
											"end": 12072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12078,
											"end": 12246,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 12078,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12161,
											"end": 12172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12195,
											"end": 12201,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12190,
											"end": 12193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12183,
											"end": 12202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12235,
											"end": 12239,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12230,
											"end": 12233,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12226,
											"end": 12240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12211,
											"end": 12240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12211,
											"end": 12240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12078,
											"end": 12246,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12078,
											"end": 12246,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12078,
											"end": 12246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12078,
											"end": 12246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12078,
											"end": 12246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12252,
											"end": 12625,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 12252,
											"end": 12625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12338,
											"end": 12341,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12366,
											"end": 12404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 12398,
											"end": 12403,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12366,
											"end": 12404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 12366,
											"end": 12404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12366,
											"end": 12404,
											"name": "tag",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 12366,
											"end": 12404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12420,
											"end": 12490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 12483,
											"end": 12489,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12478,
											"end": 12481,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12420,
											"end": 12490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 12420,
											"end": 12490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12420,
											"end": 12490,
											"name": "tag",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 12420,
											"end": 12490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12413,
											"end": 12490,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12413,
											"end": 12490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12499,
											"end": 12564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 12557,
											"end": 12563,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12552,
											"end": 12555,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12545,
											"end": 12549,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12538,
											"end": 12543,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12534,
											"end": 12550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12499,
											"end": 12564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 12499,
											"end": 12564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12499,
											"end": 12564,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 12499,
											"end": 12564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12589,
											"end": 12618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 12611,
											"end": 12617,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12589,
											"end": 12618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 12589,
											"end": 12618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12589,
											"end": 12618,
											"name": "tag",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 12589,
											"end": 12618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12584,
											"end": 12587,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12580,
											"end": 12619,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12573,
											"end": 12619,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12573,
											"end": 12619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12342,
											"end": 12625,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12252,
											"end": 12625,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12252,
											"end": 12625,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12252,
											"end": 12625,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12252,
											"end": 12625,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12252,
											"end": 12625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12826,
											"end": 12830,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12864,
											"end": 12867,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 12853,
											"end": 12862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12849,
											"end": 12868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12841,
											"end": 12868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12841,
											"end": 12868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12878,
											"end": 12949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 12946,
											"end": 12947,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12935,
											"end": 12944,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12931,
											"end": 12948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12922,
											"end": 12928,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12878,
											"end": 12949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 12878,
											"end": 12949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12878,
											"end": 12949,
											"name": "tag",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 12878,
											"end": 12949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12959,
											"end": 13031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 13027,
											"end": 13029,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13016,
											"end": 13025,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13012,
											"end": 13030,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13003,
											"end": 13009,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12959,
											"end": 13031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 12959,
											"end": 13031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12959,
											"end": 13031,
											"name": "tag",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 12959,
											"end": 13031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13041,
											"end": 13113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 13109,
											"end": 13111,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13098,
											"end": 13107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13094,
											"end": 13112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13085,
											"end": 13091,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13041,
											"end": 13113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 13041,
											"end": 13113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13041,
											"end": 13113,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 13041,
											"end": 13113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13160,
											"end": 13169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13154,
											"end": 13158,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13150,
											"end": 13170,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13145,
											"end": 13147,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13134,
											"end": 13143,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13130,
											"end": 13148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13123,
											"end": 13171,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13188,
											"end": 13264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 13259,
											"end": 13263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13250,
											"end": 13256,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13188,
											"end": 13264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 13188,
											"end": 13264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13188,
											"end": 13264,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 13188,
											"end": 13264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13180,
											"end": 13264,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13180,
											"end": 13264,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12631,
											"end": 13271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12631,
											"end": 13271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13277,
											"end": 13418,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 13277,
											"end": 13418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13333,
											"end": 13338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13364,
											"end": 13370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13358,
											"end": 13371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13349,
											"end": 13371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13349,
											"end": 13371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13380,
											"end": 13412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 13406,
											"end": 13411,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13380,
											"end": 13412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 13380,
											"end": 13412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13380,
											"end": 13412,
											"name": "tag",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 13380,
											"end": 13412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13277,
											"end": 13418,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13277,
											"end": 13418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13277,
											"end": 13418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13277,
											"end": 13418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13277,
											"end": 13418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13424,
											"end": 13773,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 13424,
											"end": 13773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13493,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13542,
											"end": 13544,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13530,
											"end": 13539,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13521,
											"end": 13528,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13517,
											"end": 13540,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13513,
											"end": 13545,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 13510,
											"end": 13629,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13510,
											"end": 13629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 13510,
											"end": 13629,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13548,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 13548,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 13548,
											"end": 13627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13548,
											"end": 13627,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 13548,
											"end": 13627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13510,
											"end": 13629,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 13510,
											"end": 13629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13668,
											"end": 13669,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13693,
											"end": 13756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 13748,
											"end": 13755,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13739,
											"end": 13745,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13728,
											"end": 13737,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13724,
											"end": 13746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13693,
											"end": 13756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 13693,
											"end": 13756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13693,
											"end": 13756,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 13693,
											"end": 13756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13683,
											"end": 13756,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13683,
											"end": 13756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13639,
											"end": 13766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13424,
											"end": 13773,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13424,
											"end": 13773,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13424,
											"end": 13773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13424,
											"end": 13773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13424,
											"end": 13773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/ERC-721A_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC-721A_flattened.sol\":\"GasCompareERC721A\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC-721A_flattened.sol\":{\"keccak256\":\"0xec806a3c709e60327e79deaaa3b73942a5294639b5bc574ebb759d0b7a3b3a12\",\"urls\":[\"bzz-raw://b4d30921cb4fd9ea1f7c942863ae0ce89c76c1a7e83906549de7cb3b786118b4\",\"dweb:/ipfs/QmaipAuMjpZeeVq2kSPwhjbPxAdEjw6aYyHfcvr1yh9nPk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 295,
								"contract": "contracts/ERC-721A_flattened.sol:GasCompareERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 297,
								"contract": "contracts/ERC-721A_flattened.sol:GasCompareERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 299,
								"contract": "contracts/ERC-721A_flattened.sol:GasCompareERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 301,
								"contract": "contracts/ERC-721A_flattened.sol:GasCompareERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 305,
								"contract": "contracts/ERC-721A_flattened.sol:GasCompareERC721A",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 309,
								"contract": "contracts/ERC-721A_flattened.sol:GasCompareERC721A",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 314,
								"contract": "contracts/ERC-721A_flattened.sol:GasCompareERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)227_storage)"
							},
							{
								"astId": 320,
								"contract": "contracts/ERC-721A_flattened.sol:GasCompareERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)227_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)227_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)227_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 226,
										"contract": "contracts/ERC-721A_flattened.sol:GasCompareERC721A",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721A.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721A.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC-721A_flattened.sol\":\"IERC721A\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC-721A_flattened.sol\":{\"keccak256\":\"0xec806a3c709e60327e79deaaa3b73942a5294639b5bc574ebb759d0b7a3b3a12\",\"urls\":[\"bzz-raw://b4d30921cb4fd9ea1f7c942863ae0ce89c76c1a7e83906549de7cb3b786118b4\",\"dweb:/ipfs/QmaipAuMjpZeeVq2kSPwhjbPxAdEjw6aYyHfcvr1yh9nPk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/ERC-721A_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/ERC-721A_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/ERC-721A_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/ERC-721A_flattened.sol",
					"exportedSymbols": {
						"ERC721A": [
							1826
						],
						"ERC721A__IERC721Receiver": [
							221
						],
						"GasCompareERC721A": [
							1850
						],
						"IERC721A": [
							205
						]
					},
					"id": 1851,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721A",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "120:37:0",
								"text": " @dev Interface of ERC721A."
							},
							"fullyImplemented": false,
							"id": 205,
							"linearizedBaseContracts": [
								205
							],
							"name": "IERC721A",
							"nameLocation": "168:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "183:76:0",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "cfb3b942",
									"id": 5,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "270:33:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:0"
									},
									"src": "264:42:0"
								},
								{
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "312:44:0",
										"text": " The token does not exist."
									},
									"errorSelector": "cf4700e4",
									"id": 8,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "367:32:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "399:2:0"
									},
									"src": "361:41:0"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "408:65:0",
										"text": " Cannot query the balance for the zero address."
									},
									"errorSelector": "8f4eb604",
									"id": 11,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "510:2:0"
									},
									"src": "478:35:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "519:51:0",
										"text": " Cannot mint to the zero address."
									},
									"errorSelector": "2e076300",
									"id": 14,
									"name": "MintToZeroAddress",
									"nameLocation": "581:17:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "598:2:0"
									},
									"src": "575:26:0"
								},
								{
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "607:72:0",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"errorSelector": "b562e8dd",
									"id": 17,
									"name": "MintZeroQuantity",
									"nameLocation": "690:16:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:0"
									},
									"src": "684:25:0"
								},
								{
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "715:44:0",
										"text": " The token does not exist."
									},
									"errorSelector": "df2d9b42",
									"id": 20,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "770:29:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "799:2:0"
									},
									"src": "764:38:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "808:76:0",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "59c896be",
									"id": 23,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "895:33:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "928:2:0"
									},
									"src": "889:42:0"
								},
								{
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "937:53:0",
										"text": " The token must be owned by `from`."
									},
									"errorSelector": "a1148100",
									"id": 26,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "1001:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1027:2:0"
									},
									"src": "995:35:0"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "1036:116:0",
										"text": " Cannot safely transfer to a contract that does not implement the\n ERC721Receiver interface."
									},
									"errorSelector": "d1a57ed6",
									"id": 29,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "1163:38:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1201:2:0"
									},
									"src": "1157:47:0"
								},
								{
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "1210:55:0",
										"text": " Cannot transfer to the zero address."
									},
									"errorSelector": "ea553b34",
									"id": 32,
									"name": "TransferToZeroAddress",
									"nameLocation": "1276:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1297:2:0"
									},
									"src": "1270:30:0"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1306:44:0",
										"text": " The token does not exist."
									},
									"errorSelector": "a14c4b50",
									"id": 35,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "1361:27:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1388:2:0"
									},
									"src": "1355:36:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1397:79:0",
										"text": " The `quantity` minted with ERC2309 exceeds the safety limit."
									},
									"errorSelector": "3db1f9af",
									"id": 38,
									"name": "MintERC2309QuantityExceedsLimit",
									"nameLocation": "1487:31:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1481:40:0"
								},
								{
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "1527:83:0",
										"text": " The `extraData` cannot be set on an unintialized ownership slot."
									},
									"errorSelector": "00d58153",
									"id": 41,
									"name": "OwnershipNotInitializedForExtraData",
									"nameLocation": "1621:35:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1656:2:0"
									},
									"src": "1615:44:0"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 50,
									"members": [
										{
											"constant": false,
											"id": 43,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1923:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 50,
											"src": "1915:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 42,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1915:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 45,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "2028:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 50,
											"src": "2021:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 44,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2021:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 47,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "2103:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 50,
											"src": "2098:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 46,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2098:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 49,
											"mutability": "mutable",
											"name": "extraData",
											"nameLocation": "2214:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 50,
											"src": "2207:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 48,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "2207:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "1853:14:0",
									"nodeType": "StructDefinition",
									"scope": 205,
									"src": "1846:384:0",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "2421:192:0",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 56,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2627:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2638:2:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "2664:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2664:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2663:9:0"
									},
									"scope": 205,
									"src": "2618:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "2860:341:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3215:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3240:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "3233:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 58,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3233:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:20:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "3276:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3276:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3275:6:0"
									},
									"scope": 205,
									"src": "3206:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "3469:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 73,
									"name": "Transfer",
									"nameLocation": "3568:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3593:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "3577:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3577:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3615:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "3599:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3599:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3635:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "3619:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3619:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3576:67:0"
									},
									"src": "3562:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "3650:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 82,
									"name": "Approval",
									"nameLocation": "3755:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3780:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "3764:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3764:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3803:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "3787:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 77,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3787:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3829:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "3813:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3763:74:0"
									},
									"src": "3749:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "3844:124:0",
										"text": " @dev Emitted when `owner` enables or disables\n (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 91,
									"name": "ApprovalForAll",
									"nameLocation": "3979:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4010:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3994:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4033:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "4017:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4048:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "4043:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 88,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4043:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:64:0"
									},
									"src": "3973:85:0"
								},
								{
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "4064:74:0",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4152:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4170:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "4162:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4162:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4161:15:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4208:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "4200:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4200:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4199:17:0"
									},
									"scope": 205,
									"src": "4143:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 100,
										"nodeType": "StructuredDocumentation",
										"src": "4223:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "4368:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4384:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4376:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4376:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4375:17:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4424:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4416:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4416:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4415:15:0"
									},
									"scope": 205,
									"src": "4359:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "4437:711:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`,\n checking first that contract recipients are aware of the ERC721 protocol\n to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move\n this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5162:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5196:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "5188:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5188:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5218:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "5210:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5210:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5238:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "5230:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5270:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "5255:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 115,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5255:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5178:102:0"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5297:0:0"
									},
									"scope": 205,
									"src": "5153:145:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "5304:80:0",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 129,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5398:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5432:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "5424:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5424:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5454:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "5446:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5446:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "5466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5466:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5414:73:0"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5504:0:0"
									},
									"scope": 205,
									"src": "5389:116:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "5511:512:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6037:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6067:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "6059:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6059:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6089:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "6081:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6081:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6109:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "6101:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6101:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6049:73:0"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6139:0:0"
									},
									"scope": 205,
									"src": "6028:112:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "6146:459:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6619:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6635:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "6627:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6627:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6647:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "6639:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6639:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6626:29:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6672:0:0"
									},
									"scope": 205,
									"src": "6610:63:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "6679:316:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "7009:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7035:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "7027:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7027:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "7050:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "7045:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 151,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7045:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7026:34:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7069:0:0"
									},
									"scope": 205,
									"src": "7000:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "7076:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "7229:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7249:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "7241:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7241:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7240:17:0"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7289:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "7281:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7281:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7280:18:0"
									},
									"scope": 205,
									"src": "7220:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "7305:139:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 173,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "7458:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7483:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "7475:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7475:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7498:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "7490:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7474:33:0"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "7531:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 170,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7531:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7530:6:0"
									},
									"scope": 205,
									"src": "7449:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "7728:58:0",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "7800:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7804:2:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "7830:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7830:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7829:15:0"
									},
									"scope": 205,
									"src": "7791:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "7851:60:0",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "7925:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7931:2:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "7957:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 182,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7957:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7956:15:0"
									},
									"scope": 205,
									"src": "7916:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "7978:90:0",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "8082:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8099:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "8091:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8091:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8090:17:0"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "8131:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 190,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8131:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8130:15:0"
									},
									"scope": 205,
									"src": "8073:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "8333:267:0",
										"text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n (inclusive) is transferred from `from` to `to`, as defined in the\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n See {_mintERC2309} for more details."
									},
									"eventSelector": "deaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d",
									"id": 204,
									"name": "ConsecutiveTransfer",
									"nameLocation": "8611:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "8647:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "8631:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8631:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "8668:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "8660:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8695:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "8679:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8717:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "8701:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8630:90:0"
									},
									"src": "8605:116:0"
								}
							],
							"scope": 1851,
							"src": "158:8565:0",
							"usedErrors": [
								5,
								8,
								11,
								14,
								17,
								20,
								23,
								26,
								29,
								32,
								35,
								38,
								41
							]
						},
						{
							"id": 206,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "8818:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721A__IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 207,
								"nodeType": "StructuredDocumentation",
								"src": "8844:51:0",
								"text": " @dev Interface of ERC721 token receiver."
							},
							"fullyImplemented": false,
							"id": 221,
							"linearizedBaseContracts": [
								221
							],
							"name": "ERC721A__IERC721Receiver",
							"nameLocation": "8906:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "150b7a02",
									"id": 220,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "8946:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8980:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "8972:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8972:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9006:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "8998:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8998:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9028:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "9020:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9020:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9060:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "9045:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 214,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9045:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8962:108:0"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "9089:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 217,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "9089:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9088:8:0"
									},
									"scope": 221,
									"src": "8937:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1851,
							"src": "8896:203:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 223,
										"name": "IERC721A",
										"nameLocations": [
											"9624:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 205,
										"src": "9624:8:0"
									},
									"id": 224,
									"nodeType": "InheritanceSpecifier",
									"src": "9624:8:0"
								}
							],
							"canonicalName": "ERC721A",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 222,
								"nodeType": "StructuredDocumentation",
								"src": "9101:502:0",
								"text": " @title ERC721A\n @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n Non-Fungible Token Standard, including the Metadata extension.\n Optimized for lower gas during batch mints.\n Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n starting from `_startTokenId()`.\n Assumptions:\n - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 1826,
							"linearizedBaseContracts": [
								1826,
								205
							],
							"name": "ERC721A",
							"nameLocation": "9613:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC721A.TokenApprovalRef",
									"id": 227,
									"members": [
										{
											"constant": false,
											"id": 226,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "9766:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 227,
											"src": "9758:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 225,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "9758:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenApprovalRef",
									"nameLocation": "9731:16:0",
									"nodeType": "StructDefinition",
									"scope": 1826,
									"src": "9724:54:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 235,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS_DATA_ENTRY",
									"nameLocation": "10039:27:0",
									"nodeType": "VariableDeclaration",
									"scope": 1826,
									"src": "10014:68:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 228,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10014:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										},
										"id": 234,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10070:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10075:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "10070:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													}
												}
											],
											"id": 232,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "10069:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18446744073709551616_by_1",
												"typeString": "int_const 18446744073709551616"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 233,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "10081:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "10069:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 238,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_MINTED",
									"nameLocation": "10180:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 1826,
									"src": "10155:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 236,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10155:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3634",
										"id": 237,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10204:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 241,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_BURNED",
									"nameLocation": "10304:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 1826,
									"src": "10279:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 239,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10279:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 240,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10328:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 244,
									"mutability": "constant",
									"name": "_BITPOS_AUX",
									"nameLocation": "10420:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1826,
									"src": "10395:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 242,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10395:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313932",
										"id": 243,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10434:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "192"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 252,
									"mutability": "constant",
									"name": "_BITMASK_AUX_COMPLEMENT",
									"nameLocation": "10550:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 1826,
									"src": "10525:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 245,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10525:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										},
										"id": 251,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 246,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10577:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313932",
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10582:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_192_by_1",
															"typeString": "int_const 192"
														},
														"value": "192"
													},
													"src": "10577:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													}
												}
											],
											"id": 249,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "10576:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
												"typeString": "int_const 6277...(50 digits omitted)...2896"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 250,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "10589:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "10576:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 255,
									"mutability": "constant",
									"name": "_BITPOS_START_TIMESTAMP",
									"nameLocation": "10687:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 1826,
									"src": "10662:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 253,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10662:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313630",
										"id": 254,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10713:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_160_by_1",
											"typeString": "int_const 160"
										},
										"value": "160"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 260,
									"mutability": "constant",
									"name": "_BITMASK_BURNED",
									"nameLocation": "10809:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1826,
									"src": "10784:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 256,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10784:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										},
										"id": 259,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 257,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "10827:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323234",
											"id": 258,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "10832:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_224_by_1",
												"typeString": "int_const 224"
											},
											"value": "224"
										},
										"src": "10827:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 263,
									"mutability": "constant",
									"name": "_BITPOS_NEXT_INITIALIZED",
									"nameLocation": "10941:24:0",
									"nodeType": "VariableDeclaration",
									"scope": 1826,
									"src": "10916:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 261,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10916:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323235",
										"id": 262,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10968:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_225_by_1",
											"typeString": "int_const 225"
										},
										"value": "225"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 268,
									"mutability": "constant",
									"name": "_BITMASK_NEXT_INITIALIZED",
									"nameLocation": "11073:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 1826,
									"src": "11048:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 264,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11048:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										},
										"id": 267,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 265,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "11101:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323235",
											"id": 266,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "11106:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_225_by_1",
												"typeString": "int_const 225"
											},
											"value": "225"
										},
										"src": "11101:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 271,
									"mutability": "constant",
									"name": "_BITPOS_EXTRA_DATA",
									"nameLocation": "11201:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1826,
									"src": "11176:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 269,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11176:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323332",
										"id": 270,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11222:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_232_by_1",
											"typeString": "int_const 232"
										},
										"value": "232"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 279,
									"mutability": "constant",
									"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
									"nameLocation": "11343:30:0",
									"nodeType": "VariableDeclaration",
									"scope": 1826,
									"src": "11318:72:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 272,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11318:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										},
										"id": 278,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 273,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11377:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "323332",
														"id": 274,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11382:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_232_by_1",
															"typeString": "int_const 232"
														},
														"value": "232"
													},
													"src": "11377:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													}
												}
											],
											"id": 276,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "11376:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
												"typeString": "int_const 6901...(62 digits omitted)...9296"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 277,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "11389:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "11376:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 287,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS",
									"nameLocation": "11475:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1826,
									"src": "11450:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 280,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11450:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										},
										"id": 286,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11495:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313630",
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11500:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160_by_1",
															"typeString": "int_const 160"
														},
														"value": "160"
													},
													"src": "11495:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													}
												}
											],
											"id": 284,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "11494:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
												"typeString": "int_const 1461...(41 digits omitted)...2976"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 285,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "11507:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "11494:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 290,
									"mutability": "constant",
									"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
									"nameLocation": "11816:32:0",
									"nodeType": "VariableDeclaration",
									"scope": 1826,
									"src": "11791:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11791:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030",
										"id": 289,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11851:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 293,
									"mutability": "constant",
									"name": "_TRANSFER_EVENT_SIGNATURE",
									"nameLocation": "12002:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 1826,
									"src": "11977:127:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 291,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "11977:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307864646632353261643162653263383962363963326230363866633337386461613935326261376631363363346131313632386635356134646635323362336566",
										"id": 292,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12038:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100389287136786176327247604509743168900146139575972864366142685224231313322991_by_1",
											"typeString": "int_const 1003...(70 digits omitted)...2991"
										},
										"value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 295,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "12347:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1826,
									"src": "12331:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12331:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 297,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "12419:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1826,
									"src": "12403:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 296,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12403:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 299,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12471:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1826,
									"src": "12456:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 298,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12456:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 301,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12518:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1826,
									"src": "12503:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 300,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12503:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 305,
									"mutability": "mutable",
									"name": "_packedOwnerships",
									"nameLocation": "12945:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 1826,
									"src": "12909:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 304,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 302,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12917:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "12909:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 303,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12928:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 309,
									"mutability": "mutable",
									"name": "_packedAddressData",
									"nameLocation": "13204:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1826,
									"src": "13168:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 308,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 306,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "13176:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "13168:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 307,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "13187:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 314,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "13324:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1826,
									"src": "13279:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$227_storage_$",
										"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
									},
									"typeName": {
										"id": 313,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 310,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "13287:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "13279:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$227_storage_$",
											"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 312,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 311,
												"name": "TokenApprovalRef",
												"nameLocations": [
													"13298:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 227,
												"src": "13298:16:0"
											},
											"referencedDeclaration": 227,
											"src": "13298:16:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenApprovalRef_$227_storage_ptr",
												"typeString": "struct ERC721A.TokenApprovalRef"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 320,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "13447:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1826,
									"src": "13394:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 319,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 315,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "13402:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "13394:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 318,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 316,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "13421:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "13413:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 317,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "13432:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "13711:98:0",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "13721:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "13729:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "13721:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "13721:13:0"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "13744:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "13754:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "13744:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "13744:17:0"
											},
											{
												"expression": {
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 335,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "13771:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 336,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "13787:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13787:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13771:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "13771:31:0"
											}
										]
									},
									"id": 341,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "13681:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "13667:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13667:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "13702:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "13688:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13688:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13666:44:0"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13711:0:0"
									},
									"scope": 1826,
									"src": "13655:154:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "14200:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14217:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 346,
												"id": 348,
												"nodeType": "Return",
												"src": "14210:8:0"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "14005:125:0",
										"text": " @dev Returns the starting token ID.\n To change the starting token ID, please override this function."
									},
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "14144:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14157:2:0"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "14191:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14191:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14190:9:0"
									},
									"scope": 1826,
									"src": "14135:90:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "14363:37:0",
										"statements": [
											{
												"expression": {
													"id": 356,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 295,
													"src": "14380:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 355,
												"id": 357,
												"nodeType": "Return",
												"src": "14373:20:0"
											}
										]
									},
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "14231:63:0",
										"text": " @dev Returns the next token ID to be minted."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextTokenId",
									"nameLocation": "14308:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14320:2:0"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "14354:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14353:9:0"
									},
									"scope": 1826,
									"src": "14299:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										56
									],
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "14673:247:0",
										"statements": [
											{
												"id": 373,
												"nodeType": "UncheckedBlock",
												"src": "14826:88:0",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 366,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "14857:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 367,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 297,
																	"src": "14873:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14857:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 369,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 350,
																	"src": "14888:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14888:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14857:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 365,
														"id": 372,
														"nodeType": "Return",
														"src": "14850:53:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "14406:192:0",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "14612:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 362,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14646:8:0"
									},
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14623:2:0"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "14664:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14664:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14663:9:0"
									},
									"scope": 1826,
									"src": "14603:317:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "15077:226:0",
										"statements": [
											{
												"id": 386,
												"nodeType": "UncheckedBlock",
												"src": "15224:73:0",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 381,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "15255:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 350,
																	"src": "15271:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15271:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15255:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 380,
														"id": 385,
														"nodeType": "Return",
														"src": "15248:38:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "14926:82:0",
										"text": " @dev Returns the total amount of tokens minted in the contract."
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "15022:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15034:2:0"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "15068:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15068:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15067:9:0"
									},
									"scope": 1826,
									"src": "15013:290:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "15444:36:0",
										"statements": [
											{
												"expression": {
													"id": 394,
													"name": "_burnCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 297,
													"src": "15461:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 393,
												"id": 395,
												"nodeType": "Return",
												"src": "15454:19:0"
											}
										]
									},
									"documentation": {
										"id": 389,
										"nodeType": "StructuredDocumentation",
										"src": "15309:66:0",
										"text": " @dev Returns the total number of tokens burned."
									},
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalBurned",
									"nameLocation": "15389:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15401:2:0"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "15435:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15434:9:0"
									},
									"scope": 1826,
									"src": "15380:100:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "15835:149:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 406,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "15849:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15866:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15858:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 407,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15858:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 410,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15858:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15849:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 415,
												"nodeType": "IfStatement",
												"src": "15845:60:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 412,
															"name": "BalanceQueryForZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "15877:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15877:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 414,
													"nodeType": "RevertStatement",
													"src": "15870:35:0"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 416,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "15922:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 418,
														"indexExpression": {
															"id": 417,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "15941:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "15922:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 419,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "15950:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15922:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 405,
												"id": 421,
												"nodeType": "Return",
												"src": "15915:62:0"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "15675:74:0",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "15763:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 402,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15808:8:0"
									},
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15781:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "15773:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15772:15:0"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "15826:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15826:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15825:9:0"
									},
									"scope": 1826,
									"src": "15754:230:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "16131:106:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 431,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 309,
																		"src": "16149:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 433,
																	"indexExpression": {
																		"id": 432,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 426,
																		"src": "16168:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16149:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 434,
																	"name": "_BITPOS_NUMBER_MINTED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 238,
																	"src": "16178:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16149:50:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 436,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "16148:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 437,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "16203:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16148:82:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 430,
												"id": 439,
												"nodeType": "Return",
												"src": "16141:89:0"
											}
										]
									},
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "15990:66:0",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "16070:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "16092:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "16084:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16084:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16083:15:0"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "16122:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16122:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16121:9:0"
									},
									"scope": 1826,
									"src": "16061:176:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "16400:106:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 449,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 309,
																		"src": "16418:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 451,
																	"indexExpression": {
																		"id": 450,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 444,
																		"src": "16437:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16418:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 452,
																	"name": "_BITPOS_NUMBER_BURNED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "16447:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16418:50:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 454,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "16417:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 455,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "16472:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16417:82:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 448,
												"id": 457,
												"nodeType": "Return",
												"src": "16410:89:0"
											}
										]
									},
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "16243:82:0",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "16339:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "16361:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "16353:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16353:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16352:15:0"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "16391:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16390:9:0"
									},
									"scope": 1826,
									"src": "16330:176:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "16682:72:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 469,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "16706:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 471,
																"indexExpression": {
																	"id": 470,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "16725:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16706:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 472,
																"name": "_BITPOS_AUX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "16735:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16706:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16699:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 467,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "16699:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16699:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 466,
												"id": 475,
												"nodeType": "Return",
												"src": "16692:55:0"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "16512:102:0",
										"text": " Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "16628:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "16644:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "16636:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16636:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16635:15:0"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "16674:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 464,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "16674:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16673:8:0"
									},
									"scope": 1826,
									"src": "16619:135:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 513,
										"nodeType": "Block",
										"src": "16997:334:0",
										"statements": [
											{
												"assignments": [
													486
												],
												"declarations": [
													{
														"constant": false,
														"id": 486,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "17015:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 513,
														"src": "17007:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 485,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17007:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 490,
												"initialValue": {
													"baseExpression": {
														"id": 487,
														"name": "_packedAddressData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "17024:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 489,
													"indexExpression": {
														"id": 488,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "17043:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17024:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17007:42:0"
											},
											{
												"assignments": [
													492
												],
												"declarations": [
													{
														"constant": false,
														"id": 492,
														"mutability": "mutable",
														"name": "auxCasted",
														"nameLocation": "17067:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 513,
														"src": "17059:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 491,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17059:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 493,
												"nodeType": "VariableDeclarationStatement",
												"src": "17059:17:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "17159:40:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17173:16:0",
															"value": {
																"name": "aux",
																"nodeType": "YulIdentifier",
																"src": "17186:3:0"
															},
															"variableNames": [
																{
																	"name": "auxCasted",
																	"nodeType": "YulIdentifier",
																	"src": "17173:9:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 482,
														"isOffset": false,
														"isSlot": false,
														"src": "17186:3:0",
														"valueSize": 1
													},
													{
														"declaration": 492,
														"isOffset": false,
														"isSlot": false,
														"src": "17173:9:0",
														"valueSize": 1
													}
												],
												"id": 494,
												"nodeType": "InlineAssembly",
												"src": "17150:49:0"
											},
											{
												"expression": {
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 495,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "17208:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 496,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 486,
																		"src": "17218:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 497,
																		"name": "_BITMASK_AUX_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 252,
																		"src": "17227:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17218:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 499,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "17217:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 500,
																		"name": "auxCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 492,
																		"src": "17255:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 501,
																		"name": "_BITPOS_AUX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "17268:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17255:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 503,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "17254:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "17217:63:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17208:72:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "17208:72:0"
											},
											{
												"expression": {
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 507,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "17290:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 509,
														"indexExpression": {
															"id": 508,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "17309:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17290:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 510,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "17318:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17290:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "17290:34:0"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "16760:171:0",
										"text": " Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "16945:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "16961:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "16953:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16953:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "16975:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "16968:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 481,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "16968:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16952:27:0"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16997:0:0"
									},
									"scope": 1826,
									"src": "16936:395:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "17955:539:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 523,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "18267:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783031666663396137",
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33540519_by_1",
																	"typeString": "int_const 33540519"
																},
																"value": "0x01ffc9a7"
															},
															"src": "18267:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 526,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "18343:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783830616335386364",
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18358:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2158778573_by_1",
																	"typeString": "int_const 2158778573"
																},
																"value": "0x80ac58cd"
															},
															"src": "18343:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "18267:101:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 530,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "18419:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30783562356531333966",
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18434:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1532892063_by_1",
																"typeString": "int_const 1532892063"
															},
															"value": "0x5b5e139f"
														},
														"src": "18419:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "18267:177:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 522,
												"id": 534,
												"nodeType": "Return",
												"src": "18248:196:0"
											}
										]
									},
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "17518:341:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "17873:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 519,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17931:8:0"
									},
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "17898:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "17891:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 516,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "17891:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17890:20:0"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "17949:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 520,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17949:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17948:6:0"
									},
									"scope": 1826,
									"src": "17864:630:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										179
									],
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "18817:29:0",
										"statements": [
											{
												"expression": {
													"id": 543,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 299,
													"src": "18834:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 542,
												"id": 544,
												"nodeType": "Return",
												"src": "18827:12:0"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "18685:58:0",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "18757:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 539,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "18784:8:0"
									},
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18761:2:0"
									},
									"returnParameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "18802:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 540,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18802:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18801:15:0"
									},
									"scope": 1826,
									"src": "18748:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										185
									],
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "18988:31:0",
										"statements": [
											{
												"expression": {
													"id": 553,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 301,
													"src": "19005:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 552,
												"id": 554,
												"nodeType": "Return",
												"src": "18998:14:0"
											}
										]
									},
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "18852:60:0",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "18926:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 549,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "18955:8:0"
									},
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18932:2:0"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "18973:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 550,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18973:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18972:15:0"
									},
									"scope": 1826,
									"src": "18917:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										193
									],
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "19208:225:0",
										"statements": [
											{
												"condition": {
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "19222:17:0",
													"subExpression": {
														"arguments": [
															{
																"id": 566,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 559,
																"src": "19231:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 565,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "19223:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 567,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19223:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 572,
												"nodeType": "IfStatement",
												"src": "19218:59:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 569,
															"name": "URIQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "19248:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19248:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 571,
													"nodeType": "RevertStatement",
													"src": "19241:36:0"
												}
											},
											{
												"assignments": [
													574
												],
												"declarations": [
													{
														"constant": false,
														"id": 574,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "19302:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 598,
														"src": "19288:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 573,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "19288:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 577,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 575,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "19312:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19312:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19288:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 580,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "19345:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19339:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 578,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "19339:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19339:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19354:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "19339:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19364:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "19339:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19424:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "19339:87:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 589,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "19392:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 591,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 559,
																				"src": "19411:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 590,
																			"name": "_toString",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1825,
																			"src": "19401:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19401:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 587,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "19375:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "19379:12:0",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "19375:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19375:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19368:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 585,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "19368:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19368:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 564,
												"id": 597,
												"nodeType": "Return",
												"src": "19332:94:0"
											}
										]
									},
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "19025:90:0",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "19129:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 561,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "19175:8:0"
									},
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19146:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "19138:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19138:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19137:17:0"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "19193:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 562,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "19193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19192:15:0"
									},
									"scope": 1826,
									"src": "19120:313:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "19744:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "19761:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 604,
												"id": 606,
												"nodeType": "Return",
												"src": "19754:9:0"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "19439:234:0",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, it can be overridden in child contracts."
									},
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "19687:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19695:2:0"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "19729:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 602,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "19729:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19728:15:0"
									},
									"scope": 1826,
									"src": "19678:92:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										107
									],
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "20181:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 622,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 611,
																			"src": "20233:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 621,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 736,
																		"src": "20214:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20214:27:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20206:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 619,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "20206:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20206:36:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "20198:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 617,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "20198:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20198:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 616,
												"id": 626,
												"nodeType": "Return",
												"src": "20191:52:0"
											}
										]
									},
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "19964:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "20109:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 613,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "20154:8:0"
									},
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "20125:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "20117:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20117:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20116:17:0"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "20172:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20172:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20171:9:0"
									},
									"scope": 1826,
									"src": "20100:150:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "20526:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 639,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "20581:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 638,
																"name": "_packedOwnershipOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 736,
																"src": "20562:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20562:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 637,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "20543:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$50_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20543:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$50_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 636,
												"id": 642,
												"nodeType": "Return",
												"src": "20536:54:0"
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "20256:172:0",
										"text": " @dev Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around over time."
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "20442:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "20463:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "20455:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20455:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20454:17:0"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "20503:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$50_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 634,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 633,
														"name": "TokenOwnership",
														"nameLocations": [
															"20503:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 50,
														"src": "20503:14:0"
													},
													"referencedDeclaration": 50,
													"src": "20503:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$50_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20502:23:0"
									},
									"scope": 1826,
									"src": "20433:164:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "20779:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 654,
																"name": "_packedOwnerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "20815:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 656,
															"indexExpression": {
																"id": 655,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "20833:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20815:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 653,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "20796:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$50_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20796:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$50_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 652,
												"id": 658,
												"nodeType": "Return",
												"src": "20789:51:0"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "20603:80:0",
										"text": " @dev Returns the unpacked `TokenOwnership` struct at `index`."
									},
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipAt",
									"nameLocation": "20697:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "20718:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "20710:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20710:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20709:15:0"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "20756:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$50_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 650,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 649,
														"name": "TokenOwnership",
														"nameLocations": [
															"20756:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 50,
														"src": "20756:14:0"
													},
													"referencedDeclaration": 50,
													"src": "20756:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$50_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20755:23:0"
									},
									"scope": 1826,
									"src": "20688:159:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "21019:128:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 666,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "21033:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 668,
														"indexExpression": {
															"id": 667,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "21051:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "21033:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21061:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "21033:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 680,
												"nodeType": "IfStatement",
												"src": "21029:112:0",
												"trueBody": {
													"id": 679,
													"nodeType": "Block",
													"src": "21064:77:0",
													"statements": [
														{
															"expression": {
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 671,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 305,
																		"src": "21078:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 673,
																	"indexExpression": {
																		"id": 672,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 663,
																		"src": "21096:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "21078:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 675,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 663,
																			"src": "21124:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 674,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 736,
																		"src": "21105:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21105:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21078:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 678,
															"nodeType": "ExpressionStatement",
															"src": "21078:52:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "20853:97:0",
										"text": " @dev Initializes the ownership slot minted at `index` for efficiency purposes."
									},
									"id": 682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeOwnershipAt",
									"nameLocation": "20964:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "20995:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "20987:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20987:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20986:15:0"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21019:0:0"
									},
									"scope": 1826,
									"src": "20955:192:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "21300:1173:0",
										"statements": [
											{
												"assignments": [
													691
												],
												"declarations": [
													{
														"constant": false,
														"id": 691,
														"mutability": "mutable",
														"name": "curr",
														"nameLocation": "21318:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 735,
														"src": "21310:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 690,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21310:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 693,
												"initialValue": {
													"id": 692,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 685,
													"src": "21325:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21310:22:0"
											},
											{
												"id": 731,
												"nodeType": "UncheckedBlock",
												"src": "21343:1076:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 694,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 350,
																	"src": "21371:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21371:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 696,
																"name": "curr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "21390:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21371:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 730,
														"nodeType": "IfStatement",
														"src": "21367:1042:0",
														"trueBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 698,
																	"name": "curr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 691,
																	"src": "21416:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 699,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "21423:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21416:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 729,
															"nodeType": "IfStatement",
															"src": "21412:997:0",
															"trueBody": {
																"id": 728,
																"nodeType": "Block",
																"src": "21438:971:0",
																"statements": [
																	{
																		"assignments": [
																			702
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 702,
																				"mutability": "mutable",
																				"name": "packed",
																				"nameLocation": "21468:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 728,
																				"src": "21460:14:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 701,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "21460:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 706,
																		"initialValue": {
																			"baseExpression": {
																				"id": 703,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 305,
																				"src": "21477:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 705,
																			"indexExpression": {
																				"id": 704,
																				"name": "curr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 691,
																				"src": "21495:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "21477:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "21460:40:0"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 709,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 707,
																					"name": "packed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 702,
																					"src": "21564:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&",
																				"rightExpression": {
																					"id": 708,
																					"name": "_BITMASK_BURNED",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 260,
																					"src": "21573:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21564:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 710,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21592:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "21564:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 727,
																		"nodeType": "IfStatement",
																		"src": "21560:831:0",
																		"trueBody": {
																			"id": 726,
																			"nodeType": "Block",
																			"src": "21595:796:0",
																			"statements": [
																				{
																					"body": {
																						"id": 722,
																						"nodeType": "Block",
																						"src": "22239:91:0",
																						"statements": [
																							{
																								"expression": {
																									"id": 720,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 715,
																										"name": "packed",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 702,
																										"src": "22269:6:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"baseExpression": {
																											"id": 716,
																											"name": "_packedOwnerships",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 305,
																											"src": "22278:17:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																												"typeString": "mapping(uint256 => uint256)"
																											}
																										},
																										"id": 719,
																										"indexExpression": {
																											"id": 718,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "UnaryOperation",
																											"operator": "--",
																											"prefix": true,
																											"src": "22296:6:0",
																											"subExpression": {
																												"id": 717,
																												"name": "curr",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 691,
																												"src": "22298:4:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "22278:25:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "22269:34:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 721,
																								"nodeType": "ExpressionStatement",
																								"src": "22269:34:0"
																							}
																						]
																					},
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 714,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 712,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 702,
																							"src": "22226:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 713,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "22236:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "22226:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 723,
																					"nodeType": "WhileStatement",
																					"src": "22219:111:0"
																				},
																				{
																					"expression": {
																						"id": 724,
																						"name": "packed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 702,
																						"src": "22362:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 689,
																					"id": 725,
																					"nodeType": "Return",
																					"src": "22355:13:0"
																				}
																			]
																		}
																	}
																]
															}
														}
													}
												]
											},
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 732,
														"name": "OwnerQueryForNonexistentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "22435:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22435:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "RevertStatement",
												"src": "22428:38:0"
											}
										]
									},
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "21153:66:0",
										"text": " Returns the packed ownership data of `tokenId`."
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packedOwnershipOf",
									"nameLocation": "21233:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "21260:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "21252:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21252:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21251:17:0"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "21291:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21291:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21290:9:0"
									},
									"scope": 1826,
									"src": "21224:1249:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "22666:262:0",
										"statements": [
											{
												"expression": {
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 745,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "22676:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$50_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 747,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "22686:4:0",
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 43,
														"src": "22676:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 752,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 739,
																		"src": "22709:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22701:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 750,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "22701:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22701:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22693:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 748,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "22693:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 754,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22693:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22676:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 756,
												"nodeType": "ExpressionStatement",
												"src": "22676:41:0"
											},
											{
												"expression": {
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 757,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "22727:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$50_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 759,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "22737:14:0",
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 45,
														"src": "22727:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 762,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 739,
																	"src": "22761:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 763,
																	"name": "_BITPOS_START_TIMESTAMP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 255,
																	"src": "22771:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22761:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22754:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 760,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "22754:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 765,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22754:41:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "22727:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 767,
												"nodeType": "ExpressionStatement",
												"src": "22727:68:0"
											},
											{
												"expression": {
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 768,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "22805:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$50_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 770,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "22815:6:0",
														"memberName": "burned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 47,
														"src": "22805:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 771,
																"name": "packed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 739,
																"src": "22824:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 772,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "22833:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22824:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22852:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "22824:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "22805:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "22805:48:0"
											},
											{
												"expression": {
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 778,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "22863:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$50_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 780,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "22873:9:0",
														"memberName": "extraData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 49,
														"src": "22863:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 783,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 739,
																	"src": "22892:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 784,
																	"name": "_BITPOS_EXTRA_DATA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 271,
																	"src": "22902:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22892:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22885:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint24_$",
																"typeString": "type(uint24)"
															},
															"typeName": {
																"id": 781,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "22885:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22885:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "22863:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 788,
												"nodeType": "ExpressionStatement",
												"src": "22863:58:0"
											}
										]
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "22479:83:0",
										"text": " @dev Returns the unpacked `TokenOwnership` struct from `packed`."
									},
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unpackedOwnership",
									"nameLocation": "22576:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "22603:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "22595:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22595:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22594:16:0"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "ownership",
												"nameLocation": "22655:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "22633:31:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$50_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 742,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 741,
														"name": "TokenOwnership",
														"nameLocations": [
															"22633:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 50,
														"src": "22633:14:0"
													},
													"referencedDeclaration": 50,
													"src": "22633:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$50_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22632:33:0"
									},
									"scope": 1826,
									"src": "22567:361:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "23102:347:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "23121:322:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23231:37:0",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "23244:5:0"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "23251:16:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "23240:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "23240:28:0"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "23231:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23360:73:0",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "23373:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_BITPOS_START_TIMESTAMP",
																						"nodeType": "YulIdentifier",
																						"src": "23387:23:0"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "timestamp",
																							"nodeType": "YulIdentifier",
																							"src": "23412:9:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "23412:11:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "23383:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23383:41:0"
																			},
																			{
																				"name": "flags",
																				"nodeType": "YulIdentifier",
																				"src": "23426:5:0"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "23380:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23380:52:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "23370:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "23370:63:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "23360:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 287,
														"isOffset": false,
														"isSlot": false,
														"src": "23251:16:0",
														"valueSize": 1
													},
													{
														"declaration": 255,
														"isOffset": false,
														"isSlot": false,
														"src": "23387:23:0",
														"valueSize": 1
													},
													{
														"declaration": 795,
														"isOffset": false,
														"isSlot": false,
														"src": "23426:5:0",
														"valueSize": 1
													},
													{
														"declaration": 793,
														"isOffset": false,
														"isSlot": false,
														"src": "23231:5:0",
														"valueSize": 1
													},
													{
														"declaration": 793,
														"isOffset": false,
														"isSlot": false,
														"src": "23244:5:0",
														"valueSize": 1
													},
													{
														"declaration": 793,
														"isOffset": false,
														"isSlot": false,
														"src": "23373:5:0",
														"valueSize": 1
													},
													{
														"declaration": 798,
														"isOffset": false,
														"isSlot": false,
														"src": "23360:6:0",
														"valueSize": 1
													}
												],
												"id": 800,
												"nodeType": "InlineAssembly",
												"src": "23112:331:0"
											}
										]
									},
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "22934:67:0",
										"text": " @dev Packs ownership data into a single uint256."
									},
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packOwnershipData",
									"nameLocation": "23015:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "23042:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "23034:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23034:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "flags",
												"nameLocation": "23057:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "23049:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23049:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23033:30:0"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "23094:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "23086:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23086:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23085:16:0"
									},
									"scope": 1826,
									"src": "23006:443:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 811,
										"nodeType": "Block",
										"src": "23632:232:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "23716:142:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23792:56:0",
															"value": {
																"arguments": [
																	{
																		"name": "_BITPOS_NEXT_INITIALIZED",
																		"nodeType": "YulIdentifier",
																		"src": "23806:24:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "quantity",
																				"nodeType": "YulIdentifier",
																				"src": "23835:8:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23845:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "23832:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23832:15:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "23802:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "23802:46:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "23792:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 263,
														"isOffset": false,
														"isSlot": false,
														"src": "23806:24:0",
														"valueSize": 1
													},
													{
														"declaration": 805,
														"isOffset": false,
														"isSlot": false,
														"src": "23835:8:0",
														"valueSize": 1
													},
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "23792:6:0",
														"valueSize": 1
													}
												],
												"id": 810,
												"nodeType": "InlineAssembly",
												"src": "23707:151:0"
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "23455:86:0",
										"text": " @dev Returns the `nextInitialized` flag set if `quantity` equals 1."
									},
									"id": 812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextInitializedFlag",
									"nameLocation": "23555:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "23584:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "23576:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23575:18:0"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "23624:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "23616:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23616:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23615:16:0"
									},
									"scope": 1826,
									"src": "23546:318:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										147
									],
									"body": {
										"id": 856,
										"nodeType": "Block",
										"src": "24599:320:0",
										"statements": [
											{
												"assignments": [
													822
												],
												"declarations": [
													{
														"constant": false,
														"id": 822,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "24617:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 856,
														"src": "24609:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 821,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "24609:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 826,
												"initialValue": {
													"arguments": [
														{
															"id": 824,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "24633:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 823,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "24625:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24625:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24609:32:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 827,
															"name": "_msgSenderERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1815,
															"src": "24656:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24656:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 829,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "24679:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24656:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 842,
												"nodeType": "IfStatement",
												"src": "24652:172:0",
												"trueBody": {
													"condition": {
														"id": 836,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "24702:45:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 832,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "24720:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 833,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1815,
																		"src": "24727:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24727:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 831,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 924,
																"src": "24703:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24703:44:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 841,
													"nodeType": "IfStatement",
													"src": "24698:126:0",
													"trueBody": {
														"id": 840,
														"nodeType": "Block",
														"src": "24749:75:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 837,
																		"name": "ApprovalCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "24774:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24774:35:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 839,
																"nodeType": "RevertStatement",
																"src": "24767:42:0"
															}
														]
													}
												}
											},
											{
												"expression": {
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 843,
																"name": "_tokenApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 314,
																"src": "24834:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$227_storage_$",
																	"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
																}
															},
															"id": 845,
															"indexExpression": {
																"id": 844,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 817,
																"src": "24850:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "24834:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$227_storage",
																"typeString": "struct ERC721A.TokenApprovalRef storage ref"
															}
														},
														"id": 846,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "24859:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 226,
														"src": "24834:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 847,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "24867:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24834:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 849,
												"nodeType": "ExpressionStatement",
												"src": "24834:35:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 851,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "24893:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 852,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "24900:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 853,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "24904:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 850,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "24884:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24884:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 855,
												"nodeType": "EmitStatement",
												"src": "24879:33:0"
											}
										]
									},
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "24057:459:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "24530:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 819,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24590:8:0"
									},
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24546:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "24538:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24538:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24558:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "24550:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24550:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24537:29:0"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24599:0:0"
									},
									"scope": 1826,
									"src": "24521:398:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										163
									],
									"body": {
										"id": 879,
										"nodeType": "Block",
										"src": "25154:129:0",
										"statements": [
											{
												"condition": {
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "25168:17:0",
													"subExpression": {
														"arguments": [
															{
																"id": 867,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 860,
																"src": "25177:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 866,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "25169:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 868,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25169:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 873,
												"nodeType": "IfStatement",
												"src": "25164:64:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 870,
															"name": "ApprovalQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "25194:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 871,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25194:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 872,
													"nodeType": "RevertStatement",
													"src": "25187:41:0"
												}
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 874,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "25246:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$227_storage_$",
																"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
															}
														},
														"id": 876,
														"indexExpression": {
															"id": 875,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "25262:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "25246:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$227_storage",
															"typeString": "struct ERC721A.TokenApprovalRef storage ref"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "25271:5:0",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 226,
													"src": "25246:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 865,
												"id": 878,
												"nodeType": "Return",
												"src": "25239:37:0"
											}
										]
									},
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "24925:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "25078:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 862,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25127:8:0"
									},
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "25098:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "25090:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25090:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25089:17:0"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "25145:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25145:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25144:9:0"
									},
									"scope": 1826,
									"src": "25069:214:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										155
									],
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "25694:147:0",
										"statements": [
											{
												"expression": {
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 889,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 320,
																"src": "25704:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 893,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 890,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1815,
																	"src": "25723:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25723:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "25704:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 894,
														"indexExpression": {
															"id": 892,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "25744:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25704:49:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 895,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "25756:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "25704:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "25704:60:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 899,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1815,
																"src": "25794:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25794:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 901,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "25815:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 902,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "25825:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 898,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "25779:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25779:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 904,
												"nodeType": "EmitStatement",
												"src": "25774:60:0"
											}
										]
									},
									"documentation": {
										"id": 881,
										"nodeType": "StructuredDocumentation",
										"src": "25289:316:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "25619:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 887,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25685:8:0"
									},
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "25645:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "25637:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25637:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "25660:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "25655:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 884,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25655:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25636:33:0"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25694:0:0"
									},
									"scope": 1826,
									"src": "25610:231:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										173
									],
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "26094:59:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 917,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "26111:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 919,
														"indexExpression": {
															"id": 918,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "26130:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "26111:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 921,
													"indexExpression": {
														"id": 920,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "26137:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "26111:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 916,
												"id": 922,
												"nodeType": "Return",
												"src": "26104:42:0"
											}
										]
									},
									"documentation": {
										"id": 907,
										"nodeType": "StructuredDocumentation",
										"src": "25847:139:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "26000:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 913,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "26070:8:0"
									},
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "26025:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "26017:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26017:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "26040:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "26032:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26032:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26016:33:0"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "26088:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 914,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26088:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26087:6:0"
									},
									"scope": 1826,
									"src": "25991:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 949,
										"nodeType": "Block",
										"src": "26473:206:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 939,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 932,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 350,
																	"src": "26502:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26502:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 934,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 927,
																"src": "26521:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26502:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 936,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 927,
																"src": "26544:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 937,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "26554:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26544:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "26502:65:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 940,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "26604:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 942,
																"indexExpression": {
																	"id": 941,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "26622:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "26604:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 943,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "26633:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26604:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26652:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "26604:49:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "26502:151:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 931,
												"id": 948,
												"nodeType": "Return",
												"src": "26483:170:0"
											}
										]
									},
									"documentation": {
										"id": 925,
										"nodeType": "StructuredDocumentation",
										"src": "26159:238:0",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted. See {_mint}."
									},
									"id": 950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "26411:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26427:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "26419:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26419:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26418:17:0"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "26467:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 929,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26467:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26466:6:0"
									},
									"scope": 1826,
									"src": "26402:277:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 963,
										"nodeType": "Block",
										"src": "26941:488:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "26960:463:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27070:37:0",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "27083:5:0"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "27090:16:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "27079:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "27079:28:0"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "27070:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27220:45:0",
															"value": {
																"arguments": [
																	{
																		"name": "msgSender",
																		"nodeType": "YulIdentifier",
																		"src": "27237:9:0"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "27248:16:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "27233:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "27233:32:0"
															},
															"variableNames": [
																{
																	"name": "msgSender",
																	"nodeType": "YulIdentifier",
																	"src": "27220:9:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27347:66:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "27363:9:0"
																			},
																			{
																				"name": "owner",
																				"nodeType": "YulIdentifier",
																				"src": "27374:5:0"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "27360:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27360:20:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "27385:9:0"
																			},
																			{
																				"name": "approvedAddress",
																				"nodeType": "YulIdentifier",
																				"src": "27396:15:0"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "27382:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27382:30:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "27357:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "27357:56:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "27347:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 287,
														"isOffset": false,
														"isSlot": false,
														"src": "27090:16:0",
														"valueSize": 1
													},
													{
														"declaration": 287,
														"isOffset": false,
														"isSlot": false,
														"src": "27248:16:0",
														"valueSize": 1
													},
													{
														"declaration": 953,
														"isOffset": false,
														"isSlot": false,
														"src": "27396:15:0",
														"valueSize": 1
													},
													{
														"declaration": 957,
														"isOffset": false,
														"isSlot": false,
														"src": "27220:9:0",
														"valueSize": 1
													},
													{
														"declaration": 957,
														"isOffset": false,
														"isSlot": false,
														"src": "27237:9:0",
														"valueSize": 1
													},
													{
														"declaration": 957,
														"isOffset": false,
														"isSlot": false,
														"src": "27363:9:0",
														"valueSize": 1
													},
													{
														"declaration": 957,
														"isOffset": false,
														"isSlot": false,
														"src": "27385:9:0",
														"valueSize": 1
													},
													{
														"declaration": 955,
														"isOffset": false,
														"isSlot": false,
														"src": "27070:5:0",
														"valueSize": 1
													},
													{
														"declaration": 955,
														"isOffset": false,
														"isSlot": false,
														"src": "27083:5:0",
														"valueSize": 1
													},
													{
														"declaration": 955,
														"isOffset": false,
														"isSlot": false,
														"src": "27374:5:0",
														"valueSize": 1
													},
													{
														"declaration": 960,
														"isOffset": false,
														"isSlot": false,
														"src": "27347:6:0",
														"valueSize": 1
													}
												],
												"id": 962,
												"nodeType": "InlineAssembly",
												"src": "26951:472:0"
											}
										]
									},
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "26685:93:0",
										"text": " @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`."
									},
									"id": 964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isSenderApprovedOrOwner",
									"nameLocation": "26792:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "26834:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "26826:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "26867:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "26859:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26859:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "msgSender",
												"nameLocation": "26890:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "26882:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26882:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26816:89:0"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "26933:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "26928:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 959,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26928:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26927:13:0"
									},
									"scope": 1826,
									"src": "26783:646:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 982,
										"nodeType": "Block",
										"src": "27694:317:0",
										"statements": [
											{
												"assignments": [
													976
												],
												"declarations": [
													{
														"constant": false,
														"id": 976,
														"mutability": "mutable",
														"name": "tokenApproval",
														"nameLocation": "27729:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 982,
														"src": "27704:38:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$227_storage_ptr",
															"typeString": "struct ERC721A.TokenApprovalRef"
														},
														"typeName": {
															"id": 975,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 974,
																"name": "TokenApprovalRef",
																"nameLocations": [
																	"27704:16:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 227,
																"src": "27704:16:0"
															},
															"referencedDeclaration": 227,
															"src": "27704:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$227_storage_ptr",
																"typeString": "struct ERC721A.TokenApprovalRef"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 980,
												"initialValue": {
													"baseExpression": {
														"id": 977,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "27745:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$227_storage_$",
															"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
														}
													},
													"id": 979,
													"indexExpression": {
														"id": 978,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "27761:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "27745:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenApprovalRef_$227_storage",
														"typeString": "struct ERC721A.TokenApprovalRef storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27704:65:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "27882:123:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27896:41:0",
															"value": {
																"name": "tokenApproval.slot",
																"nodeType": "YulIdentifier",
																"src": "27919:18:0"
															},
															"variableNames": [
																{
																	"name": "approvedAddressSlot",
																	"nodeType": "YulIdentifier",
																	"src": "27896:19:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27950:45:0",
															"value": {
																"arguments": [
																	{
																		"name": "approvedAddressSlot",
																		"nodeType": "YulIdentifier",
																		"src": "27975:19:0"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "27969:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "27969:26:0"
															},
															"variableNames": [
																{
																	"name": "approvedAddress",
																	"nodeType": "YulIdentifier",
																	"src": "27950:15:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 972,
														"isOffset": false,
														"isSlot": false,
														"src": "27950:15:0",
														"valueSize": 1
													},
													{
														"declaration": 970,
														"isOffset": false,
														"isSlot": false,
														"src": "27896:19:0",
														"valueSize": 1
													},
													{
														"declaration": 970,
														"isOffset": false,
														"isSlot": false,
														"src": "27975:19:0",
														"valueSize": 1
													},
													{
														"declaration": 976,
														"isOffset": false,
														"isSlot": true,
														"src": "27919:18:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 981,
												"nodeType": "InlineAssembly",
												"src": "27873:132:0"
											}
										]
									},
									"documentation": {
										"id": 965,
										"nodeType": "StructuredDocumentation",
										"src": "27435:97:0",
										"text": " @dev Returns the storage slot and value for the approved address of `tokenId`."
									},
									"id": 983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApprovedSlotAndAddress",
									"nameLocation": "27546:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "27581:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "27573:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27573:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27572:17:0"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "approvedAddressSlot",
												"nameLocation": "27644:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "27636:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27636:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "27673:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "27665:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27665:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27635:54:0"
									},
									"scope": 1826,
									"src": "27537:474:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										139
									],
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "28739:2637:0",
										"statements": [
											{
												"assignments": [
													995
												],
												"declarations": [
													{
														"constant": false,
														"id": 995,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "28757:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 1127,
														"src": "28749:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 994,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28749:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 999,
												"initialValue": {
													"arguments": [
														{
															"id": 997,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "28798:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 996,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "28779:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28779:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28749:57:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1004,
																		"name": "prevOwnershipPacked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 995,
																		"src": "28837:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28829:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1002,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "28829:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28829:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28821:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1000,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "28821:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28821:37:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1007,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "28862:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "28821:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1012,
												"nodeType": "IfStatement",
												"src": "28817:86:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1009,
															"name": "TransferFromIncorrectOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "28875:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28875:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1011,
													"nodeType": "RevertStatement",
													"src": "28868:35:0"
												}
											},
											{
												"assignments": [
													1014,
													1016
												],
												"declarations": [
													{
														"constant": false,
														"id": 1014,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "28923:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 1127,
														"src": "28915:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1013,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28915:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1016,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "28952:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1127,
														"src": "28944:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1015,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "28944:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1020,
												"initialValue": {
													"arguments": [
														{
															"id": 1018,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "28998:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1017,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "28971:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28971:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28914:92:0"
											},
											{
												"condition": {
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "29102:69:0",
													"subExpression": {
														"arguments": [
															{
																"id": 1022,
																"name": "approvedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "29128:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1023,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 986,
																"src": "29145:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1024,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1815,
																	"src": "29151:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29151:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1021,
															"name": "_isSenderApprovedOrOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "29103:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address,address) pure returns (bool)"
															}
														},
														"id": 1026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29103:68:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1038,
												"nodeType": "IfStatement",
												"src": "29098:179:0",
												"trueBody": {
													"condition": {
														"id": 1033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "29189:44:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 1029,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 986,
																	"src": "29207:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1030,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1815,
																		"src": "29213:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "29213:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1028,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 924,
																"src": "29190:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29190:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1037,
													"nodeType": "IfStatement",
													"src": "29185:92:0",
													"trueBody": {
														"errorCall": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1034,
																"name": "TransferCallerNotOwnerNorApproved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "29242:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29242:35:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1036,
														"nodeType": "RevertStatement",
														"src": "29235:42:0"
													}
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1039,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "29292:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29306:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29298:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1040,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "29298:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29298:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "29292:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1048,
												"nodeType": "IfStatement",
												"src": "29288:52:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1045,
															"name": "TransferToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "29317:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29317:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1047,
													"nodeType": "RevertStatement",
													"src": "29310:30:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1050,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "29373:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1051,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "29379:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1052,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "29383:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29392:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1049,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "29351:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29351:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1055,
												"nodeType": "ExpressionStatement",
												"src": "29351:43:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "29466:181:0",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29499:138:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "29600:19:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "29621:1:0",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "29593:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29593:30:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29593:30:0"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "29483:15:0"
															},
															"nodeType": "YulIf",
															"src": "29480:157:0"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1016,
														"isOffset": false,
														"isSlot": false,
														"src": "29483:15:0",
														"valueSize": 1
													},
													{
														"declaration": 1014,
														"isOffset": false,
														"isSlot": false,
														"src": "29600:19:0",
														"valueSize": 1
													}
												],
												"id": 1056,
												"nodeType": "InlineAssembly",
												"src": "29457:190:0"
											},
											{
												"id": 1113,
												"nodeType": "UncheckedBlock",
												"src": "29914:1361:0",
												"statements": [
													{
														"expression": {
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "--",
															"prefix": true,
															"src": "30007:26:0",
															"subExpression": {
																"baseExpression": {
																	"id": 1057,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "30009:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1059,
																"indexExpression": {
																	"id": 1058,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 986,
																	"src": "30028:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "30009:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1061,
														"nodeType": "ExpressionStatement",
														"src": "30007:26:0"
													},
													{
														"expression": {
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "30075:24:0",
															"subExpression": {
																"baseExpression": {
																	"id": 1062,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "30077:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1064,
																"indexExpression": {
																	"id": 1063,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "30096:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "30077:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1066,
														"nodeType": "ExpressionStatement",
														"src": "30075:24:0"
													},
													{
														"expression": {
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1067,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "30363:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1069,
																"indexExpression": {
																	"id": 1068,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 990,
																	"src": "30381:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "30363:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1071,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 988,
																		"src": "30428:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1072,
																			"name": "_BITMASK_NEXT_INITIALIZED",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 268,
																			"src": "30448:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1074,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 986,
																					"src": "30491:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1075,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "30497:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1076,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 995,
																					"src": "30501:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1073,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1805,
																				"src": "30476:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "30476:45:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "30448:73:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1070,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "30392:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30392:143:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30363:172:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1081,
														"nodeType": "ExpressionStatement",
														"src": "30363:172:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1082,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "30652:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1083,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 268,
																	"src": "30674:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30652:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30703:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "30652:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1112,
														"nodeType": "IfStatement",
														"src": "30648:617:0",
														"trueBody": {
															"id": 1111,
															"nodeType": "Block",
															"src": "30706:559:0",
															"statements": [
																{
																	"assignments": [
																		1088
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1088,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "30732:11:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 1111,
																			"src": "30724:19:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1087,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "30724:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1092,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1089,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 990,
																			"src": "30746:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1090,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30756:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "30746:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "30724:33:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1093,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 305,
																				"src": "30877:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1095,
																			"indexExpression": {
																				"id": 1094,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1088,
																				"src": "30895:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "30877:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1096,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30911:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "30877:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1110,
																	"nodeType": "IfStatement",
																	"src": "30873:378:0",
																	"trueBody": {
																		"id": 1109,
																		"nodeType": "Block",
																		"src": "30914:337:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1100,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1098,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1088,
																						"src": "30998:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1099,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 295,
																						"src": "31013:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "30998:28:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1108,
																				"nodeType": "IfStatement",
																				"src": "30994:239:0",
																				"trueBody": {
																					"id": 1107,
																					"nodeType": "Block",
																					"src": "31028:205:0",
																					"statements": [
																						{
																							"expression": {
																								"id": 1105,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1101,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 305,
																										"src": "31158:17:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1103,
																									"indexExpression": {
																										"id": 1102,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1088,
																										"src": "31176:11:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "31158:30:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1104,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 995,
																									"src": "31191:19:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "31158:52:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1106,
																							"nodeType": "ExpressionStatement",
																							"src": "31158:52:0"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1115,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "31299:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1116,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "31305:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1117,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "31309:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1114,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "31290:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31290:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1119,
												"nodeType": "EmitStatement",
												"src": "31285:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1121,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "31348:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1122,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "31354:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1123,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "31358:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31367:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1120,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "31327:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31327:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "31327:42:0"
											}
										]
									},
									"documentation": {
										"id": 984,
										"nodeType": "StructuredDocumentation",
										"src": "28204:403:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "28621:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 992,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "28730:8:0"
									},
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "28651:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "28643:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28643:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "28673:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "28665:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28665:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "28693:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "28685:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28633:73:0"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28739:0:0"
									},
									"scope": 1826,
									"src": "28612:2764:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										129
									],
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "31598:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1140,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1131,
															"src": "31625:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1141,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "31631:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1142,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "31635:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31644:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1139,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1147,
															1185
														],
														"referencedDeclaration": 1185,
														"src": "31608:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31608:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1145,
												"nodeType": "ExpressionStatement",
												"src": "31608:39:0"
											}
										]
									},
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "31382:80:0",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "31476:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1137,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "31589:8:0"
									},
									"parameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "31510:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "31502:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31502:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31532:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "31524:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31524:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "31552:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "31544:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31544:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31492:73:0"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31598:0:0"
									},
									"scope": 1826,
									"src": "31467:187:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										119
									],
									"body": {
										"id": 1184,
										"nodeType": "Block",
										"src": "32394:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1161,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "32417:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1162,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "32423:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1163,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "32427:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1160,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "32404:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32404:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1165,
												"nodeType": "ExpressionStatement",
												"src": "32404:31:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1166,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1152,
																"src": "32449:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "32452:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "32449:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "32457:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "32449:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1169,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32467:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "32449:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1183,
												"nodeType": "IfStatement",
												"src": "32445:180:0",
												"trueBody": {
													"condition": {
														"id": 1177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "32486:57:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 1172,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1150,
																	"src": "32518:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1173,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1152,
																	"src": "32524:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1174,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1154,
																	"src": "32528:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1175,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1156,
																	"src": "32537:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1171,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1266,
																"src": "32487:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32487:56:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1182,
													"nodeType": "IfStatement",
													"src": "32482:143:0",
													"trueBody": {
														"id": 1181,
														"nodeType": "Block",
														"src": "32545:80:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1178,
																		"name": "TransferToNonERC721ReceiverImplementer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "32570:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32570:40:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1180,
																"nodeType": "RevertStatement",
																"src": "32563:47:0"
															}
														]
													}
												}
											}
										]
									},
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "31660:570:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "32244:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1158,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "32385:8:0"
									},
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "32278:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "32270:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32270:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "32300:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "32292:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32292:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "32320:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "32312:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32312:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "32350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "32337:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1155,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "32337:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32260:101:0"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32394:0:0"
									},
									"scope": 1826,
									"src": "32235:396:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1197,
										"nodeType": "Block",
										"src": "33427:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1186,
										"nodeType": "StructuredDocumentation",
										"src": "32637:633:0",
										"text": " @dev Hook that is called before a set of serially-ordered token IDs\n are about to be transferred. This includes minting.\n And also called before burning one token.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "33284:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "33323:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "33315:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33315:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33345:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "33337:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33337:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "33365:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "33357:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "33395:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "33387:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33305:104:0"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33427:0:0"
									},
									"scope": 1826,
									"src": "33275:154:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1210,
										"nodeType": "Block",
										"src": "34227:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1199,
										"nodeType": "StructuredDocumentation",
										"src": "33435:636:0",
										"text": " @dev Hook that is called after a set of serially-ordered token IDs\n have been transferred. This includes minting.\n And also called after one token has been burned.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "34085:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "34123:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "34115:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34115:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34145:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "34137:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34137:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "34165:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "34157:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34157:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "34195:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "34187:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34105:104:0"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34227:0:0"
									},
									"scope": 1826,
									"src": "34076:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1265,
										"nodeType": "Block",
										"src": "34821:533:0",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 1246,
															"nodeType": "Block",
															"src": "34970:96:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 1244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1238,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1236,
																			"src": "34991:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 1240,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1216,
																							"src": "35026:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1239,
																						"name": "ERC721A__IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 221,
																						"src": "35001:24:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$221_$",
																							"typeString": "type(contract ERC721A__IERC721Receiver)"
																						}
																					},
																					"id": 1241,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "35001:28:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$221",
																						"typeString": "contract ERC721A__IERC721Receiver"
																					}
																				},
																				"id": 1242,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "35030:16:0",
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 220,
																				"src": "35001:45:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 1243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "35047:8:0",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "35001:54:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "34991:64:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 1224,
																	"id": 1245,
																	"nodeType": "Return",
																	"src": "34984:71:0"
																}
															]
														},
														"errorName": "",
														"id": 1247,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1237,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1236,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "34953:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1247,
																	"src": "34946:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 1235,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "34946:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "34932:37:0"
														},
														"src": "34924:142:0"
													},
													{
														"block": {
															"id": 1262,
															"nodeType": "Block",
															"src": "35095:253:0",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1251,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1249,
																				"src": "35113:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "35120:6:0",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "35113:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "35130:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "35113:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 1260,
																		"nodeType": "Block",
																		"src": "35219:119:0",
																		"statements": [
																			{
																				"AST": {
																					"nodeType": "YulBlock",
																					"src": "35246:78:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "35279:2:0",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "35283:6:0"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "35275:3:0"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "35275:15:0"
																									},
																									{
																										"arguments": [
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "35298:6:0"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "35292:5:0"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "35292:13:0"
																									}
																								],
																								"functionName": {
																									"name": "revert",
																									"nodeType": "YulIdentifier",
																									"src": "35268:6:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "35268:38:0"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "35268:38:0"
																						}
																					]
																				},
																				"evmVersion": "paris",
																				"externalReferences": [
																					{
																						"declaration": 1249,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "35283:6:0",
																						"valueSize": 1
																					},
																					{
																						"declaration": 1249,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "35298:6:0",
																						"valueSize": 1
																					}
																				],
																				"id": 1259,
																				"nodeType": "InlineAssembly",
																				"src": "35237:87:0"
																			}
																		]
																	},
																	"id": 1261,
																	"nodeType": "IfStatement",
																	"src": "35109:229:0",
																	"trueBody": {
																		"id": 1258,
																		"nodeType": "Block",
																		"src": "35133:80:0",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1255,
																						"name": "TransferToNonERC721ReceiverImplementer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 29,
																						"src": "35158:38:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 1256,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "35158:40:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1257,
																				"nodeType": "RevertStatement",
																				"src": "35151:47:0"
																			}
																		]
																	}
																}
															]
														},
														"errorName": "",
														"id": 1263,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1250,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1249,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "35087:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1263,
																	"src": "35074:19:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1248,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "35074:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "35073:21:0"
														},
														"src": "35067:281:0"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1229,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1815,
																"src": "34881:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34881:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1231,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "34902:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1232,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "34908:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1233,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "34917:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1226,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1216,
																	"src": "34860:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1225,
																"name": "ERC721A__IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "34835:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$221_$",
																	"typeString": "type(contract ERC721A__IERC721Receiver)"
																}
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34835:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$221",
																"typeString": "contract ERC721A__IERC721Receiver"
															}
														},
														"id": 1228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "34864:16:0",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "34835:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34835:88:0",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 1264,
												"nodeType": "TryStatement",
												"src": "34831:517:0"
											}
										]
									},
									"documentation": {
										"id": 1212,
										"nodeType": "StructuredDocumentation",
										"src": "34235:417:0",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n `from` - Previous owner of the given token ID.\n `to` - Target address that will receive the token.\n `tokenId` - Token ID to be transferred.\n `_data` - Optional data to send along with the call.\n Returns whether the call correctly returned the expected magic value."
									},
									"id": 1266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "34666:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "34714:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "34706:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34706:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34736:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "34728:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34728:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34756:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "34748:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34748:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "34786:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "34773:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "34773:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34696:101:0"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "34815:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1222,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34815:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34814:6:0"
									},
									"scope": 1826,
									"src": "34657:697:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1361,
										"nodeType": "Block",
										"src": "35862:2840:0",
										"statements": [
											{
												"assignments": [
													1275
												],
												"declarations": [
													{
														"constant": false,
														"id": 1275,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "35880:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1361,
														"src": "35872:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1274,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35872:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1277,
												"initialValue": {
													"id": 1276,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 295,
													"src": "35895:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35872:36:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1278,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1271,
														"src": "35922:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "35934:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "35922:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1284,
												"nodeType": "IfStatement",
												"src": "35918:44:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1281,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "35944:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "35944:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1283,
													"nodeType": "RevertStatement",
													"src": "35937:25:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36003:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "35995:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1286,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "35995:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35995:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1290,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "36007:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1291,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "36011:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1292,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "36025:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1285,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "35973:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35973:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1294,
												"nodeType": "ExpressionStatement",
												"src": "35973:61:0"
											},
											{
												"id": 1350,
												"nodeType": "UncheckedBlock",
												"src": "36217:2409:0",
												"statements": [
													{
														"expression": {
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1295,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "36437:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1297,
																"indexExpression": {
																	"id": 1296,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1269,
																	"src": "36456:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "36437:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1298,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1271,
																	"src": "36463:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1301,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1299,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "36476:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1300,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 238,
																							"src": "36481:21:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "36476:26:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1302,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "36475:28:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1303,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "36506:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "36475:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1305,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "36474:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "36463:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "36437:71:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1308,
														"nodeType": "ExpressionStatement",
														"src": "36437:71:0"
													},
													{
														"expression": {
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1309,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "36744:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1311,
																"indexExpression": {
																	"id": 1310,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1275,
																	"src": "36762:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "36744:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1313,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1269,
																		"src": "36814:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1315,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1271,
																					"src": "36855:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1314,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 812,
																				"src": "36834:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36834:30:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1320,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "36890:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1319,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "36882:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1318,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "36882:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1321,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "36882:10:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1322,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1269,
																					"src": "36894:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1323,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "36898:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1317,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1805,
																				"src": "36867:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36867:33:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "36834:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1312,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "36778:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36778:136:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "36744:170:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1328,
														"nodeType": "ExpressionStatement",
														"src": "36744:170:0"
													},
													{
														"assignments": [
															1330
														],
														"declarations": [
															{
																"constant": false,
																"id": 1330,
																"mutability": "mutable",
																"name": "toMasked",
																"nameLocation": "36937:8:0",
																"nodeType": "VariableDeclaration",
																"scope": 1350,
																"src": "36929:16:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1329,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "36929:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1331,
														"nodeType": "VariableDeclarationStatement",
														"src": "36929:16:0"
													},
													{
														"assignments": [
															1333
														],
														"declarations": [
															{
																"constant": false,
																"id": 1333,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "36967:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 1350,
																"src": "36959:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1332,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "36959:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1337,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1334,
																"name": "startTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "36973:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1335,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1271,
																"src": "36988:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "36973:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "36959:37:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "37366:1157:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "37481:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "to",
																				"nodeType": "YulIdentifier",
																				"src": "37497:2:0"
																			},
																			{
																				"name": "_BITMASK_ADDRESS",
																				"nodeType": "YulIdentifier",
																				"src": "37501:16:0"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "37493:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "37493:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "toMasked",
																			"nodeType": "YulIdentifier",
																			"src": "37481:8:0"
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "37607:1:0",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "37667:1:0",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "_TRANSFER_EVENT_SIGNATURE",
																				"nodeType": "YulIdentifier",
																				"src": "37725:25:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "37786:1:0",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "toMasked",
																				"nodeType": "YulIdentifier",
																				"src": "37826:8:0"
																			},
																			{
																				"name": "startTokenId",
																				"nodeType": "YulIdentifier",
																				"src": "37865:12:0"
																			}
																		],
																		"functionName": {
																			"name": "log4",
																			"nodeType": "YulIdentifier",
																			"src": "37581:4:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "37581:328:0"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "37581:328:0"
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "38342:167:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "38437:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "38440:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "_TRANSFER_EVENT_SIGNATURE",
																							"nodeType": "YulIdentifier",
																							"src": "38443:25:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "38470:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "toMasked",
																							"nodeType": "YulIdentifier",
																							"src": "38473:8:0"
																						},
																						{
																							"name": "tokenId",
																							"nodeType": "YulIdentifier",
																							"src": "38483:7:0"
																						}
																					],
																					"functionName": {
																						"name": "log4",
																						"nodeType": "YulIdentifier",
																						"src": "38432:4:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "38432:59:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "38432:59:0"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "tokenId",
																						"nodeType": "YulIdentifier",
																						"src": "38260:7:0"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "38269:3:0"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "38257:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "38257:16:0"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "38250:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "38250:24:0"
																	},
																	"nodeType": "YulForLoop",
																	"post": {
																		"nodeType": "YulBlock",
																		"src": "38275:66:0",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "38297:26:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "tokenId",
																							"nodeType": "YulIdentifier",
																							"src": "38312:7:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "38321:1:0",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "38308:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "38308:15:0"
																				},
																				"variableNames": [
																					{
																						"name": "tokenId",
																						"nodeType": "YulIdentifier",
																						"src": "38297:7:0"
																					}
																				]
																			}
																		]
																	},
																	"pre": {
																		"nodeType": "YulBlock",
																		"src": "38174:75:0",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "38196:35:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "startTokenId",
																							"nodeType": "YulIdentifier",
																							"src": "38215:12:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "38229:1:0",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "38211:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "38211:20:0"
																				},
																				"variables": [
																					{
																						"name": "tokenId",
																						"nodeType": "YulTypedName",
																						"src": "38200:7:0",
																						"type": ""
																					}
																				]
																			}
																		]
																	},
																	"src": "38170:339:0"
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 287,
																"isOffset": false,
																"isSlot": false,
																"src": "37501:16:0",
																"valueSize": 1
															},
															{
																"declaration": 293,
																"isOffset": false,
																"isSlot": false,
																"src": "37725:25:0",
																"valueSize": 1
															},
															{
																"declaration": 293,
																"isOffset": false,
																"isSlot": false,
																"src": "38443:25:0",
																"valueSize": 1
															},
															{
																"declaration": 1333,
																"isOffset": false,
																"isSlot": false,
																"src": "38269:3:0",
																"valueSize": 1
															},
															{
																"declaration": 1275,
																"isOffset": false,
																"isSlot": false,
																"src": "37865:12:0",
																"valueSize": 1
															},
															{
																"declaration": 1275,
																"isOffset": false,
																"isSlot": false,
																"src": "38215:12:0",
																"valueSize": 1
															},
															{
																"declaration": 1269,
																"isOffset": false,
																"isSlot": false,
																"src": "37497:2:0",
																"valueSize": 1
															},
															{
																"declaration": 1330,
																"isOffset": false,
																"isSlot": false,
																"src": "37481:8:0",
																"valueSize": 1
															},
															{
																"declaration": 1330,
																"isOffset": false,
																"isSlot": false,
																"src": "37826:8:0",
																"valueSize": 1
															},
															{
																"declaration": 1330,
																"isOffset": false,
																"isSlot": false,
																"src": "38473:8:0",
																"valueSize": 1
															}
														],
														"id": 1338,
														"nodeType": "InlineAssembly",
														"src": "37357:1166:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1339,
																"name": "toMasked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1330,
																"src": "38540:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "38552:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "38540:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1345,
														"nodeType": "IfStatement",
														"src": "38536:45:0",
														"trueBody": {
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1342,
																	"name": "MintToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "38562:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38562:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1344,
															"nodeType": "RevertStatement",
															"src": "38555:26:0"
														}
													},
													{
														"expression": {
															"id": 1348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1346,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "38596:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1347,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1333,
																"src": "38612:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "38596:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1349,
														"nodeType": "ExpressionStatement",
														"src": "38596:19:0"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "38664:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "38656:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1352,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "38656:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38656:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1356,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "38668:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1357,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "38672:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1358,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "38686:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1351,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "38635:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38635:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1360,
												"nodeType": "ExpressionStatement",
												"src": "38635:60:0"
											}
										]
									},
									"documentation": {
										"id": 1267,
										"nodeType": "StructuredDocumentation",
										"src": "35545:250:0",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event for each mint."
									},
									"id": 1362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "35809:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "35823:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "35815:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35815:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "35835:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "35827:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35814:30:0"
									},
									"returnParameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35862:0:0"
									},
									"scope": 1826,
									"src": "35800:2902:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1473,
										"nodeType": "Block",
										"src": "39611:1374:0",
										"statements": [
											{
												"assignments": [
													1371
												],
												"declarations": [
													{
														"constant": false,
														"id": 1371,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "39629:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1473,
														"src": "39621:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1370,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "39621:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1373,
												"initialValue": {
													"id": 1372,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 295,
													"src": "39644:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39621:36:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1374,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1365,
														"src": "39671:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "39685:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "39677:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1375,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "39677:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "39677:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "39671:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1383,
												"nodeType": "IfStatement",
												"src": "39667:48:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1380,
															"name": "MintToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "39696:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "39696:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1382,
													"nodeType": "RevertStatement",
													"src": "39689:26:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1384,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "39729:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1385,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "39741:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "39729:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1390,
												"nodeType": "IfStatement",
												"src": "39725:44:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1387,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "39751:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "39751:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1389,
													"nodeType": "RevertStatement",
													"src": "39744:25:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1391,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "39783:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1392,
														"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "39794:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "39783:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1397,
												"nodeType": "IfStatement",
												"src": "39779:89:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1394,
															"name": "MintERC2309QuantityExceedsLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "39835:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1395,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "39835:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1396,
													"nodeType": "RevertStatement",
													"src": "39828:40:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "39909:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "39901:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1399,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "39901:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39901:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1403,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "39913:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1404,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "39917:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1405,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "39931:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1398,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "39879:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39879:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1407,
												"nodeType": "ExpressionStatement",
												"src": "39879:61:0"
											},
											{
												"id": 1462,
												"nodeType": "UncheckedBlock",
												"src": "40049:860:0",
												"statements": [
													{
														"expression": {
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1408,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "40269:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1410,
																"indexExpression": {
																	"id": 1409,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1365,
																	"src": "40288:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "40269:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1411,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1367,
																	"src": "40295:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1414,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1412,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "40308:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1413,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 238,
																							"src": "40313:21:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "40308:26:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1415,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "40307:28:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1416,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "40338:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "40307:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1418,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "40306:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "40295:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "40269:71:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1421,
														"nodeType": "ExpressionStatement",
														"src": "40269:71:0"
													},
													{
														"expression": {
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1422,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "40576:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1424,
																"indexExpression": {
																	"id": 1423,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1371,
																	"src": "40594:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "40576:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1426,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1365,
																		"src": "40646:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1428,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1367,
																					"src": "40687:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1427,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 812,
																				"src": "40666:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "40666:30:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1433,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "40722:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1432,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "40714:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1431,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "40714:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1434,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "40714:10:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1435,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1365,
																					"src": "40726:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1436,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "40730:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1430,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1805,
																				"src": "40699:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1437,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "40699:33:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "40666:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1425,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "40610:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40610:136:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "40576:170:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1441,
														"nodeType": "ExpressionStatement",
														"src": "40576:170:0"
													},
													{
														"eventCall": {
															"arguments": [
																{
																	"id": 1443,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1371,
																	"src": "40786:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1444,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1371,
																			"src": "40800:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1445,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1367,
																			"src": "40815:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "40800:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "40826:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "40800:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "40837:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "40829:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1449,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "40829:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "40829:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1453,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1365,
																	"src": "40841:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1442,
																"name": "ConsecutiveTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "40766:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																	"typeString": "function (uint256,uint256,address,address)"
																}
															},
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "40766:78:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1455,
														"nodeType": "EmitStatement",
														"src": "40761:83:0"
													},
													{
														"expression": {
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1456,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "40859:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1457,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1371,
																	"src": "40875:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1458,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1367,
																	"src": "40890:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "40875:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "40859:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1461,
														"nodeType": "ExpressionStatement",
														"src": "40859:39:0"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "40947:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "40939:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1464,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "40939:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "40939:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1468,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "40951:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1469,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "40955:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1470,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "40969:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1463,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "40918:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40918:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1472,
												"nodeType": "ExpressionStatement",
												"src": "40918:60:0"
											}
										]
									},
									"documentation": {
										"id": 1363,
										"nodeType": "StructuredDocumentation",
										"src": "38708:829:0",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n This function is intended for efficient minting only during contract creation.\n It emits only one {ConsecutiveTransfer} as defined in\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n instead of a sequence of {Transfer} event(s).\n Calling this function outside of contract creation WILL make your contract\n non-compliant with the ERC721 standard.\n For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n {ConsecutiveTransfer} event is only permissible during contract creation.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {ConsecutiveTransfer} event."
									},
									"id": 1474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintERC2309",
									"nameLocation": "39551:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39572:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "39564:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "39584:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "39576:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39563:30:0"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39611:0:0"
									},
									"scope": 1826,
									"src": "39542:1443:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1535,
										"nodeType": "Block",
										"src": "41500:553:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1485,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "41516:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1486,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "41520:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1484,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1362,
														"src": "41510:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41510:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1488,
												"nodeType": "ExpressionStatement",
												"src": "41510:19:0"
											},
											{
												"id": 1534,
												"nodeType": "UncheckedBlock",
												"src": "41540:507:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 1489,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1477,
																		"src": "41568:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "41571:4:0",
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "41568:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "41576:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "41568:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "41586:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "41568:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1533,
														"nodeType": "IfStatement",
														"src": "41564:473:0",
														"trueBody": {
															"id": 1532,
															"nodeType": "Block",
															"src": "41589:448:0",
															"statements": [
																{
																	"assignments": [
																		1495
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1495,
																			"mutability": "mutable",
																			"name": "end",
																			"nameLocation": "41615:3:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 1532,
																			"src": "41607:11:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1494,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "41607:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1497,
																	"initialValue": {
																		"id": 1496,
																		"name": "_currentIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "41621:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "41607:27:0"
																},
																{
																	"assignments": [
																		1499
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1499,
																			"mutability": "mutable",
																			"name": "index",
																			"nameLocation": "41660:5:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 1532,
																			"src": "41652:13:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1498,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "41652:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1503,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1500,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1495,
																			"src": "41668:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1501,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1479,
																			"src": "41674:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "41668:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "41652:30:0"
																},
																{
																	"body": {
																		"id": 1520,
																		"nodeType": "Block",
																		"src": "41703:205:0",
																		"statements": [
																			{
																				"condition": {
																					"id": 1514,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "41729:63:0",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 1507,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "41769:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 1506,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "41761:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 1505,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "41761:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1508,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "41761:10:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1509,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1477,
																								"src": "41773:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1511,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "41777:7:0",
																								"subExpression": {
																									"id": 1510,
																									"name": "index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1499,
																									"src": "41777:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1512,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1481,
																								"src": "41786:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 1504,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1266,
																							"src": "41730:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 1513,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "41730:62:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1519,
																				"nodeType": "IfStatement",
																				"src": "41725:165:0",
																				"trueBody": {
																					"id": 1518,
																					"nodeType": "Block",
																					"src": "41794:96:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 1515,
																									"name": "TransferToNonERC721ReceiverImplementer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 29,
																									"src": "41827:38:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 1516,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "41827:40:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1517,
																							"nodeType": "RevertStatement",
																							"src": "41820:47:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1521,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1499,
																			"src": "41916:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1522,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1495,
																			"src": "41924:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "41916:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1524,
																	"nodeType": "DoWhileStatement",
																	"src": "41700:229:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1525,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 295,
																			"src": "41992:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1526,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1495,
																			"src": "42009:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "41992:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1531,
																	"nodeType": "IfStatement",
																	"src": "41988:34:0",
																	"trueBody": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1528,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "42014:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1529,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "42014:8:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1530,
																		"nodeType": "ExpressionStatement",
																		"src": "42014:8:0"
																	}
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1475,
										"nodeType": "StructuredDocumentation",
										"src": "40991:388:0",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n See {_mint}.\n Emits a {Transfer} event for each mint."
									},
									"id": 1536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "41393:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "41420:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "41412:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41412:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "41440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "41432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41432:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "41471:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "41458:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "41458:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41402:80:0"
									},
									"returnParameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41500:0:0"
									},
									"scope": 1826,
									"src": "41384:669:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1550,
										"nodeType": "Block",
										"src": "42198:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1545,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1539,
															"src": "42218:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1546,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1541,
															"src": "42222:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42232:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1544,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1536,
															1551
														],
														"referencedDeclaration": 1536,
														"src": "42208:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42208:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1549,
												"nodeType": "ExpressionStatement",
												"src": "42208:27:0"
											}
										]
									},
									"documentation": {
										"id": 1537,
										"nodeType": "StructuredDocumentation",
										"src": "42059:68:0",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 1551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "42141:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "42159:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "42151:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42151:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "42171:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "42163:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42163:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42150:30:0"
									},
									"returnParameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42198:0:0"
									},
									"scope": 1826,
									"src": "42132:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "42549:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1558,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "42565:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42574:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1557,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1563,
															1715
														],
														"referencedDeclaration": 1715,
														"src": "42559:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42559:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1561,
												"nodeType": "ExpressionStatement",
												"src": "42559:21:0"
											}
										]
									},
									"documentation": {
										"id": 1552,
										"nodeType": "StructuredDocumentation",
										"src": "42433:62:0",
										"text": " @dev Equivalent to `_burn(tokenId, false)`."
									},
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "42509:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "42523:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "42515:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42515:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42514:17:0"
									},
									"returnParameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42549:0:0"
									},
									"scope": 1826,
									"src": "42500:87:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1714,
										"nodeType": "Block",
										"src": "42873:2946:0",
										"statements": [
											{
												"assignments": [
													1572
												],
												"declarations": [
													{
														"constant": false,
														"id": 1572,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "42891:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 1714,
														"src": "42883:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1571,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "42883:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1576,
												"initialValue": {
													"arguments": [
														{
															"id": 1574,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "42932:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1573,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "42913:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42913:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42883:57:0"
											},
											{
												"assignments": [
													1578
												],
												"declarations": [
													{
														"constant": false,
														"id": 1578,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "42959:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1714,
														"src": "42951:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1577,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "42951:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1586,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1583,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1572,
																	"src": "42982:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "42974:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1581,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "42974:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42974:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1580,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "42966:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1579,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "42966:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 1585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42966:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42951:52:0"
											},
											{
												"assignments": [
													1588,
													1590
												],
												"declarations": [
													{
														"constant": false,
														"id": 1588,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "43023:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 1714,
														"src": "43015:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1587,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "43015:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1590,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "43052:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1714,
														"src": "43044:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1589,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "43044:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1594,
												"initialValue": {
													"arguments": [
														{
															"id": 1592,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "43098:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1591,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "43071:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43071:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "43014:92:0"
											},
											{
												"condition": {
													"id": 1595,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1568,
													"src": "43121:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1615,
												"nodeType": "IfStatement",
												"src": "43117:312:0",
												"trueBody": {
													"id": 1614,
													"nodeType": "Block",
													"src": "43136:293:0",
													"statements": [
														{
															"condition": {
																"id": 1602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "43239:69:0",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1597,
																			"name": "approvedAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1590,
																			"src": "43265:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1598,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1578,
																			"src": "43282:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1599,
																				"name": "_msgSenderERC721A",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1815,
																				"src": "43288:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1600,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "43288:19:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1596,
																		"name": "_isSenderApprovedOrOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 964,
																		"src": "43240:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address,address) pure returns (bool)"
																		}
																	},
																	"id": 1601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "43240:68:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1613,
															"nodeType": "IfStatement",
															"src": "43235:183:0",
															"trueBody": {
																"condition": {
																	"id": 1608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "43330:44:0",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1604,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1578,
																				"src": "43348:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1605,
																					"name": "_msgSenderERC721A",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1815,
																					"src": "43354:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "43354:19:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1603,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 924,
																			"src": "43331:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "43331:43:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1612,
																"nodeType": "IfStatement",
																"src": "43326:92:0",
																"trueBody": {
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1609,
																			"name": "TransferCallerNotOwnerNorApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 23,
																			"src": "43383:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "43383:35:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1611,
																	"nodeType": "RevertStatement",
																	"src": "43376:42:0"
																}
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1617,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1578,
															"src": "43461:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "43475:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1619,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "43467:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1618,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "43467:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43467:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1622,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "43479:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43488:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1616,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "43439:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43439:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1625,
												"nodeType": "ExpressionStatement",
												"src": "43439:51:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "43562:181:0",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "43595:138:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "43696:19:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "43717:1:0",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "43689:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "43689:30:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "43689:30:0"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "43579:15:0"
															},
															"nodeType": "YulIf",
															"src": "43576:157:0"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1590,
														"isOffset": false,
														"isSlot": false,
														"src": "43579:15:0",
														"valueSize": 1
													},
													{
														"declaration": 1588,
														"isOffset": false,
														"isSlot": false,
														"src": "43696:19:0",
														"valueSize": 1
													}
												],
												"id": 1626,
												"nodeType": "InlineAssembly",
												"src": "43553:190:0"
											},
											{
												"id": 1690,
												"nodeType": "UncheckedBlock",
												"src": "44010:1545:0",
												"statements": [
													{
														"expression": {
															"id": 1636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1627,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "44322:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1629,
																"indexExpression": {
																	"id": 1628,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1578,
																	"src": "44341:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "44322:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1635,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1632,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 1630,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "44351:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 1631,
																				"name": "_BITPOS_NUMBER_BURNED",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 241,
																				"src": "44356:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "44351:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1633,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "44350:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "44381:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "44350:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "44322:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1637,
														"nodeType": "ExpressionStatement",
														"src": "44322:60:0"
													},
													{
														"expression": {
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1638,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "44613:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1640,
																"indexExpression": {
																	"id": 1639,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1566,
																	"src": "44631:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "44613:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1642,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1578,
																		"src": "44678:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1645,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1643,
																						"name": "_BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 260,
																						"src": "44701:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"id": 1644,
																						"name": "_BITMASK_NEXT_INITIALIZED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 268,
																						"src": "44719:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "44701:43:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1646,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "44700:45:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1648,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1578,
																					"src": "44763:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1651,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "44777:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1650,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "44769:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1649,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "44769:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1652,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "44769:10:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1653,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1572,
																					"src": "44781:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1647,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1805,
																				"src": "44748:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "44748:53:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "44700:101:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1641,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "44642:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "44642:173:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "44613:202:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1658,
														"nodeType": "ExpressionStatement",
														"src": "44613:202:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1659,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1572,
																	"src": "44932:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1660,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 268,
																	"src": "44954:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "44932:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "44983:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "44932:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1689,
														"nodeType": "IfStatement",
														"src": "44928:617:0",
														"trueBody": {
															"id": 1688,
															"nodeType": "Block",
															"src": "44986:559:0",
															"statements": [
																{
																	"assignments": [
																		1665
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1665,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "45012:11:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 1688,
																			"src": "45004:19:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1664,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "45004:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1669,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1668,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1666,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1566,
																			"src": "45026:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1667,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "45036:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "45026:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "45004:33:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1670,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 305,
																				"src": "45157:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1672,
																			"indexExpression": {
																				"id": 1671,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1665,
																				"src": "45175:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "45157:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "45191:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "45157:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1687,
																	"nodeType": "IfStatement",
																	"src": "45153:378:0",
																	"trueBody": {
																		"id": 1686,
																		"nodeType": "Block",
																		"src": "45194:337:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1677,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1675,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1665,
																						"src": "45278:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1676,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 295,
																						"src": "45293:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "45278:28:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1685,
																				"nodeType": "IfStatement",
																				"src": "45274:239:0",
																				"trueBody": {
																					"id": 1684,
																					"nodeType": "Block",
																					"src": "45308:205:0",
																					"statements": [
																						{
																							"expression": {
																								"id": 1682,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1678,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 305,
																										"src": "45438:17:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1680,
																									"indexExpression": {
																										"id": 1679,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1665,
																										"src": "45456:11:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "45438:30:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1681,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1572,
																									"src": "45471:19:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "45438:52:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1683,
																							"nodeType": "ExpressionStatement",
																							"src": "45438:52:0"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1692,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1578,
															"src": "45579:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "45593:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1694,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "45585:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1693,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "45585:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1696,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45585:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1697,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "45597:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1691,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "45570:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45570:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1699,
												"nodeType": "EmitStatement",
												"src": "45565:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1701,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1578,
															"src": "45636:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "45650:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "45642:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1702,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "45642:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45642:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1706,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "45654:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45663:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1700,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "45615:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45615:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1709,
												"nodeType": "ExpressionStatement",
												"src": "45615:50:0"
											},
											{
												"id": 1713,
												"nodeType": "UncheckedBlock",
												"src": "45764:49:0",
												"statements": [
													{
														"expression": {
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "45788:14:0",
															"subExpression": {
																"id": 1710,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 297,
																"src": "45788:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1712,
														"nodeType": "ExpressionStatement",
														"src": "45788:14:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1564,
										"nodeType": "StructuredDocumentation",
										"src": "42593:206:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "42813:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "42827:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "42819:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42819:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "42841:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "42836:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1567,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "42836:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42818:37:0"
									},
									"returnParameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42873:0:0"
									},
									"scope": 1826,
									"src": "42804:3015:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1758,
										"nodeType": "Block",
										"src": "46177:447:0",
										"statements": [
											{
												"assignments": [
													1724
												],
												"declarations": [
													{
														"constant": false,
														"id": 1724,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "46195:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1758,
														"src": "46187:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1723,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "46187:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1728,
												"initialValue": {
													"baseExpression": {
														"id": 1725,
														"name": "_packedOwnerships",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "46204:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1727,
													"indexExpression": {
														"id": 1726,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1718,
														"src": "46222:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "46204:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "46187:41:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1729,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "46242:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1730,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "46252:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "46242:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1735,
												"nodeType": "IfStatement",
												"src": "46238:61:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1732,
															"name": "OwnershipNotInitializedForExtraData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "46262:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "46262:37:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1734,
													"nodeType": "RevertStatement",
													"src": "46255:44:0"
												}
											},
											{
												"assignments": [
													1737
												],
												"declarations": [
													{
														"constant": false,
														"id": 1737,
														"mutability": "mutable",
														"name": "extraDataCasted",
														"nameLocation": "46317:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1758,
														"src": "46309:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1736,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "46309:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1738,
												"nodeType": "VariableDeclarationStatement",
												"src": "46309:23:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "46421:52:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "46435:28:0",
															"value": {
																"name": "extraData",
																"nodeType": "YulIdentifier",
																"src": "46454:9:0"
															},
															"variableNames": [
																{
																	"name": "extraDataCasted",
																	"nodeType": "YulIdentifier",
																	"src": "46435:15:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1720,
														"isOffset": false,
														"isSlot": false,
														"src": "46454:9:0",
														"valueSize": 1
													},
													{
														"declaration": 1737,
														"isOffset": false,
														"isSlot": false,
														"src": "46435:15:0",
														"valueSize": 1
													}
												],
												"id": 1739,
												"nodeType": "InlineAssembly",
												"src": "46412:61:0"
											},
											{
												"expression": {
													"id": 1750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1740,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "46482:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1741,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1724,
																		"src": "46492:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 1742,
																		"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 279,
																		"src": "46501:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "46492:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1744,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "46491:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1745,
																		"name": "extraDataCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1737,
																		"src": "46536:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 1746,
																		"name": "_BITPOS_EXTRA_DATA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 271,
																		"src": "46555:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "46536:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1748,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "46535:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "46491:83:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46482:92:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1751,
												"nodeType": "ExpressionStatement",
												"src": "46482:92:0"
											},
											{
												"expression": {
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1752,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "46584:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1754,
														"indexExpression": {
															"id": 1753,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1718,
															"src": "46602:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "46584:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1755,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "46611:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46584:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1757,
												"nodeType": "ExpressionStatement",
												"src": "46584:33:0"
											}
										]
									},
									"documentation": {
										"id": 1716,
										"nodeType": "StructuredDocumentation",
										"src": "46013:84:0",
										"text": " @dev Directly sets the extra data for the ownership data `index`."
									},
									"id": 1759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setExtraDataAt",
									"nameLocation": "46111:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "46135:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "46127:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46127:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "extraData",
												"nameLocation": "46149:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "46142:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1719,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "46142:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46126:33:0"
									},
									"returnParameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46177:0:0"
									},
									"scope": 1826,
									"src": "46102:522:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1771,
										"nodeType": "Block",
										"src": "47325:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1760,
										"nodeType": "StructuredDocumentation",
										"src": "46630:549:0",
										"text": " @dev Called during each token transfer to set the 24bit `extraData` field.\n Intended to be overridden by the cosumer contract.\n `previousExtraData` - the value of `extraData` before transfer.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extraData",
									"nameLocation": "47193:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "47221:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "47213:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "47243:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "47235:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "previousExtraData",
												"nameLocation": "47262:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "47255:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1765,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "47255:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47203:82:0"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "47317:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1768,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "47317:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47316:8:0"
									},
									"scope": 1826,
									"src": "47184:143:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1804,
										"nodeType": "Block",
										"src": "47613:164:0",
										"statements": [
											{
												"assignments": [
													1785
												],
												"declarations": [
													{
														"constant": false,
														"id": 1785,
														"mutability": "mutable",
														"name": "extraData",
														"nameLocation": "47630:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1804,
														"src": "47623:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 1784,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "47623:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1792,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1788,
																"name": "prevOwnershipPacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "47649:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 1789,
																"name": "_BITPOS_EXTRA_DATA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "47672:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "47649:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1787,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "47642:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 1786,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "47642:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47642:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47623:68:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1796,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1775,
																		"src": "47727:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1797,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1777,
																		"src": "47733:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1798,
																		"name": "extraData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1785,
																		"src": "47737:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 1795,
																	"name": "_extraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1772,
																	"src": "47716:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_uint24_$",
																		"typeString": "function (address,address,uint24) view returns (uint24)"
																	}
																},
																"id": 1799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47716:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 1794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "47708:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1793,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "47708:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1800,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "47708:40:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 1801,
														"name": "_BITPOS_EXTRA_DATA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "47752:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "47708:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1783,
												"id": 1803,
												"nodeType": "Return",
												"src": "47701:69:0"
											}
										]
									},
									"documentation": {
										"id": 1773,
										"nodeType": "StructuredDocumentation",
										"src": "47333:135:0",
										"text": " @dev Returns the next extra data for the packed ownership data.\n The returned result is shifted into position."
									},
									"id": 1805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextExtraData",
									"nameLocation": "47482:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "47514:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "47506:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47506:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "47536:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "47528:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47528:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "prevOwnershipPacked",
												"nameLocation": "47556:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "47548:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47548:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47496:85:0"
									},
									"returnParameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "47604:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47604:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47603:9:0"
									},
									"scope": 1826,
									"src": "47473:304:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1814,
										"nodeType": "Block",
										"src": "48215:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1811,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "48232:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "48236:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "48232:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1810,
												"id": 1813,
												"nodeType": "Return",
												"src": "48225:17:0"
											}
										]
									},
									"documentation": {
										"id": 1806,
										"nodeType": "StructuredDocumentation",
										"src": "47968:173:0",
										"text": " @dev Returns the message sender (defaults to `msg.sender`).\n If you are writing GSN compatible contracts, you need to override this function."
									},
									"id": 1815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSenderERC721A",
									"nameLocation": "48155:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48172:2:0"
									},
									"returnParameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "48206:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48206:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48205:9:0"
									},
									"scope": 1826,
									"src": "48146:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1824,
										"nodeType": "Block",
										"src": "48430:1624:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "48449:1599:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "48813:31:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "48832:4:0",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "48826:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "48826:11:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "48839:4:0",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "48822:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "48822:22:0"
															},
															"variables": [
																{
																	"name": "m",
																	"nodeType": "YulTypedName",
																	"src": "48817:1:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "48923:4:0",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "48929:1:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "48916:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "48916:15:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "48916:15:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "48988:19:0",
															"value": {
																"arguments": [
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "48999:1:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "49002:4:0",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "48995:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "48995:12:0"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nodeType": "YulIdentifier",
																	"src": "48988:3:0"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "49077:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "49082:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "49070:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "49070:14:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "49070:14:0"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "49172:14:0",
															"value": {
																"name": "str",
																"nodeType": "YulIdentifier",
																"src": "49183:3:0"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "49176:3:0",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "49430:388:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "49448:18:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "str",
																					"nodeType": "YulIdentifier",
																					"src": "49459:3:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "49464:1:0",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "49455:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "49455:11:0"
																		},
																		"variableNames": [
																			{
																				"name": "str",
																				"nodeType": "YulIdentifier",
																				"src": "49448:3:0"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "str",
																					"nodeType": "YulIdentifier",
																					"src": "49609:3:0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "49618:2:0",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nodeType": "YulIdentifier",
																									"src": "49626:4:0"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "49632:2:0",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nodeType": "YulIdentifier",
																								"src": "49622:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "49622:13:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "49614:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "49614:22:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "49601:7:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "49601:36:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "49601:36:0"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "49706:21:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "49718:4:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "49724:2:0",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "49714:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "49714:13:0"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nodeType": "YulIdentifier",
																				"src": "49706:4:0"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "49795:9:0",
																			"statements": [
																				{
																					"nodeType": "YulBreak",
																					"src": "49797:5:0"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "49789:4:0"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "49782:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "49782:12:0"
																		},
																		"nodeType": "YulIf",
																		"src": "49779:25:0"
																	}
																]
															},
															"condition": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "49425:1:0",
																"type": "",
																"value": "1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "49427:2:0",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "49403:21:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "49405:17:0",
																		"value": {
																			"name": "value",
																			"nodeType": "YulIdentifier",
																			"src": "49417:5:0"
																		},
																		"variables": [
																			{
																				"name": "temp",
																				"nodeType": "YulTypedName",
																				"src": "49409:4:0",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "49399:419:0"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "49832:27:0",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "49850:3:0"
																	},
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "49855:3:0"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "49846:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "49846:13:0"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "49836:6:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "49952:21:0",
															"value": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "49963:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "49968:4:0",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "49959:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "49959:14:0"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nodeType": "YulIdentifier",
																	"src": "49952:3:0"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "50026:3:0"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "50031:6:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "50019:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "50019:19:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "50019:19:0"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1821,
														"isOffset": false,
														"isSlot": false,
														"src": "48988:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1821,
														"isOffset": false,
														"isSlot": false,
														"src": "49077:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1821,
														"isOffset": false,
														"isSlot": false,
														"src": "49183:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1821,
														"isOffset": false,
														"isSlot": false,
														"src": "49448:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1821,
														"isOffset": false,
														"isSlot": false,
														"src": "49459:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1821,
														"isOffset": false,
														"isSlot": false,
														"src": "49609:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1821,
														"isOffset": false,
														"isSlot": false,
														"src": "49855:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1821,
														"isOffset": false,
														"isSlot": false,
														"src": "49952:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1821,
														"isOffset": false,
														"isSlot": false,
														"src": "49963:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1821,
														"isOffset": false,
														"isSlot": false,
														"src": "50026:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1818,
														"isOffset": false,
														"isSlot": false,
														"src": "49417:5:0",
														"valueSize": 1
													}
												],
												"id": 1823,
												"nodeType": "InlineAssembly",
												"src": "48440:1608:0"
											}
										]
									},
									"documentation": {
										"id": 1816,
										"nodeType": "StructuredDocumentation",
										"src": "48255:86:0",
										"text": " @dev Converts a uint256 to its ASCII string decimal representation."
									},
									"id": 1825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_toString",
									"nameLocation": "48355:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "48373:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "48365:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48365:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48364:15:0"
									},
									"returnParameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "48425:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "48411:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1820,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "48411:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48410:19:0"
									},
									"scope": 1826,
									"src": "48346:1708:0",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1851,
							"src": "9604:40452:0",
							"usedErrors": [
								5,
								8,
								11,
								14,
								17,
								20,
								23,
								26,
								29,
								32,
								35,
								38,
								41
							]
						},
						{
							"id": 1827,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "50093:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1828,
										"name": "ERC721A",
										"nameLocations": [
											"50150:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1826,
										"src": "50150:7:0"
									},
									"id": 1829,
									"nodeType": "InheritanceSpecifier",
									"src": "50150:7:0"
								}
							],
							"canonicalName": "GasCompareERC721A",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1850,
							"linearizedBaseContracts": [
								1850,
								1826,
								205
							],
							"name": "GasCompareERC721A",
							"nameLocation": "50129:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1836,
										"nodeType": "Block",
										"src": "50204:2:0",
										"statements": []
									},
									"id": 1837,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "417a756b69",
													"id": 1832,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "50186:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8259708f963947d28484bf669e6cdd15ac12e7d813de008356896f65b003a79b",
														"typeString": "literal_string \"Azuki\""
													},
													"value": "Azuki"
												},
												{
													"hexValue": "415a554b49",
													"id": 1833,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "50195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_184a09271b0532717108cdd656088ca8d5a200eb75d6eb742b2d77961d97dd73",
														"typeString": "literal_string \"AZUKI\""
													},
													"value": "AZUKI"
												}
											],
											"id": 1834,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1831,
												"name": "ERC721A",
												"nameLocations": [
													"50178:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1826,
												"src": "50178:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "50178:25:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50175:2:0"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50204:0:0"
									},
									"scope": 1850,
									"src": "50164:42:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1848,
										"nodeType": "Block",
										"src": "50261:125:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1843,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "50358:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "50362:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "50358:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1845,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1839,
															"src": "50370:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1842,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1362,
														"src": "50352:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50352:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1847,
												"nodeType": "ExpressionStatement",
												"src": "50352:27:0"
											}
										]
									},
									"functionSelector": "a0712d68",
									"id": 1849,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "50221:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "50234:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "50226:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50226:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50225:18:0"
									},
									"returnParameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50261:0:0"
									},
									"scope": 1850,
									"src": "50212:174:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1851,
							"src": "50120:268:0",
							"usedErrors": [
								5,
								8,
								11,
								14,
								17,
								20,
								23,
								26,
								29,
								32,
								35,
								38,
								41
							]
						}
					],
					"src": "95:50293:0"
				},
				"id": 0
			}
		}
	}
}