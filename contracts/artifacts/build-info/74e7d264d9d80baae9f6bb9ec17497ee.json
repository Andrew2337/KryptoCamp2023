{
	"id": "74e7d264d9d80baae9f6bb9ec17497ee",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Staketest.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract StakingContract {\r\n    using SafeMath for uint256;\r\n\r\n    IERC20 public tokenA;\r\n    IERC20 public tokenAreward;\r\n    uint256 Maxreward = 10000000000; //總獎勵\r\n    uint256 Nowreward; //目前已發放獎勵\r\n    uint256 rewardRate = 100; // 假設回報比例為100，質押1個tokenA，每過100秒可以拿到100個tokenB\r\n    mapping(address => uint256) private tokenAstakedAmounts; //tokenA質押數量\r\n    mapping(address => uint256) private HowLong; //質押時間\r\n\r\n    //設定質押合約\r\n    constructor(address _tokenA) {\r\n        tokenA = IERC20(_tokenA);\r\n        tokenAreward = IERC20(_tokenA);\r\n    }\r\n\r\n    function stake(uint256 _amount) external {\r\n        require(_amount > 0, \"Amount must be greater than zero\");  //確認質押數量>0\r\n        require(tokenA.balanceOf(msg.sender) >= _amount, \"Insufficient balance\"); //確認tokenA貸幣數量夠\r\n\r\n        tokenA.transferFrom(msg.sender, address(this), _amount); //轉移token代幣至此合約\r\n        tokenAstakedAmounts[msg.sender] = tokenAstakedAmounts[msg.sender].add(_amount); //新增tokenA質押數量\r\n        HowLong[msg.sender] = block.timestamp; //質押的鏈上時間\r\n\r\n        emit Staked(msg.sender, _amount);\r\n    }\r\n\r\n    function unstake(uint256 _amount) external {\r\n        require(_amount > 0, \"Amount must be greater than zero\"); //確認取出數量>0\r\n        require(tokenAstakedAmounts[msg.sender] >= _amount, \"Insufficient staked balance\"); //確認要取出的tokenA貸幣數量夠\r\n\r\n        uint256 time = (block.timestamp - HowLong[msg.sender]) / 100; //計算時間單位\r\n        uint256 reward = tokenAstakedAmounts[msg.sender] * rewardRate * time; //計算tokenB獎勵\r\n        Nowreward = Nowreward + reward; //計算當前獎勵發放數量\r\n        tokenA.transfer(msg.sender, _amount); //提幣\r\n        tokenAstakedAmounts[msg.sender].sub(_amount); //清除tokenA質押數量\r\n        HowLong[msg.sender] = 0;    //清除時間\r\n\r\n        if (Maxreward >= Nowreward)\r\n        tokenAreward.transfer(msg.sender, reward);  //提幣\r\n\r\n        emit Unstaked(msg.sender, _amount, reward);\r\n    }\r\n\r\n    function calculateReward() public view returns (uint256) {\r\n        uint256 time = (block.timestamp - HowLong[msg.sender]) / 100; //計算時間單位\r\n\r\n        return tokenAstakedAmounts[msg.sender] * rewardRate * time; //計算獎勵\r\n    }\r\n\r\n    function Checkstake () public view returns (uint256) {\r\n        return tokenAstakedAmounts[msg.sender];\r\n    }\r\n\r\n    event Staked(address indexed account, uint256 amount);\r\n    event Unstaked(address indexed account, uint256 amount, uint256 reward);\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c15ed1dd1d225e33a6008ef359af97efbbcf70eaff3fc3114bd2b847147bb0da64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c15ed1dd1d225e33a6008ef359af97efbbcf70eaff3fc3114bd2b847147bb0da64736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 0x5E 0xD1 0xDD SAR 0x22 0x5E CALLER 0xA6 STOP DUP15 RETURN MSIZE 0xAF SWAP8 0xEF 0xBB 0xCF PUSH17 0xEAFF3FC3114BD2B847147BB0DA64736F6C PUSH4 0x43000813 STOP CALLER ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c15ed1dd1d225e33a6008ef359af97efbbcf70eaff3fc3114bd2b847147bb0da64736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 0x5E 0xD1 0xDD SAR 0x22 0x5E CALLER 0xA6 STOP DUP15 RETURN MSIZE 0xAF SWAP8 0xEF 0xBB 0xCF PUSH17 0xEAFF3FC3114BD2B847147BB0DA64736F6C PUSH4 0x43000813 STOP CALLER ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c15ed1dd1d225e33a6008ef359af97efbbcf70eaff3fc3114bd2b847147bb0da64736f6c63430008130033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/Staketest.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Staketest.sol": {
				"StakingContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenA",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "Unstaked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "Checkstake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenA",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAreward",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Staketest.sol\":180:2815  contract StakingContract {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Staketest.sol\":327:338  10000000000 */\n  0x02540be400\n    /* \"contracts/Staketest.sol\":307:338  uint256 Maxreward = 10000000000 */\n  0x02\n  sstore\n    /* \"contracts/Staketest.sol\":426:429  100 */\n  0x64\n    /* \"contracts/Staketest.sol\":405:429  uint256 rewardRate = 100 */\n  0x04\n  sstore\n    /* \"contracts/Staketest.sol\":698:811  constructor(address _tokenA) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Staketest.sol\":754:761  _tokenA */\n  dup1\n    /* \"contracts/Staketest.sol\":738:744  tokenA */\n  0x00\n  dup1\n    /* \"contracts/Staketest.sol\":738:762  tokenA = IERC20(_tokenA) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staketest.sol\":795:802  _tokenA */\n  dup1\n    /* \"contracts/Staketest.sol\":773:785  tokenAreward */\n  0x01\n  0x00\n    /* \"contracts/Staketest.sol\":773:803  tokenAreward = IERC20(_tokenA) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staketest.sol\":698:811  constructor(address _tokenA) {... */\n  pop\n    /* \"contracts/Staketest.sol\":180:2815  contract StakingContract {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Staketest.sol\":180:2815  contract StakingContract {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Staketest.sol\":180:2815  contract StakingContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0fc63d10\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1928c749\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e17de78\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x725cedd3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x91b780ea\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Staketest.sol\":247:267  IERC20 public tokenA */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staketest.sol\":274:300  IERC20 public tokenAreward */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staketest.sol\":1413:2303  function unstake(uint256 _amount) external {... */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"contracts/Staketest.sol\":2311:2554  function calculateReward() public view returns (uint256) {... */\n    tag_6:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staketest.sol\":2562:2672  function Checkstake () public view returns (uint256) {... */\n    tag_7:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staketest.sol\":819:1405  function stake(uint256 _amount) external {... */\n    tag_8:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n    tag_27:\n      stop\n        /* \"contracts/Staketest.sol\":247:267  IERC20 public tokenA */\n    tag_10:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Staketest.sol\":274:300  IERC20 public tokenAreward */\n    tag_14:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Staketest.sol\":1413:2303  function unstake(uint256 _amount) external {... */\n    tag_19:\n        /* \"contracts/Staketest.sol\":1485:1486  0 */\n      0x00\n        /* \"contracts/Staketest.sol\":1475:1482  _amount */\n      dup2\n        /* \"contracts/Staketest.sol\":1475:1486  _amount > 0 */\n      gt\n        /* \"contracts/Staketest.sol\":1467:1523  require(_amount > 0, \"Amount must be greater than zero\") */\n      tag_31\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_32\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_31:\n        /* \"contracts/Staketest.sol\":1600:1607  _amount */\n      dup1\n        /* \"contracts/Staketest.sol\":1565:1584  tokenAstakedAmounts */\n      0x05\n        /* \"contracts/Staketest.sol\":1565:1596  tokenAstakedAmounts[msg.sender] */\n      0x00\n        /* \"contracts/Staketest.sol\":1585:1595  msg.sender */\n      caller\n        /* \"contracts/Staketest.sol\":1565:1596  tokenAstakedAmounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Staketest.sol\":1565:1607  tokenAstakedAmounts[msg.sender] >= _amount */\n      lt\n      iszero\n        /* \"contracts/Staketest.sol\":1557:1639  require(tokenAstakedAmounts[msg.sender] >= _amount, \"Insufficient staked balance\") */\n      tag_34\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_35\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_34:\n        /* \"contracts/Staketest.sol\":1694:1706  uint256 time */\n      0x00\n        /* \"contracts/Staketest.sol\":1751:1754  100 */\n      0x64\n        /* \"contracts/Staketest.sol\":1728:1735  HowLong */\n      0x06\n        /* \"contracts/Staketest.sol\":1728:1747  HowLong[msg.sender] */\n      0x00\n        /* \"contracts/Staketest.sol\":1736:1746  msg.sender */\n      caller\n        /* \"contracts/Staketest.sol\":1728:1747  HowLong[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Staketest.sol\":1710:1725  block.timestamp */\n      timestamp\n        /* \"contracts/Staketest.sol\":1710:1747  block.timestamp - HowLong[msg.sender] */\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"contracts/Staketest.sol\":1709:1754  (block.timestamp - HowLong[msg.sender]) / 100 */\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"contracts/Staketest.sol\":1694:1754  uint256 time = (block.timestamp - HowLong[msg.sender]) / 100 */\n      swap1\n      pop\n        /* \"contracts/Staketest.sol\":1786:1800  uint256 reward */\n      0x00\n        /* \"contracts/Staketest.sol\":1850:1854  time */\n      dup2\n        /* \"contracts/Staketest.sol\":1837:1847  rewardRate */\n      sload(0x04)\n        /* \"contracts/Staketest.sol\":1803:1822  tokenAstakedAmounts */\n      0x05\n        /* \"contracts/Staketest.sol\":1803:1834  tokenAstakedAmounts[msg.sender] */\n      0x00\n        /* \"contracts/Staketest.sol\":1823:1833  msg.sender */\n      caller\n        /* \"contracts/Staketest.sol\":1803:1834  tokenAstakedAmounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Staketest.sol\":1803:1847  tokenAstakedAmounts[msg.sender] * rewardRate */\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"contracts/Staketest.sol\":1803:1854  tokenAstakedAmounts[msg.sender] * rewardRate * time */\n      tag_43\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_43:\n        /* \"contracts/Staketest.sol\":1786:1854  uint256 reward = tokenAstakedAmounts[msg.sender] * rewardRate * time */\n      swap1\n      pop\n        /* \"contracts/Staketest.sol\":1910:1916  reward */\n      dup1\n        /* \"contracts/Staketest.sol\":1898:1907  Nowreward */\n      sload(0x03)\n        /* \"contracts/Staketest.sol\":1898:1916  Nowreward + reward */\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"contracts/Staketest.sol\":1886:1895  Nowreward */\n      0x03\n        /* \"contracts/Staketest.sol\":1886:1916  Nowreward = Nowreward + reward */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staketest.sol\":1960:1966  tokenA */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staketest.sol\":1960:1975  tokenA.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Staketest.sol\":1976:1986  msg.sender */\n      caller\n        /* \"contracts/Staketest.sol\":1988:1995  _amount */\n      dup6\n        /* \"contracts/Staketest.sol\":1960:1996  tokenA.transfer(msg.sender, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_46\n      swap3\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_49:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      pop\n        /* \"contracts/Staketest.sol\":2016:2060  tokenAstakedAmounts[msg.sender].sub(_amount) */\n      tag_52\n        /* \"contracts/Staketest.sol\":2052:2059  _amount */\n      dup4\n        /* \"contracts/Staketest.sol\":2016:2035  tokenAstakedAmounts */\n      0x05\n        /* \"contracts/Staketest.sol\":2016:2047  tokenAstakedAmounts[msg.sender] */\n      0x00\n        /* \"contracts/Staketest.sol\":2036:2046  msg.sender */\n      caller\n        /* \"contracts/Staketest.sol\":2016:2047  tokenAstakedAmounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Staketest.sol\":2016:2051  tokenAstakedAmounts[msg.sender].sub */\n      tag_53\n      swap1\n        /* \"contracts/Staketest.sol\":2016:2060  tokenAstakedAmounts[msg.sender].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_52:\n      pop\n        /* \"contracts/Staketest.sol\":2120:2121  0 */\n      0x00\n        /* \"contracts/Staketest.sol\":2098:2105  HowLong */\n      0x06\n        /* \"contracts/Staketest.sol\":2098:2117  HowLong[msg.sender] */\n      0x00\n        /* \"contracts/Staketest.sol\":2106:2116  msg.sender */\n      caller\n        /* \"contracts/Staketest.sol\":2098:2117  HowLong[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staketest.sol\":2098:2121  HowLong[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staketest.sol\":2169:2178  Nowreward */\n      sload(0x03)\n        /* \"contracts/Staketest.sol\":2156:2165  Maxreward */\n      sload(0x02)\n        /* \"contracts/Staketest.sol\":2156:2178  Maxreward >= Nowreward */\n      lt\n        /* \"contracts/Staketest.sol\":2152:2230  if (Maxreward >= Nowreward)... */\n      tag_54\n      jumpi\n        /* \"contracts/Staketest.sol\":2189:2201  tokenAreward */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staketest.sol\":2189:2210  tokenAreward.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Staketest.sol\":2211:2221  msg.sender */\n      caller\n        /* \"contracts/Staketest.sol\":2223:2229  reward */\n      dup4\n        /* \"contracts/Staketest.sol\":2189:2230  tokenAreward.transfer(msg.sender, reward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap3\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_55:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_58:\n      pop\n        /* \"contracts/Staketest.sol\":2152:2230  if (Maxreward >= Nowreward)... */\n    tag_54:\n        /* \"contracts/Staketest.sol\":2267:2277  msg.sender */\n      caller\n        /* \"contracts/Staketest.sol\":2258:2295  Unstaked(msg.sender, _amount, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e\n        /* \"contracts/Staketest.sol\":2279:2286  _amount */\n      dup5\n        /* \"contracts/Staketest.sol\":2288:2294  reward */\n      dup4\n        /* \"contracts/Staketest.sol\":2258:2295  Unstaked(msg.sender, _amount, reward) */\n      mload(0x40)\n      tag_59\n      swap3\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Staketest.sol\":1456:2303  {... */\n      pop\n      pop\n        /* \"contracts/Staketest.sol\":1413:2303  function unstake(uint256 _amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staketest.sol\":2311:2554  function calculateReward() public view returns (uint256) {... */\n    tag_21:\n        /* \"contracts/Staketest.sol\":2359:2366  uint256 */\n      0x00\n        /* \"contracts/Staketest.sol\":2379:2391  uint256 time */\n      dup1\n        /* \"contracts/Staketest.sol\":2436:2439  100 */\n      0x64\n        /* \"contracts/Staketest.sol\":2413:2420  HowLong */\n      0x06\n        /* \"contracts/Staketest.sol\":2413:2432  HowLong[msg.sender] */\n      0x00\n        /* \"contracts/Staketest.sol\":2421:2431  msg.sender */\n      caller\n        /* \"contracts/Staketest.sol\":2413:2432  HowLong[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Staketest.sol\":2395:2410  block.timestamp */\n      timestamp\n        /* \"contracts/Staketest.sol\":2395:2432  block.timestamp - HowLong[msg.sender] */\n      tag_62\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_62:\n        /* \"contracts/Staketest.sol\":2394:2439  (block.timestamp - HowLong[msg.sender]) / 100 */\n      tag_63\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_63:\n        /* \"contracts/Staketest.sol\":2379:2439  uint256 time = (block.timestamp - HowLong[msg.sender]) / 100 */\n      swap1\n      pop\n        /* \"contracts/Staketest.sol\":2527:2531  time */\n      dup1\n        /* \"contracts/Staketest.sol\":2514:2524  rewardRate */\n      sload(0x04)\n        /* \"contracts/Staketest.sol\":2480:2499  tokenAstakedAmounts */\n      0x05\n        /* \"contracts/Staketest.sol\":2480:2511  tokenAstakedAmounts[msg.sender] */\n      0x00\n        /* \"contracts/Staketest.sol\":2500:2510  msg.sender */\n      caller\n        /* \"contracts/Staketest.sol\":2480:2511  tokenAstakedAmounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Staketest.sol\":2480:2524  tokenAstakedAmounts[msg.sender] * rewardRate */\n      tag_64\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_64:\n        /* \"contracts/Staketest.sol\":2480:2531  tokenAstakedAmounts[msg.sender] * rewardRate * time */\n      tag_65\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_65:\n        /* \"contracts/Staketest.sol\":2473:2531  return tokenAstakedAmounts[msg.sender] * rewardRate * time */\n      swap2\n      pop\n      pop\n        /* \"contracts/Staketest.sol\":2311:2554  function calculateReward() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staketest.sol\":2562:2672  function Checkstake () public view returns (uint256) {... */\n    tag_25:\n        /* \"contracts/Staketest.sol\":2606:2613  uint256 */\n      0x00\n        /* \"contracts/Staketest.sol\":2633:2652  tokenAstakedAmounts */\n      0x05\n        /* \"contracts/Staketest.sol\":2633:2664  tokenAstakedAmounts[msg.sender] */\n      0x00\n        /* \"contracts/Staketest.sol\":2653:2663  msg.sender */\n      caller\n        /* \"contracts/Staketest.sol\":2633:2664  tokenAstakedAmounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Staketest.sol\":2626:2664  return tokenAstakedAmounts[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Staketest.sol\":2562:2672  function Checkstake () public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staketest.sol\":819:1405  function stake(uint256 _amount) external {... */\n    tag_29:\n        /* \"contracts/Staketest.sol\":889:890  0 */\n      0x00\n        /* \"contracts/Staketest.sol\":879:886  _amount */\n      dup2\n        /* \"contracts/Staketest.sol\":879:890  _amount > 0 */\n      gt\n        /* \"contracts/Staketest.sol\":871:927  require(_amount > 0, \"Amount must be greater than zero\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_33\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"contracts/Staketest.sol\":1002:1009  _amount */\n      dup1\n        /* \"contracts/Staketest.sol\":970:976  tokenA */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staketest.sol\":970:986  tokenA.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staketest.sol\":987:997  msg.sender */\n      caller\n        /* \"contracts/Staketest.sol\":970:998  tokenA.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_73\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_73:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"contracts/Staketest.sol\":970:1009  tokenA.balanceOf(msg.sender) >= _amount */\n      lt\n      iszero\n        /* \"contracts/Staketest.sol\":962:1034  require(tokenA.balanceOf(msg.sender) >= _amount, \"Insufficient balance\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"contracts/Staketest.sol\":1077:1083  tokenA */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staketest.sol\":1077:1096  tokenA.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Staketest.sol\":1097:1107  msg.sender */\n      caller\n        /* \"contracts/Staketest.sol\":1117:1121  this */\n      address\n        /* \"contracts/Staketest.sol\":1124:1131  _amount */\n      dup5\n        /* \"contracts/Staketest.sol\":1077:1132  tokenA.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_82\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_82:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_83:\n      pop\n        /* \"contracts/Staketest.sol\":1209:1253  tokenAstakedAmounts[msg.sender].add(_amount) */\n      tag_84\n        /* \"contracts/Staketest.sol\":1245:1252  _amount */\n      dup2\n        /* \"contracts/Staketest.sol\":1209:1228  tokenAstakedAmounts */\n      0x05\n        /* \"contracts/Staketest.sol\":1209:1240  tokenAstakedAmounts[msg.sender] */\n      0x00\n        /* \"contracts/Staketest.sol\":1229:1239  msg.sender */\n      caller\n        /* \"contracts/Staketest.sol\":1209:1240  tokenAstakedAmounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Staketest.sol\":1209:1244  tokenAstakedAmounts[msg.sender].add */\n      tag_85\n      swap1\n        /* \"contracts/Staketest.sol\":1209:1253  tokenAstakedAmounts[msg.sender].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_84:\n        /* \"contracts/Staketest.sol\":1175:1194  tokenAstakedAmounts */\n      0x05\n        /* \"contracts/Staketest.sol\":1175:1206  tokenAstakedAmounts[msg.sender] */\n      0x00\n        /* \"contracts/Staketest.sol\":1195:1205  msg.sender */\n      caller\n        /* \"contracts/Staketest.sol\":1175:1206  tokenAstakedAmounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staketest.sol\":1175:1253  tokenAstakedAmounts[msg.sender] = tokenAstakedAmounts[msg.sender].add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staketest.sol\":1313:1328  block.timestamp */\n      timestamp\n        /* \"contracts/Staketest.sol\":1291:1298  HowLong */\n      0x06\n        /* \"contracts/Staketest.sol\":1291:1310  HowLong[msg.sender] */\n      0x00\n        /* \"contracts/Staketest.sol\":1299:1309  msg.sender */\n      caller\n        /* \"contracts/Staketest.sol\":1291:1310  HowLong[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staketest.sol\":1291:1328  HowLong[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staketest.sol\":1377:1387  msg.sender */\n      caller\n        /* \"contracts/Staketest.sol\":1370:1397  Staked(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"contracts/Staketest.sol\":1389:1396  _amount */\n      dup3\n        /* \"contracts/Staketest.sol\":1370:1397  Staked(msg.sender, _amount) */\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Staketest.sol\":819:1405  function stake(uint256 _amount) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_88\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_90\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_91:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:199   */\n    tag_92:\n        /* \"#utility.yul\":167:170   */\n      0x00\n        /* \"#utility.yul\":188:193   */\n      dup2\n        /* \"#utility.yul\":181:193   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":205:347   */\n    tag_93:\n        /* \"#utility.yul\":255:264   */\n      0x00\n        /* \"#utility.yul\":288:341   */\n      tag_123\n        /* \"#utility.yul\":306:340   */\n      tag_124\n        /* \"#utility.yul\":315:339   */\n      tag_125\n        /* \"#utility.yul\":333:338   */\n      dup5\n        /* \"#utility.yul\":315:339   */\n      tag_91\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":306:340   */\n      tag_92\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":288:341   */\n      tag_91\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":275:341   */\n      swap1\n      pop\n        /* \"#utility.yul\":205:347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":353:479   */\n    tag_94:\n        /* \"#utility.yul\":403:412   */\n      0x00\n        /* \"#utility.yul\":436:473   */\n      tag_127\n        /* \"#utility.yul\":467:472   */\n      dup3\n        /* \"#utility.yul\":436:473   */\n      tag_93\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":423:473   */\n      swap1\n      pop\n        /* \"#utility.yul\":353:479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":485:624   */\n    tag_95:\n        /* \"#utility.yul\":548:557   */\n      0x00\n        /* \"#utility.yul\":581:618   */\n      tag_129\n        /* \"#utility.yul\":612:617   */\n      dup3\n        /* \"#utility.yul\":581:618   */\n      tag_94\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":568:618   */\n      swap1\n      pop\n        /* \"#utility.yul\":485:624   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":630:787   */\n    tag_96:\n        /* \"#utility.yul\":730:780   */\n      tag_131\n        /* \"#utility.yul\":774:779   */\n      dup2\n        /* \"#utility.yul\":730:780   */\n      tag_95\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":725:728   */\n      dup3\n        /* \"#utility.yul\":718:781   */\n      mstore\n        /* \"#utility.yul\":630:787   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":793:1041   */\n    tag_12:\n        /* \"#utility.yul\":899:903   */\n      0x00\n        /* \"#utility.yul\":937:939   */\n      0x20\n        /* \"#utility.yul\":926:935   */\n      dup3\n        /* \"#utility.yul\":922:940   */\n      add\n        /* \"#utility.yul\":914:940   */\n      swap1\n      pop\n        /* \"#utility.yul\":950:1034   */\n      tag_133\n        /* \"#utility.yul\":1031:1032   */\n      0x00\n        /* \"#utility.yul\":1020:1029   */\n      dup4\n        /* \"#utility.yul\":1016:1033   */\n      add\n        /* \"#utility.yul\":1007:1013   */\n      dup5\n        /* \"#utility.yul\":950:1034   */\n      tag_96\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":793:1041   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1128:1245   */\n    tag_98:\n        /* \"#utility.yul\":1237:1238   */\n      0x00\n        /* \"#utility.yul\":1234:1235   */\n      dup1\n        /* \"#utility.yul\":1227:1239   */\n      revert\n        /* \"#utility.yul\":1374:1451   */\n    tag_100:\n        /* \"#utility.yul\":1411:1418   */\n      0x00\n        /* \"#utility.yul\":1440:1445   */\n      dup2\n        /* \"#utility.yul\":1429:1445   */\n      swap1\n      pop\n        /* \"#utility.yul\":1374:1451   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1457:1579   */\n    tag_101:\n        /* \"#utility.yul\":1530:1554   */\n      tag_139\n        /* \"#utility.yul\":1548:1553   */\n      dup2\n        /* \"#utility.yul\":1530:1554   */\n      tag_100\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":1523:1528   */\n      dup2\n        /* \"#utility.yul\":1520:1555   */\n      eq\n        /* \"#utility.yul\":1510:1573   */\n      tag_140\n      jumpi\n        /* \"#utility.yul\":1569:1570   */\n      0x00\n        /* \"#utility.yul\":1566:1567   */\n      dup1\n        /* \"#utility.yul\":1559:1571   */\n      revert\n        /* \"#utility.yul\":1510:1573   */\n    tag_140:\n        /* \"#utility.yul\":1457:1579   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1585:1724   */\n    tag_102:\n        /* \"#utility.yul\":1631:1636   */\n      0x00\n        /* \"#utility.yul\":1669:1675   */\n      dup2\n        /* \"#utility.yul\":1656:1676   */\n      calldataload\n        /* \"#utility.yul\":1647:1676   */\n      swap1\n      pop\n        /* \"#utility.yul\":1685:1718   */\n      tag_142\n        /* \"#utility.yul\":1712:1717   */\n      dup2\n        /* \"#utility.yul\":1685:1718   */\n      tag_101\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":1585:1724   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1730:2059   */\n    tag_18:\n        /* \"#utility.yul\":1789:1795   */\n      0x00\n        /* \"#utility.yul\":1838:1840   */\n      0x20\n        /* \"#utility.yul\":1826:1835   */\n      dup3\n        /* \"#utility.yul\":1817:1824   */\n      dup5\n        /* \"#utility.yul\":1813:1836   */\n      sub\n        /* \"#utility.yul\":1809:1841   */\n      slt\n        /* \"#utility.yul\":1806:1925   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":1844:1923   */\n      tag_145\n      tag_98\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":1806:1925   */\n    tag_144:\n        /* \"#utility.yul\":1964:1965   */\n      0x00\n        /* \"#utility.yul\":1989:2042   */\n      tag_146\n        /* \"#utility.yul\":2034:2041   */\n      dup5\n        /* \"#utility.yul\":2025:2031   */\n      dup3\n        /* \"#utility.yul\":2014:2023   */\n      dup6\n        /* \"#utility.yul\":2010:2032   */\n      add\n        /* \"#utility.yul\":1989:2042   */\n      tag_102\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":1979:2042   */\n      swap2\n      pop\n        /* \"#utility.yul\":1935:2052   */\n      pop\n        /* \"#utility.yul\":1730:2059   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2065:2183   */\n    tag_103:\n        /* \"#utility.yul\":2152:2176   */\n      tag_148\n        /* \"#utility.yul\":2170:2175   */\n      dup2\n        /* \"#utility.yul\":2152:2176   */\n      tag_100\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":2147:2150   */\n      dup3\n        /* \"#utility.yul\":2140:2177   */\n      mstore\n        /* \"#utility.yul\":2065:2183   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2189:2411   */\n    tag_23:\n        /* \"#utility.yul\":2282:2286   */\n      0x00\n        /* \"#utility.yul\":2320:2322   */\n      0x20\n        /* \"#utility.yul\":2309:2318   */\n      dup3\n        /* \"#utility.yul\":2305:2323   */\n      add\n        /* \"#utility.yul\":2297:2323   */\n      swap1\n      pop\n        /* \"#utility.yul\":2333:2404   */\n      tag_150\n        /* \"#utility.yul\":2401:2402   */\n      0x00\n        /* \"#utility.yul\":2390:2399   */\n      dup4\n        /* \"#utility.yul\":2386:2403   */\n      add\n        /* \"#utility.yul\":2377:2383   */\n      dup5\n        /* \"#utility.yul\":2333:2404   */\n      tag_103\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":2189:2411   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2417:2586   */\n    tag_104:\n        /* \"#utility.yul\":2501:2512   */\n      0x00\n        /* \"#utility.yul\":2535:2541   */\n      dup3\n        /* \"#utility.yul\":2530:2533   */\n      dup3\n        /* \"#utility.yul\":2523:2542   */\n      mstore\n        /* \"#utility.yul\":2575:2579   */\n      0x20\n        /* \"#utility.yul\":2570:2573   */\n      dup3\n        /* \"#utility.yul\":2566:2580   */\n      add\n        /* \"#utility.yul\":2551:2580   */\n      swap1\n      pop\n        /* \"#utility.yul\":2417:2586   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2592:2774   */\n    tag_105:\n        /* \"#utility.yul\":2732:2766   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":2728:2729   */\n      0x00\n        /* \"#utility.yul\":2720:2726   */\n      dup3\n        /* \"#utility.yul\":2716:2730   */\n      add\n        /* \"#utility.yul\":2709:2767   */\n      mstore\n        /* \"#utility.yul\":2592:2774   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2780:3146   */\n    tag_106:\n        /* \"#utility.yul\":2922:2925   */\n      0x00\n        /* \"#utility.yul\":2943:3010   */\n      tag_154\n        /* \"#utility.yul\":3007:3009   */\n      0x20\n        /* \"#utility.yul\":3002:3005   */\n      dup4\n        /* \"#utility.yul\":2943:3010   */\n      tag_104\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":2936:3010   */\n      swap2\n      pop\n        /* \"#utility.yul\":3019:3112   */\n      tag_155\n        /* \"#utility.yul\":3108:3111   */\n      dup3\n        /* \"#utility.yul\":3019:3112   */\n      tag_105\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":3137:3139   */\n      0x20\n        /* \"#utility.yul\":3132:3135   */\n      dup3\n        /* \"#utility.yul\":3128:3140   */\n      add\n        /* \"#utility.yul\":3121:3140   */\n      swap1\n      pop\n        /* \"#utility.yul\":2780:3146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3152:3571   */\n    tag_33:\n        /* \"#utility.yul\":3318:3322   */\n      0x00\n        /* \"#utility.yul\":3356:3358   */\n      0x20\n        /* \"#utility.yul\":3345:3354   */\n      dup3\n        /* \"#utility.yul\":3341:3359   */\n      add\n        /* \"#utility.yul\":3333:3359   */\n      swap1\n      pop\n        /* \"#utility.yul\":3405:3414   */\n      dup2\n        /* \"#utility.yul\":3399:3403   */\n      dup2\n        /* \"#utility.yul\":3395:3415   */\n      sub\n        /* \"#utility.yul\":3391:3392   */\n      0x00\n        /* \"#utility.yul\":3380:3389   */\n      dup4\n        /* \"#utility.yul\":3376:3393   */\n      add\n        /* \"#utility.yul\":3369:3416   */\n      mstore\n        /* \"#utility.yul\":3433:3564   */\n      tag_157\n        /* \"#utility.yul\":3559:3563   */\n      dup2\n        /* \"#utility.yul\":3433:3564   */\n      tag_106\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":3425:3564   */\n      swap1\n      pop\n        /* \"#utility.yul\":3152:3571   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3577:3754   */\n    tag_107:\n        /* \"#utility.yul\":3717:3746   */\n      0x496e73756666696369656e74207374616b65642062616c616e63650000000000\n        /* \"#utility.yul\":3713:3714   */\n      0x00\n        /* \"#utility.yul\":3705:3711   */\n      dup3\n        /* \"#utility.yul\":3701:3715   */\n      add\n        /* \"#utility.yul\":3694:3747   */\n      mstore\n        /* \"#utility.yul\":3577:3754   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3760:4126   */\n    tag_108:\n        /* \"#utility.yul\":3902:3905   */\n      0x00\n        /* \"#utility.yul\":3923:3990   */\n      tag_160\n        /* \"#utility.yul\":3987:3989   */\n      0x1b\n        /* \"#utility.yul\":3982:3985   */\n      dup4\n        /* \"#utility.yul\":3923:3990   */\n      tag_104\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":3916:3990   */\n      swap2\n      pop\n        /* \"#utility.yul\":3999:4092   */\n      tag_161\n        /* \"#utility.yul\":4088:4091   */\n      dup3\n        /* \"#utility.yul\":3999:4092   */\n      tag_107\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":4117:4119   */\n      0x20\n        /* \"#utility.yul\":4112:4115   */\n      dup3\n        /* \"#utility.yul\":4108:4120   */\n      add\n        /* \"#utility.yul\":4101:4120   */\n      swap1\n      pop\n        /* \"#utility.yul\":3760:4126   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4132:4551   */\n    tag_36:\n        /* \"#utility.yul\":4298:4302   */\n      0x00\n        /* \"#utility.yul\":4336:4338   */\n      0x20\n        /* \"#utility.yul\":4325:4334   */\n      dup3\n        /* \"#utility.yul\":4321:4339   */\n      add\n        /* \"#utility.yul\":4313:4339   */\n      swap1\n      pop\n        /* \"#utility.yul\":4385:4394   */\n      dup2\n        /* \"#utility.yul\":4379:4383   */\n      dup2\n        /* \"#utility.yul\":4375:4395   */\n      sub\n        /* \"#utility.yul\":4371:4372   */\n      0x00\n        /* \"#utility.yul\":4360:4369   */\n      dup4\n        /* \"#utility.yul\":4356:4373   */\n      add\n        /* \"#utility.yul\":4349:4396   */\n      mstore\n        /* \"#utility.yul\":4413:4544   */\n      tag_163\n        /* \"#utility.yul\":4539:4543   */\n      dup2\n        /* \"#utility.yul\":4413:4544   */\n      tag_108\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":4405:4544   */\n      swap1\n      pop\n        /* \"#utility.yul\":4132:4551   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4557:4737   */\n    tag_109:\n        /* \"#utility.yul\":4605:4682   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4602:4603   */\n      0x00\n        /* \"#utility.yul\":4595:4683   */\n      mstore\n        /* \"#utility.yul\":4702:4706   */\n      0x11\n        /* \"#utility.yul\":4699:4700   */\n      0x04\n        /* \"#utility.yul\":4692:4707   */\n      mstore\n        /* \"#utility.yul\":4726:4730   */\n      0x24\n        /* \"#utility.yul\":4723:4724   */\n      0x00\n        /* \"#utility.yul\":4716:4731   */\n      revert\n        /* \"#utility.yul\":4743:4937   */\n    tag_38:\n        /* \"#utility.yul\":4783:4787   */\n      0x00\n        /* \"#utility.yul\":4803:4823   */\n      tag_166\n        /* \"#utility.yul\":4821:4822   */\n      dup3\n        /* \"#utility.yul\":4803:4823   */\n      tag_100\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":4798:4823   */\n      swap2\n      pop\n        /* \"#utility.yul\":4837:4857   */\n      tag_167\n        /* \"#utility.yul\":4855:4856   */\n      dup4\n        /* \"#utility.yul\":4837:4857   */\n      tag_100\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":4832:4857   */\n      swap3\n      pop\n        /* \"#utility.yul\":4881:4882   */\n      dup3\n        /* \"#utility.yul\":4878:4879   */\n      dup3\n        /* \"#utility.yul\":4874:4883   */\n      sub\n        /* \"#utility.yul\":4866:4883   */\n      swap1\n      pop\n        /* \"#utility.yul\":4905:4906   */\n      dup2\n        /* \"#utility.yul\":4899:4903   */\n      dup2\n        /* \"#utility.yul\":4896:4907   */\n      gt\n        /* \"#utility.yul\":4893:4930   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":4910:4928   */\n      tag_169\n      tag_109\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":4893:4930   */\n    tag_168:\n        /* \"#utility.yul\":4743:4937   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4943:5123   */\n    tag_110:\n        /* \"#utility.yul\":4991:5068   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4988:4989   */\n      0x00\n        /* \"#utility.yul\":4981:5069   */\n      mstore\n        /* \"#utility.yul\":5088:5092   */\n      0x12\n        /* \"#utility.yul\":5085:5086   */\n      0x04\n        /* \"#utility.yul\":5078:5093   */\n      mstore\n        /* \"#utility.yul\":5112:5116   */\n      0x24\n        /* \"#utility.yul\":5109:5110   */\n      0x00\n        /* \"#utility.yul\":5102:5117   */\n      revert\n        /* \"#utility.yul\":5129:5314   */\n    tag_40:\n        /* \"#utility.yul\":5169:5170   */\n      0x00\n        /* \"#utility.yul\":5186:5206   */\n      tag_172\n        /* \"#utility.yul\":5204:5205   */\n      dup3\n        /* \"#utility.yul\":5186:5206   */\n      tag_100\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":5181:5206   */\n      swap2\n      pop\n        /* \"#utility.yul\":5220:5240   */\n      tag_173\n        /* \"#utility.yul\":5238:5239   */\n      dup4\n        /* \"#utility.yul\":5220:5240   */\n      tag_100\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":5215:5240   */\n      swap3\n      pop\n        /* \"#utility.yul\":5259:5260   */\n      dup3\n        /* \"#utility.yul\":5249:5284   */\n      tag_174\n      jumpi\n        /* \"#utility.yul\":5264:5282   */\n      tag_175\n      tag_110\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":5249:5284   */\n    tag_174:\n        /* \"#utility.yul\":5306:5307   */\n      dup3\n        /* \"#utility.yul\":5303:5304   */\n      dup3\n        /* \"#utility.yul\":5299:5308   */\n      div\n        /* \"#utility.yul\":5294:5308   */\n      swap1\n      pop\n        /* \"#utility.yul\":5129:5314   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5320:5730   */\n    tag_42:\n        /* \"#utility.yul\":5360:5367   */\n      0x00\n        /* \"#utility.yul\":5383:5403   */\n      tag_177\n        /* \"#utility.yul\":5401:5402   */\n      dup3\n        /* \"#utility.yul\":5383:5403   */\n      tag_100\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":5378:5403   */\n      swap2\n      pop\n        /* \"#utility.yul\":5417:5437   */\n      tag_178\n        /* \"#utility.yul\":5435:5436   */\n      dup4\n        /* \"#utility.yul\":5417:5437   */\n      tag_100\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":5412:5437   */\n      swap3\n      pop\n        /* \"#utility.yul\":5472:5473   */\n      dup3\n        /* \"#utility.yul\":5469:5470   */\n      dup3\n        /* \"#utility.yul\":5465:5474   */\n      mul\n        /* \"#utility.yul\":5494:5524   */\n      tag_179\n        /* \"#utility.yul\":5512:5523   */\n      dup2\n        /* \"#utility.yul\":5494:5524   */\n      tag_100\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":5483:5524   */\n      swap2\n      pop\n        /* \"#utility.yul\":5673:5674   */\n      dup3\n        /* \"#utility.yul\":5664:5671   */\n      dup3\n        /* \"#utility.yul\":5660:5675   */\n      div\n        /* \"#utility.yul\":5657:5658   */\n      dup5\n        /* \"#utility.yul\":5654:5676   */\n      eq\n        /* \"#utility.yul\":5634:5635   */\n      dup4\n        /* \"#utility.yul\":5627:5636   */\n      iszero\n        /* \"#utility.yul\":5607:5690   */\n      or\n        /* \"#utility.yul\":5584:5723   */\n      tag_180\n      jumpi\n        /* \"#utility.yul\":5703:5721   */\n      tag_181\n      tag_109\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":5584:5723   */\n    tag_180:\n        /* \"#utility.yul\":5368:5730   */\n      pop\n        /* \"#utility.yul\":5320:5730   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5736:5927   */\n    tag_45:\n        /* \"#utility.yul\":5776:5779   */\n      0x00\n        /* \"#utility.yul\":5795:5815   */\n      tag_183\n        /* \"#utility.yul\":5813:5814   */\n      dup3\n        /* \"#utility.yul\":5795:5815   */\n      tag_100\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":5790:5815   */\n      swap2\n      pop\n        /* \"#utility.yul\":5829:5849   */\n      tag_184\n        /* \"#utility.yul\":5847:5848   */\n      dup4\n        /* \"#utility.yul\":5829:5849   */\n      tag_100\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":5824:5849   */\n      swap3\n      pop\n        /* \"#utility.yul\":5872:5873   */\n      dup3\n        /* \"#utility.yul\":5869:5870   */\n      dup3\n        /* \"#utility.yul\":5865:5874   */\n      add\n        /* \"#utility.yul\":5858:5874   */\n      swap1\n      pop\n        /* \"#utility.yul\":5893:5896   */\n      dup1\n        /* \"#utility.yul\":5890:5891   */\n      dup3\n        /* \"#utility.yul\":5887:5897   */\n      gt\n        /* \"#utility.yul\":5884:5920   */\n      iszero\n      tag_185\n      jumpi\n        /* \"#utility.yul\":5900:5918   */\n      tag_186\n      tag_109\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":5884:5920   */\n    tag_185:\n        /* \"#utility.yul\":5736:5927   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5933:6029   */\n    tag_111:\n        /* \"#utility.yul\":5970:5977   */\n      0x00\n        /* \"#utility.yul\":5999:6023   */\n      tag_188\n        /* \"#utility.yul\":6017:6022   */\n      dup3\n        /* \"#utility.yul\":5999:6023   */\n      tag_91\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":5988:6023   */\n      swap1\n      pop\n        /* \"#utility.yul\":5933:6029   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6035:6153   */\n    tag_112:\n        /* \"#utility.yul\":6122:6146   */\n      tag_190\n        /* \"#utility.yul\":6140:6145   */\n      dup2\n        /* \"#utility.yul\":6122:6146   */\n      tag_111\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":6117:6120   */\n      dup3\n        /* \"#utility.yul\":6110:6147   */\n      mstore\n        /* \"#utility.yul\":6035:6153   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6159:6491   */\n    tag_47:\n        /* \"#utility.yul\":6280:6284   */\n      0x00\n        /* \"#utility.yul\":6318:6320   */\n      0x40\n        /* \"#utility.yul\":6307:6316   */\n      dup3\n        /* \"#utility.yul\":6303:6321   */\n      add\n        /* \"#utility.yul\":6295:6321   */\n      swap1\n      pop\n        /* \"#utility.yul\":6331:6402   */\n      tag_192\n        /* \"#utility.yul\":6399:6400   */\n      0x00\n        /* \"#utility.yul\":6388:6397   */\n      dup4\n        /* \"#utility.yul\":6384:6401   */\n      add\n        /* \"#utility.yul\":6375:6381   */\n      dup6\n        /* \"#utility.yul\":6331:6402   */\n      tag_112\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":6412:6484   */\n      tag_193\n        /* \"#utility.yul\":6480:6482   */\n      0x20\n        /* \"#utility.yul\":6469:6478   */\n      dup4\n        /* \"#utility.yul\":6465:6483   */\n      add\n        /* \"#utility.yul\":6456:6462   */\n      dup5\n        /* \"#utility.yul\":6412:6484   */\n      tag_103\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":6159:6491   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6497:6587   */\n    tag_113:\n        /* \"#utility.yul\":6531:6538   */\n      0x00\n        /* \"#utility.yul\":6574:6579   */\n      dup2\n        /* \"#utility.yul\":6567:6580   */\n      iszero\n        /* \"#utility.yul\":6560:6581   */\n      iszero\n        /* \"#utility.yul\":6549:6581   */\n      swap1\n      pop\n        /* \"#utility.yul\":6497:6587   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6593:6709   */\n    tag_114:\n        /* \"#utility.yul\":6663:6684   */\n      tag_196\n        /* \"#utility.yul\":6678:6683   */\n      dup2\n        /* \"#utility.yul\":6663:6684   */\n      tag_113\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":6656:6661   */\n      dup2\n        /* \"#utility.yul\":6653:6685   */\n      eq\n        /* \"#utility.yul\":6643:6703   */\n      tag_197\n      jumpi\n        /* \"#utility.yul\":6699:6700   */\n      0x00\n        /* \"#utility.yul\":6696:6697   */\n      dup1\n        /* \"#utility.yul\":6689:6701   */\n      revert\n        /* \"#utility.yul\":6643:6703   */\n    tag_197:\n        /* \"#utility.yul\":6593:6709   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6715:6852   */\n    tag_115:\n        /* \"#utility.yul\":6769:6774   */\n      0x00\n        /* \"#utility.yul\":6800:6806   */\n      dup2\n        /* \"#utility.yul\":6794:6807   */\n      mload\n        /* \"#utility.yul\":6785:6807   */\n      swap1\n      pop\n        /* \"#utility.yul\":6816:6846   */\n      tag_199\n        /* \"#utility.yul\":6840:6845   */\n      dup2\n        /* \"#utility.yul\":6816:6846   */\n      tag_114\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":6715:6852   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6858:7203   */\n    tag_51:\n        /* \"#utility.yul\":6925:6931   */\n      0x00\n        /* \"#utility.yul\":6974:6976   */\n      0x20\n        /* \"#utility.yul\":6962:6971   */\n      dup3\n        /* \"#utility.yul\":6953:6960   */\n      dup5\n        /* \"#utility.yul\":6949:6972   */\n      sub\n        /* \"#utility.yul\":6945:6977   */\n      slt\n        /* \"#utility.yul\":6942:7061   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":6980:7059   */\n      tag_202\n      tag_98\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":6942:7061   */\n    tag_201:\n        /* \"#utility.yul\":7100:7101   */\n      0x00\n        /* \"#utility.yul\":7125:7186   */\n      tag_203\n        /* \"#utility.yul\":7178:7185   */\n      dup5\n        /* \"#utility.yul\":7169:7175   */\n      dup3\n        /* \"#utility.yul\":7158:7167   */\n      dup6\n        /* \"#utility.yul\":7154:7176   */\n      add\n        /* \"#utility.yul\":7125:7186   */\n      tag_115\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":7115:7186   */\n      swap2\n      pop\n        /* \"#utility.yul\":7071:7196   */\n      pop\n        /* \"#utility.yul\":6858:7203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7209:7541   */\n    tag_60:\n        /* \"#utility.yul\":7330:7334   */\n      0x00\n        /* \"#utility.yul\":7368:7370   */\n      0x40\n        /* \"#utility.yul\":7357:7366   */\n      dup3\n        /* \"#utility.yul\":7353:7371   */\n      add\n        /* \"#utility.yul\":7345:7371   */\n      swap1\n      pop\n        /* \"#utility.yul\":7381:7452   */\n      tag_205\n        /* \"#utility.yul\":7449:7450   */\n      0x00\n        /* \"#utility.yul\":7438:7447   */\n      dup4\n        /* \"#utility.yul\":7434:7451   */\n      add\n        /* \"#utility.yul\":7425:7431   */\n      dup6\n        /* \"#utility.yul\":7381:7452   */\n      tag_103\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":7462:7534   */\n      tag_206\n        /* \"#utility.yul\":7530:7532   */\n      0x20\n        /* \"#utility.yul\":7519:7528   */\n      dup4\n        /* \"#utility.yul\":7515:7533   */\n      add\n        /* \"#utility.yul\":7506:7512   */\n      dup5\n        /* \"#utility.yul\":7462:7534   */\n      tag_103\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":7209:7541   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7547:7769   */\n    tag_71:\n        /* \"#utility.yul\":7640:7644   */\n      0x00\n        /* \"#utility.yul\":7678:7680   */\n      0x20\n        /* \"#utility.yul\":7667:7676   */\n      dup3\n        /* \"#utility.yul\":7663:7681   */\n      add\n        /* \"#utility.yul\":7655:7681   */\n      swap1\n      pop\n        /* \"#utility.yul\":7691:7762   */\n      tag_208\n        /* \"#utility.yul\":7759:7760   */\n      0x00\n        /* \"#utility.yul\":7748:7757   */\n      dup4\n        /* \"#utility.yul\":7744:7761   */\n      add\n        /* \"#utility.yul\":7735:7741   */\n      dup5\n        /* \"#utility.yul\":7691:7762   */\n      tag_112\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":7547:7769   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7775:7918   */\n    tag_116:\n        /* \"#utility.yul\":7832:7837   */\n      0x00\n        /* \"#utility.yul\":7863:7869   */\n      dup2\n        /* \"#utility.yul\":7857:7870   */\n      mload\n        /* \"#utility.yul\":7848:7870   */\n      swap1\n      pop\n        /* \"#utility.yul\":7879:7912   */\n      tag_210\n        /* \"#utility.yul\":7906:7911   */\n      dup2\n        /* \"#utility.yul\":7879:7912   */\n      tag_101\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":7775:7918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7924:8275   */\n    tag_75:\n        /* \"#utility.yul\":7994:8000   */\n      0x00\n        /* \"#utility.yul\":8043:8045   */\n      0x20\n        /* \"#utility.yul\":8031:8040   */\n      dup3\n        /* \"#utility.yul\":8022:8029   */\n      dup5\n        /* \"#utility.yul\":8018:8041   */\n      sub\n        /* \"#utility.yul\":8014:8046   */\n      slt\n        /* \"#utility.yul\":8011:8130   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":8049:8128   */\n      tag_213\n      tag_98\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":8011:8130   */\n    tag_212:\n        /* \"#utility.yul\":8169:8170   */\n      0x00\n        /* \"#utility.yul\":8194:8258   */\n      tag_214\n        /* \"#utility.yul\":8250:8257   */\n      dup5\n        /* \"#utility.yul\":8241:8247   */\n      dup3\n        /* \"#utility.yul\":8230:8239   */\n      dup6\n        /* \"#utility.yul\":8226:8248   */\n      add\n        /* \"#utility.yul\":8194:8258   */\n      tag_116\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":8184:8258   */\n      swap2\n      pop\n        /* \"#utility.yul\":8140:8268   */\n      pop\n        /* \"#utility.yul\":7924:8275   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8281:8451   */\n    tag_117:\n        /* \"#utility.yul\":8421:8443   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":8417:8418   */\n      0x00\n        /* \"#utility.yul\":8409:8415   */\n      dup3\n        /* \"#utility.yul\":8405:8419   */\n      add\n        /* \"#utility.yul\":8398:8444   */\n      mstore\n        /* \"#utility.yul\":8281:8451   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8457:8823   */\n    tag_118:\n        /* \"#utility.yul\":8599:8602   */\n      0x00\n        /* \"#utility.yul\":8620:8687   */\n      tag_217\n        /* \"#utility.yul\":8684:8686   */\n      0x14\n        /* \"#utility.yul\":8679:8682   */\n      dup4\n        /* \"#utility.yul\":8620:8687   */\n      tag_104\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":8613:8687   */\n      swap2\n      pop\n        /* \"#utility.yul\":8696:8789   */\n      tag_218\n        /* \"#utility.yul\":8785:8788   */\n      dup3\n        /* \"#utility.yul\":8696:8789   */\n      tag_117\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":8814:8816   */\n      0x20\n        /* \"#utility.yul\":8809:8812   */\n      dup3\n        /* \"#utility.yul\":8805:8817   */\n      add\n        /* \"#utility.yul\":8798:8817   */\n      swap1\n      pop\n        /* \"#utility.yul\":8457:8823   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8829:9248   */\n    tag_78:\n        /* \"#utility.yul\":8995:8999   */\n      0x00\n        /* \"#utility.yul\":9033:9035   */\n      0x20\n        /* \"#utility.yul\":9022:9031   */\n      dup3\n        /* \"#utility.yul\":9018:9036   */\n      add\n        /* \"#utility.yul\":9010:9036   */\n      swap1\n      pop\n        /* \"#utility.yul\":9082:9091   */\n      dup2\n        /* \"#utility.yul\":9076:9080   */\n      dup2\n        /* \"#utility.yul\":9072:9092   */\n      sub\n        /* \"#utility.yul\":9068:9069   */\n      0x00\n        /* \"#utility.yul\":9057:9066   */\n      dup4\n        /* \"#utility.yul\":9053:9070   */\n      add\n        /* \"#utility.yul\":9046:9093   */\n      mstore\n        /* \"#utility.yul\":9110:9241   */\n      tag_220\n        /* \"#utility.yul\":9236:9240   */\n      dup2\n        /* \"#utility.yul\":9110:9241   */\n      tag_118\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":9102:9241   */\n      swap1\n      pop\n        /* \"#utility.yul\":8829:9248   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9254:9696   */\n    tag_80:\n        /* \"#utility.yul\":9403:9407   */\n      0x00\n        /* \"#utility.yul\":9441:9443   */\n      0x60\n        /* \"#utility.yul\":9430:9439   */\n      dup3\n        /* \"#utility.yul\":9426:9444   */\n      add\n        /* \"#utility.yul\":9418:9444   */\n      swap1\n      pop\n        /* \"#utility.yul\":9454:9525   */\n      tag_222\n        /* \"#utility.yul\":9522:9523   */\n      0x00\n        /* \"#utility.yul\":9511:9520   */\n      dup4\n        /* \"#utility.yul\":9507:9524   */\n      add\n        /* \"#utility.yul\":9498:9504   */\n      dup7\n        /* \"#utility.yul\":9454:9525   */\n      tag_112\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":9535:9607   */\n      tag_223\n        /* \"#utility.yul\":9603:9605   */\n      0x20\n        /* \"#utility.yul\":9592:9601   */\n      dup4\n        /* \"#utility.yul\":9588:9606   */\n      add\n        /* \"#utility.yul\":9579:9585   */\n      dup6\n        /* \"#utility.yul\":9535:9607   */\n      tag_112\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":9617:9689   */\n      tag_224\n        /* \"#utility.yul\":9685:9687   */\n      0x40\n        /* \"#utility.yul\":9674:9683   */\n      dup4\n        /* \"#utility.yul\":9670:9688   */\n      add\n        /* \"#utility.yul\":9661:9667   */\n      dup5\n        /* \"#utility.yul\":9617:9689   */\n      tag_103\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":9254:9696   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220df3f0218023f5d2b2ff3ed31c9a5a9154639c96fc6b05581671ef8e459e301ee64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_436": {
									"entryPoint": null,
									"id": 436,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 201,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:3",
														"type": ""
													}
												],
												"src": "696:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:3"
															},
															"nodeType": "YulIf",
															"src": "932:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:3",
														"type": ""
													}
												],
												"src": "845:351:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526402540be400600255606460045534801561001e57600080fd5b5060405162001006380380620010068339818101604052810190610042919061012c565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610159565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100f9826100ce565b9050919050565b610109816100ee565b811461011457600080fd5b50565b60008151905061012681610100565b92915050565b600060208284031215610142576101416100c9565b5b600061015084828501610117565b91505092915050565b610e9d80620001696000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630fc63d10146100675780631928c749146100855780632e17de78146100a3578063725cedd3146100bf57806391b780ea146100dd578063a694fc3a146100fb575b600080fd5b61006f610117565b60405161007c91906109c0565b60405180910390f35b61008d61013b565b60405161009a91906109c0565b60405180910390f35b6100bd60048036038101906100b89190610a16565b610161565b005b6100c761052a565b6040516100d49190610a52565b60405180910390f35b6100e56105e4565b6040516100f29190610a52565b60405180910390f35b61011560048036038101906101109190610a16565b61062b565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081116101a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019b90610aca565b60405180910390fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610226576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021d90610b36565b60405180910390fd5b60006064600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054426102759190610b85565b61027f9190610be8565b9050600081600454600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546102d19190610c19565b6102db9190610c19565b9050806003546102eb9190610c5b565b60038190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b815260040161034c929190610cb0565b6020604051808303816000875af115801561036b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038f9190610d11565b506103e283600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461091590919063ffffffff16565b506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600354600254106104d557600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610490929190610cb0565b6020604051808303816000875af11580156104af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d39190610d11565b505b3373ffffffffffffffffffffffffffffffffffffffff167f7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e848360405161051d929190610d3e565b60405180910390a2505050565b6000806064600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020544261057a9190610b85565b6105849190610be8565b905080600454600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105d49190610c19565b6105de9190610c19565b91505090565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000811161066e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066590610aca565b60405180910390fd5b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016106c89190610d67565b602060405180830381865afa1580156106e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107099190610d97565b101561074a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074190610e10565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016107a793929190610e30565b6020604051808303816000875af11580156107c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ea9190610d11565b5061083d81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461092b90919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d8260405161090a9190610a52565b60405180910390a250565b600081836109239190610b85565b905092915050565b600081836109399190610c5b565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061098661098161097c84610941565b610961565b610941565b9050919050565b60006109988261096b565b9050919050565b60006109aa8261098d565b9050919050565b6109ba8161099f565b82525050565b60006020820190506109d560008301846109b1565b92915050565b600080fd5b6000819050919050565b6109f3816109e0565b81146109fe57600080fd5b50565b600081359050610a10816109ea565b92915050565b600060208284031215610a2c57610a2b6109db565b5b6000610a3a84828501610a01565b91505092915050565b610a4c816109e0565b82525050565b6000602082019050610a676000830184610a43565b92915050565b600082825260208201905092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f600082015250565b6000610ab4602083610a6d565b9150610abf82610a7e565b602082019050919050565b60006020820190508181036000830152610ae381610aa7565b9050919050565b7f496e73756666696369656e74207374616b65642062616c616e63650000000000600082015250565b6000610b20601b83610a6d565b9150610b2b82610aea565b602082019050919050565b60006020820190508181036000830152610b4f81610b13565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b90826109e0565b9150610b9b836109e0565b9250828203905081811115610bb357610bb2610b56565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bf3826109e0565b9150610bfe836109e0565b925082610c0e57610c0d610bb9565b5b828204905092915050565b6000610c24826109e0565b9150610c2f836109e0565b9250828202610c3d816109e0565b91508282048414831517610c5457610c53610b56565b5b5092915050565b6000610c66826109e0565b9150610c71836109e0565b9250828201905080821115610c8957610c88610b56565b5b92915050565b6000610c9a82610941565b9050919050565b610caa81610c8f565b82525050565b6000604082019050610cc56000830185610ca1565b610cd26020830184610a43565b9392505050565b60008115159050919050565b610cee81610cd9565b8114610cf957600080fd5b50565b600081519050610d0b81610ce5565b92915050565b600060208284031215610d2757610d266109db565b5b6000610d3584828501610cfc565b91505092915050565b6000604082019050610d536000830185610a43565b610d606020830184610a43565b9392505050565b6000602082019050610d7c6000830184610ca1565b92915050565b600081519050610d91816109ea565b92915050565b600060208284031215610dad57610dac6109db565b5b6000610dbb84828501610d82565b91505092915050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000610dfa601483610a6d565b9150610e0582610dc4565b602082019050919050565b60006020820190508181036000830152610e2981610ded565b9050919050565b6000606082019050610e456000830186610ca1565b610e526020830185610ca1565b610e5f6040830184610a43565b94935050505056fea2646970667358221220df3f0218023f5d2b2ff3ed31c9a5a9154639c96fc6b05581671ef8e459e301ee64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH5 0x2540BE400 PUSH1 0x2 SSTORE PUSH1 0x64 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1006 CODESIZE SUB DUP1 PUSH3 0x1006 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x159 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF9 DUP3 PUSH2 0xCE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x109 DUP2 PUSH2 0xEE JUMP JUMPDEST DUP2 EQ PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x126 DUP2 PUSH2 0x100 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x142 JUMPI PUSH2 0x141 PUSH2 0xC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x150 DUP5 DUP3 DUP6 ADD PUSH2 0x117 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE9D DUP1 PUSH3 0x169 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xFC63D10 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x1928C749 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x725CEDD3 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x91B780EA EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0xFB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x117 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x9C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH2 0x13B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x9C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0xA16 JUMP JUMPDEST PUSH2 0x161 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC7 PUSH2 0x52A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0xA52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE5 PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0xA52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x115 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x110 SWAP2 SWAP1 PUSH2 0xA16 JUMP JUMPDEST PUSH2 0x62B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B SWAP1 PUSH2 0xACA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x226 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21D SWAP1 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x275 SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST PUSH2 0x27F SWAP2 SWAP1 PUSH2 0xBE8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0xC19 JUMP JUMPDEST PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0xC19 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 SLOAD PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0xC5B JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34C SWAP3 SWAP2 SWAP1 PUSH2 0xCB0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x36B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38F SWAP2 SWAP1 PUSH2 0xD11 JUMP JUMPDEST POP PUSH2 0x3E2 DUP4 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x915 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD LT PUSH2 0x4D5 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x490 SWAP3 SWAP2 SWAP1 PUSH2 0xCB0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0xD11 JUMP JUMPDEST POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7FC4727E062E336010F2C282598EF5F14FACB3DE68CF8195C2F23E1454B2B74E DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x51D SWAP3 SWAP2 SWAP1 PUSH2 0xD3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x64 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x57A SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST PUSH2 0x584 SWAP2 SWAP1 PUSH2 0xBE8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x5D4 SWAP2 SWAP1 PUSH2 0xC19 JUMP JUMPDEST PUSH2 0x5DE SWAP2 SWAP1 PUSH2 0xC19 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x66E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x665 SWAP1 PUSH2 0xACA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C8 SWAP2 SWAP1 PUSH2 0xD67 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x709 SWAP2 SWAP1 PUSH2 0xD97 JUMP JUMPDEST LT ISZERO PUSH2 0x74A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x741 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7EA SWAP2 SWAP1 PUSH2 0xD11 JUMP JUMPDEST POP PUSH2 0x83D DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x92B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP3 PUSH1 0x40 MLOAD PUSH2 0x90A SWAP2 SWAP1 PUSH2 0xA52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x923 SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x939 SWAP2 SWAP1 PUSH2 0xC5B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x986 PUSH2 0x981 PUSH2 0x97C DUP5 PUSH2 0x941 JUMP JUMPDEST PUSH2 0x961 JUMP JUMPDEST PUSH2 0x941 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x998 DUP3 PUSH2 0x96B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AA DUP3 PUSH2 0x98D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9BA DUP2 PUSH2 0x99F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F3 DUP2 PUSH2 0x9E0 JUMP JUMPDEST DUP2 EQ PUSH2 0x9FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA10 DUP2 PUSH2 0x9EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA2C JUMPI PUSH2 0xA2B PUSH2 0x9DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA3A DUP5 DUP3 DUP6 ADD PUSH2 0xA01 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA4C DUP2 PUSH2 0x9E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA67 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB4 PUSH1 0x20 DUP4 PUSH2 0xA6D JUMP JUMPDEST SWAP2 POP PUSH2 0xABF DUP3 PUSH2 0xA7E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAE3 DUP2 PUSH2 0xAA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207374616B65642062616C616E63650000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB20 PUSH1 0x1B DUP4 PUSH2 0xA6D JUMP JUMPDEST SWAP2 POP PUSH2 0xB2B DUP3 PUSH2 0xAEA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB4F DUP2 PUSH2 0xB13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB90 DUP3 PUSH2 0x9E0 JUMP JUMPDEST SWAP2 POP PUSH2 0xB9B DUP4 PUSH2 0x9E0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xBB3 JUMPI PUSH2 0xBB2 PUSH2 0xB56 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBF3 DUP3 PUSH2 0x9E0 JUMP JUMPDEST SWAP2 POP PUSH2 0xBFE DUP4 PUSH2 0x9E0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xC0E JUMPI PUSH2 0xC0D PUSH2 0xBB9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC24 DUP3 PUSH2 0x9E0 JUMP JUMPDEST SWAP2 POP PUSH2 0xC2F DUP4 PUSH2 0x9E0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xC3D DUP2 PUSH2 0x9E0 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xC54 JUMPI PUSH2 0xC53 PUSH2 0xB56 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC66 DUP3 PUSH2 0x9E0 JUMP JUMPDEST SWAP2 POP PUSH2 0xC71 DUP4 PUSH2 0x9E0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC89 JUMPI PUSH2 0xC88 PUSH2 0xB56 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9A DUP3 PUSH2 0x941 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCAA DUP2 PUSH2 0xC8F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCC5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xCA1 JUMP JUMPDEST PUSH2 0xCD2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA43 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCEE DUP2 PUSH2 0xCD9 JUMP JUMPDEST DUP2 EQ PUSH2 0xCF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD0B DUP2 PUSH2 0xCE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD27 JUMPI PUSH2 0xD26 PUSH2 0x9DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD35 DUP5 DUP3 DUP6 ADD PUSH2 0xCFC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD53 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xA43 JUMP JUMPDEST PUSH2 0xD60 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA43 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD7C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD91 DUP2 PUSH2 0x9EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAD JUMPI PUSH2 0xDAC PUSH2 0x9DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDBB DUP5 DUP3 DUP6 ADD PUSH2 0xD82 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDFA PUSH1 0x14 DUP4 PUSH2 0xA6D JUMP JUMPDEST SWAP2 POP PUSH2 0xE05 DUP3 PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE29 DUP2 PUSH2 0xDED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE45 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xCA1 JUMP JUMPDEST PUSH2 0xE52 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCA1 JUMP JUMPDEST PUSH2 0xE5F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA43 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF EXTCODEHASH MUL XOR MUL EXTCODEHASH 0x5D 0x2B 0x2F RETURN 0xED BALANCE 0xC9 0xA5 0xA9 ISZERO CHAINID CODECOPY 0xC9 PUSH16 0xC6B05581671EF8E459E301EE64736F6C PUSH4 0x43000813 STOP CALLER ",
							"sourceMap": "180:2635:2:-:0;;;327:11;307:31;;426:3;405:24;;698:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;754:7;738:6;;:24;;;;;;;;;;;;;;;;;;795:7;773:12;;:30;;;;;;;;;;;;;;;;;;698:113;180:2635;;88:117:3;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;180:2635:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Checkstake_633": {
									"entryPoint": 1508,
									"id": 633,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@add_253": {
									"entryPoint": 2347,
									"id": 253,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@calculateReward_622": {
									"entryPoint": 1322,
									"id": 622,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@stake_499": {
									"entryPoint": 1579,
									"id": 499,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sub_268": {
									"entryPoint": 2325,
									"id": 268,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tokenA_399": {
									"entryPoint": 279,
									"id": 399,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenAreward_402": {
									"entryPoint": 315,
									"id": 402,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unstake_594": {
									"entryPoint": 353,
									"id": 594,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3345,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack": {
									"entryPoint": 2481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3632,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3248,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed": {
									"entryPoint": 2496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3390,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3289,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$77_to_t_address": {
									"entryPoint": 2463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2902,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3001,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2523,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887": {
									"entryPoint": 2686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 3524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2": {
									"entryPoint": 2794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9699:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "171:28:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "181:12:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "188:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "181:3:3"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "157:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "167:3:3",
														"type": ""
													}
												],
												"src": "139:60:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "265:82:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "275:66:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "333:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "315:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "315:24:3"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "306:8:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "306:34:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "288:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "288:53:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "275:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "245:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "255:9:3",
														"type": ""
													}
												],
												"src": "205:142:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "413:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "423:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "467:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "436:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "436:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "423:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "393:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "403:9:3",
														"type": ""
													}
												],
												"src": "353:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "558:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "568:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "612:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "581:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "581:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "568:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "538:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "548:9:3",
														"type": ""
													}
												],
												"src": "485:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "708:79:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "725:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "774:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$77_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "730:43:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "730:50:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "718:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "718:63:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "718:63:3"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "696:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "703:3:3",
														"type": ""
													}
												],
												"src": "630:157:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "904:137:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "914:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "926:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "922:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "914:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1007:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1020:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1031:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1016:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "950:56:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "950:84:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "950:84:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "876:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "888:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "899:4:3",
														"type": ""
													}
												],
												"src": "793:248:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1087:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1097:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1113:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1097:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1080:6:3",
														"type": ""
													}
												],
												"src": "1047:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1217:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1234:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1237:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1227:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1227:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1227:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1128:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1340:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1357:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1360:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1350:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1350:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1350:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1251:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1419:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1429:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1440:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1429:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1401:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1411:7:3",
														"type": ""
													}
												],
												"src": "1374:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1500:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1557:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1566:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1569:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1559:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1559:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1559:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1523:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1548:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1530:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1530:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1520:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1520:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1513:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1513:43:3"
															},
															"nodeType": "YulIf",
															"src": "1510:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1493:5:3",
														"type": ""
													}
												],
												"src": "1457:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1637:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1647:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1669:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1656:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1656:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1647:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1712:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1685:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1685:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1685:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1615:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1623:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1631:5:3",
														"type": ""
													}
												],
												"src": "1585:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1796:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1842:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1844:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1844:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1844:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1817:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1826:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1813:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1813:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1838:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1809:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:32:3"
															},
															"nodeType": "YulIf",
															"src": "1806:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1935:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1950:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1964:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1954:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1979:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2014:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2025:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2010:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2010:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2034:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1989:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1989:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1979:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1766:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1777:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1789:6:3",
														"type": ""
													}
												],
												"src": "1730:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2130:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2147:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2170:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2152:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2152:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2140:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2140:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2140:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2118:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2125:3:3",
														"type": ""
													}
												],
												"src": "2065:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2287:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2297:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2309:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2320:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2305:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2305:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2297:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2377:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2390:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2401:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2386:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2386:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2333:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2333:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2333:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2259:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2271:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2282:4:3",
														"type": ""
													}
												],
												"src": "2189:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2513:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2530:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2535:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2523:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2523:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2523:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2551:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2570:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2575:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2566:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2566:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2551:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2485:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2490:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2501:11:3",
														"type": ""
													}
												],
												"src": "2417:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2698:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2720:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2728:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2716:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2716:14:3"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2732:34:3",
																		"type": "",
																		"value": "Amount must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2709:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2709:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2709:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2690:6:3",
														"type": ""
													}
												],
												"src": "2592:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2926:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2936:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3002:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3007:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2943:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2943:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2936:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3108:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																	"nodeType": "YulIdentifier",
																	"src": "3019:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3019:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3019:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3121:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3132:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3137:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3128:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3128:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3121:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2914:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2922:3:3",
														"type": ""
													}
												],
												"src": "2780:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3323:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3333:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3345:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3356:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3341:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3341:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3333:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3380:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3391:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3376:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3376:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3399:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3405:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3395:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3395:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3369:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3369:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3369:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3425:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3559:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3433:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3433:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3425:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3303:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3318:4:3",
														"type": ""
													}
												],
												"src": "3152:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3683:71:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3705:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3713:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3701:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3701:14:3"
																	},
																	{
																		"hexValue": "496e73756666696369656e74207374616b65642062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3717:29:3",
																		"type": "",
																		"value": "Insufficient staked balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3694:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3694:53:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3694:53:3"
														}
													]
												},
												"name": "store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3675:6:3",
														"type": ""
													}
												],
												"src": "3577:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3906:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3916:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3982:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3987:2:3",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3923:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3923:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3916:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4088:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
																	"nodeType": "YulIdentifier",
																	"src": "3999:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3999:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3999:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4101:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4112:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4117:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4108:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4108:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4101:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3894:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3902:3:3",
														"type": ""
													}
												],
												"src": "3760:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4303:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4313:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4325:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4336:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4321:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4321:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4313:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4360:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4371:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4356:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4356:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4379:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4385:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4375:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4375:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4349:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4349:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4349:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4405:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4539:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4413:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4413:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4405:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4283:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4298:4:3",
														"type": ""
													}
												],
												"src": "4132:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4585:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4602:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4605:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4595:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4595:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4595:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4699:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4702:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4692:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4692:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4723:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4726:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4716:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4716:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4716:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4557:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4788:149:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4798:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4821:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4803:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4803:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4798:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4832:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4855:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4837:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4837:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4832:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4866:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4878:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4881:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4874:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4874:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4866:4:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4908:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4910:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4910:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4910:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "4899:4:3"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4905:1:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4896:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4896:11:3"
															},
															"nodeType": "YulIf",
															"src": "4893:37:3"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4774:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4777:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4783:4:3",
														"type": ""
													}
												],
												"src": "4743:194:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4971:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4988:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4991:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4981:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4981:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4981:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5085:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5088:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5078:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5078:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5078:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5109:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5112:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5102:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5102:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5102:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "4943:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5171:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5181:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5204:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5186:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5186:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5181:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5215:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5238:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5220:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5220:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5215:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5262:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "5264:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5264:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5264:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5259:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5252:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5252:9:3"
															},
															"nodeType": "YulIf",
															"src": "5249:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5294:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5303:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5306:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5299:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5299:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5294:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5160:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5163:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "5169:1:3",
														"type": ""
													}
												],
												"src": "5129:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5368:362:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5378:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5401:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5383:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5383:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5378:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5412:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5435:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5417:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5417:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5412:1:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5446:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5469:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5472:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5465:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5465:9:3"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "5450:11:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5483:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "5512:11:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5494:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5494:30:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5483:7:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5701:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5703:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5703:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5703:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5634:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5627:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5627:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "5657:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "5664:7:3"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "5673:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "5660:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5660:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "5654:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5654:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "5607:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5607:83:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5587:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5587:113:3"
															},
															"nodeType": "YulIf",
															"src": "5584:139:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5351:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5354:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "5360:7:3",
														"type": ""
													}
												],
												"src": "5320:410:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5780:147:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5790:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5813:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5795:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5795:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5790:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5824:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5847:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5829:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5829:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5824:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5858:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5869:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5872:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5865:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5865:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5858:3:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5898:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5900:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5900:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5900:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5890:1:3"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "5893:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5887:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5887:10:3"
															},
															"nodeType": "YulIf",
															"src": "5884:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5767:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5770:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5776:3:3",
														"type": ""
													}
												],
												"src": "5736:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5978:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5988:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6017:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5999:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5999:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5988:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5960:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5970:7:3",
														"type": ""
													}
												],
												"src": "5933:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6100:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6117:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6140:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6122:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6122:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6110:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6110:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6110:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6088:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6095:3:3",
														"type": ""
													}
												],
												"src": "6035:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6285:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6295:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6307:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6318:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6303:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6303:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6295:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6375:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6388:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6399:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6384:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6384:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6331:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6331:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6331:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6456:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6469:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6480:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6465:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6465:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6412:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6412:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6412:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6249:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6261:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6269:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6280:4:3",
														"type": ""
													}
												],
												"src": "6159:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6539:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6549:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6574:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6567:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6567:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6560:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6560:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6549:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6521:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6531:7:3",
														"type": ""
													}
												],
												"src": "6497:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6633:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6687:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6696:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6699:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6689:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6689:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6689:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6656:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6678:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6663:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6663:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6653:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6653:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6646:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6646:40:3"
															},
															"nodeType": "YulIf",
															"src": "6643:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6626:5:3",
														"type": ""
													}
												],
												"src": "6593:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6775:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6785:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6800:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6794:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6794:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6785:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6840:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6816:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6816:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6816:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6753:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6761:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6769:5:3",
														"type": ""
													}
												],
												"src": "6715:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6932:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6978:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6980:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6980:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6980:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6953:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6962:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6949:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6949:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6974:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6945:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6945:32:3"
															},
															"nodeType": "YulIf",
															"src": "6942:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "7071:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7086:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7100:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7090:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7115:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7158:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7169:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7154:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7154:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7178:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7125:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7125:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7115:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6902:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6913:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6925:6:3",
														"type": ""
													}
												],
												"src": "6858:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7335:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7345:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7357:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7368:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7353:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7353:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7345:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7425:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7438:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7449:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7434:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7434:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7381:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7381:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7381:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7506:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7519:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7530:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7515:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7515:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7462:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7462:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7462:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7299:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7311:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7319:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7330:4:3",
														"type": ""
													}
												],
												"src": "7209:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7645:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7655:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7667:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7678:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7663:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7663:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7655:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7735:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7748:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7759:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7744:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7744:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7691:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7691:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7691:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7617:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7629:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7640:4:3",
														"type": ""
													}
												],
												"src": "7547:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7838:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7848:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7863:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7857:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7857:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7848:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7906:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7879:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7879:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7879:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7816:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7824:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7832:5:3",
														"type": ""
													}
												],
												"src": "7775:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8001:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8047:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8049:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8049:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8049:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8022:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8031:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8018:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8018:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8043:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8014:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8014:32:3"
															},
															"nodeType": "YulIf",
															"src": "8011:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "8140:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8155:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8169:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8159:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8184:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8230:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8241:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8226:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8226:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8250:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8194:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8194:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8184:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7971:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7982:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7994:6:3",
														"type": ""
													}
												],
												"src": "7924:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8387:64:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8409:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8417:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8405:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8405:14:3"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8421:22:3",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8398:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8398:46:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8398:46:3"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8379:6:3",
														"type": ""
													}
												],
												"src": "8281:170:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8603:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8613:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8679:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8684:2:3",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8620:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8620:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8613:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8785:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nodeType": "YulIdentifier",
																	"src": "8696:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8696:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8696:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8798:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8809:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8814:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8805:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8805:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8798:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8591:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8599:3:3",
														"type": ""
													}
												],
												"src": "8457:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9000:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9010:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9022:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9033:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9018:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9018:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9010:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9057:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9068:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9053:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9053:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9076:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9082:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9072:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9072:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9046:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9046:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9046:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9102:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9236:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9110:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9110:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9102:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8980:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8995:4:3",
														"type": ""
													}
												],
												"src": "8829:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9408:288:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9418:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9430:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9441:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9426:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9426:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9418:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9498:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9511:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9522:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9507:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9507:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9454:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9454:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9454:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9579:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9592:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9603:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9588:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9588:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9535:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9535:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9535:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9661:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9674:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9685:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9670:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9670:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9617:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9617:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9617:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9364:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9376:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9384:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9392:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9403:4:3",
														"type": ""
													}
												],
												"src": "9254:442:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient staked balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c80630fc63d10146100675780631928c749146100855780632e17de78146100a3578063725cedd3146100bf57806391b780ea146100dd578063a694fc3a146100fb575b600080fd5b61006f610117565b60405161007c91906109c0565b60405180910390f35b61008d61013b565b60405161009a91906109c0565b60405180910390f35b6100bd60048036038101906100b89190610a16565b610161565b005b6100c761052a565b6040516100d49190610a52565b60405180910390f35b6100e56105e4565b6040516100f29190610a52565b60405180910390f35b61011560048036038101906101109190610a16565b61062b565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081116101a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019b90610aca565b60405180910390fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610226576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021d90610b36565b60405180910390fd5b60006064600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054426102759190610b85565b61027f9190610be8565b9050600081600454600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546102d19190610c19565b6102db9190610c19565b9050806003546102eb9190610c5b565b60038190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b815260040161034c929190610cb0565b6020604051808303816000875af115801561036b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038f9190610d11565b506103e283600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461091590919063ffffffff16565b506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600354600254106104d557600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610490929190610cb0565b6020604051808303816000875af11580156104af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d39190610d11565b505b3373ffffffffffffffffffffffffffffffffffffffff167f7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e848360405161051d929190610d3e565b60405180910390a2505050565b6000806064600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020544261057a9190610b85565b6105849190610be8565b905080600454600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105d49190610c19565b6105de9190610c19565b91505090565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000811161066e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066590610aca565b60405180910390fd5b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016106c89190610d67565b602060405180830381865afa1580156106e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107099190610d97565b101561074a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074190610e10565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016107a793929190610e30565b6020604051808303816000875af11580156107c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ea9190610d11565b5061083d81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461092b90919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d8260405161090a9190610a52565b60405180910390a250565b600081836109239190610b85565b905092915050565b600081836109399190610c5b565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061098661098161097c84610941565b610961565b610941565b9050919050565b60006109988261096b565b9050919050565b60006109aa8261098d565b9050919050565b6109ba8161099f565b82525050565b60006020820190506109d560008301846109b1565b92915050565b600080fd5b6000819050919050565b6109f3816109e0565b81146109fe57600080fd5b50565b600081359050610a10816109ea565b92915050565b600060208284031215610a2c57610a2b6109db565b5b6000610a3a84828501610a01565b91505092915050565b610a4c816109e0565b82525050565b6000602082019050610a676000830184610a43565b92915050565b600082825260208201905092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f600082015250565b6000610ab4602083610a6d565b9150610abf82610a7e565b602082019050919050565b60006020820190508181036000830152610ae381610aa7565b9050919050565b7f496e73756666696369656e74207374616b65642062616c616e63650000000000600082015250565b6000610b20601b83610a6d565b9150610b2b82610aea565b602082019050919050565b60006020820190508181036000830152610b4f81610b13565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b90826109e0565b9150610b9b836109e0565b9250828203905081811115610bb357610bb2610b56565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bf3826109e0565b9150610bfe836109e0565b925082610c0e57610c0d610bb9565b5b828204905092915050565b6000610c24826109e0565b9150610c2f836109e0565b9250828202610c3d816109e0565b91508282048414831517610c5457610c53610b56565b5b5092915050565b6000610c66826109e0565b9150610c71836109e0565b9250828201905080821115610c8957610c88610b56565b5b92915050565b6000610c9a82610941565b9050919050565b610caa81610c8f565b82525050565b6000604082019050610cc56000830185610ca1565b610cd26020830184610a43565b9392505050565b60008115159050919050565b610cee81610cd9565b8114610cf957600080fd5b50565b600081519050610d0b81610ce5565b92915050565b600060208284031215610d2757610d266109db565b5b6000610d3584828501610cfc565b91505092915050565b6000604082019050610d536000830185610a43565b610d606020830184610a43565b9392505050565b6000602082019050610d7c6000830184610ca1565b92915050565b600081519050610d91816109ea565b92915050565b600060208284031215610dad57610dac6109db565b5b6000610dbb84828501610d82565b91505092915050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000610dfa601483610a6d565b9150610e0582610dc4565b602082019050919050565b60006020820190508181036000830152610e2981610ded565b9050919050565b6000606082019050610e456000830186610ca1565b610e526020830185610ca1565b610e5f6040830184610a43565b94935050505056fea2646970667358221220df3f0218023f5d2b2ff3ed31c9a5a9154639c96fc6b05581671ef8e459e301ee64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xFC63D10 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x1928C749 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x725CEDD3 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x91B780EA EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0xFB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x117 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x9C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH2 0x13B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x9C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0xA16 JUMP JUMPDEST PUSH2 0x161 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC7 PUSH2 0x52A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0xA52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE5 PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0xA52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x115 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x110 SWAP2 SWAP1 PUSH2 0xA16 JUMP JUMPDEST PUSH2 0x62B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B SWAP1 PUSH2 0xACA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x226 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21D SWAP1 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x275 SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST PUSH2 0x27F SWAP2 SWAP1 PUSH2 0xBE8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0xC19 JUMP JUMPDEST PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0xC19 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 SLOAD PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0xC5B JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34C SWAP3 SWAP2 SWAP1 PUSH2 0xCB0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x36B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38F SWAP2 SWAP1 PUSH2 0xD11 JUMP JUMPDEST POP PUSH2 0x3E2 DUP4 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x915 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD LT PUSH2 0x4D5 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x490 SWAP3 SWAP2 SWAP1 PUSH2 0xCB0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0xD11 JUMP JUMPDEST POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7FC4727E062E336010F2C282598EF5F14FACB3DE68CF8195C2F23E1454B2B74E DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x51D SWAP3 SWAP2 SWAP1 PUSH2 0xD3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x64 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x57A SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST PUSH2 0x584 SWAP2 SWAP1 PUSH2 0xBE8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x5D4 SWAP2 SWAP1 PUSH2 0xC19 JUMP JUMPDEST PUSH2 0x5DE SWAP2 SWAP1 PUSH2 0xC19 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x66E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x665 SWAP1 PUSH2 0xACA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C8 SWAP2 SWAP1 PUSH2 0xD67 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x709 SWAP2 SWAP1 PUSH2 0xD97 JUMP JUMPDEST LT ISZERO PUSH2 0x74A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x741 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7EA SWAP2 SWAP1 PUSH2 0xD11 JUMP JUMPDEST POP PUSH2 0x83D DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x92B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP3 PUSH1 0x40 MLOAD PUSH2 0x90A SWAP2 SWAP1 PUSH2 0xA52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x923 SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x939 SWAP2 SWAP1 PUSH2 0xC5B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x986 PUSH2 0x981 PUSH2 0x97C DUP5 PUSH2 0x941 JUMP JUMPDEST PUSH2 0x961 JUMP JUMPDEST PUSH2 0x941 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x998 DUP3 PUSH2 0x96B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AA DUP3 PUSH2 0x98D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9BA DUP2 PUSH2 0x99F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F3 DUP2 PUSH2 0x9E0 JUMP JUMPDEST DUP2 EQ PUSH2 0x9FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA10 DUP2 PUSH2 0x9EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA2C JUMPI PUSH2 0xA2B PUSH2 0x9DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA3A DUP5 DUP3 DUP6 ADD PUSH2 0xA01 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA4C DUP2 PUSH2 0x9E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA67 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB4 PUSH1 0x20 DUP4 PUSH2 0xA6D JUMP JUMPDEST SWAP2 POP PUSH2 0xABF DUP3 PUSH2 0xA7E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAE3 DUP2 PUSH2 0xAA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207374616B65642062616C616E63650000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB20 PUSH1 0x1B DUP4 PUSH2 0xA6D JUMP JUMPDEST SWAP2 POP PUSH2 0xB2B DUP3 PUSH2 0xAEA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB4F DUP2 PUSH2 0xB13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB90 DUP3 PUSH2 0x9E0 JUMP JUMPDEST SWAP2 POP PUSH2 0xB9B DUP4 PUSH2 0x9E0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xBB3 JUMPI PUSH2 0xBB2 PUSH2 0xB56 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBF3 DUP3 PUSH2 0x9E0 JUMP JUMPDEST SWAP2 POP PUSH2 0xBFE DUP4 PUSH2 0x9E0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xC0E JUMPI PUSH2 0xC0D PUSH2 0xBB9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC24 DUP3 PUSH2 0x9E0 JUMP JUMPDEST SWAP2 POP PUSH2 0xC2F DUP4 PUSH2 0x9E0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xC3D DUP2 PUSH2 0x9E0 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xC54 JUMPI PUSH2 0xC53 PUSH2 0xB56 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC66 DUP3 PUSH2 0x9E0 JUMP JUMPDEST SWAP2 POP PUSH2 0xC71 DUP4 PUSH2 0x9E0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC89 JUMPI PUSH2 0xC88 PUSH2 0xB56 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9A DUP3 PUSH2 0x941 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCAA DUP2 PUSH2 0xC8F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCC5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xCA1 JUMP JUMPDEST PUSH2 0xCD2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA43 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCEE DUP2 PUSH2 0xCD9 JUMP JUMPDEST DUP2 EQ PUSH2 0xCF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD0B DUP2 PUSH2 0xCE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD27 JUMPI PUSH2 0xD26 PUSH2 0x9DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD35 DUP5 DUP3 DUP6 ADD PUSH2 0xCFC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD53 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xA43 JUMP JUMPDEST PUSH2 0xD60 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA43 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD7C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD91 DUP2 PUSH2 0x9EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAD JUMPI PUSH2 0xDAC PUSH2 0x9DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDBB DUP5 DUP3 DUP6 ADD PUSH2 0xD82 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDFA PUSH1 0x14 DUP4 PUSH2 0xA6D JUMP JUMPDEST SWAP2 POP PUSH2 0xE05 DUP3 PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE29 DUP2 PUSH2 0xDED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE45 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xCA1 JUMP JUMPDEST PUSH2 0xE52 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCA1 JUMP JUMPDEST PUSH2 0xE5F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA43 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF EXTCODEHASH MUL XOR MUL EXTCODEHASH 0x5D 0x2B 0x2F RETURN 0xED BALANCE 0xC9 0xA5 0xA9 ISZERO CHAINID CODECOPY 0xC9 PUSH16 0xC6B05581671EF8E459E301EE64736F6C PUSH4 0x43000813 STOP CALLER ",
							"sourceMap": "180:2635:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;247:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;274:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1413:890;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2311:243;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2562:110;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;819:586;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;247:20;;;;;;;;;;;;:::o;274:26::-;;;;;;;;;;;;;:::o;1413:890::-;1485:1;1475:7;:11;1467:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1600:7;1565:19;:31;1585:10;1565:31;;;;;;;;;;;;;;;;:42;;1557:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;1694:12;1751:3;1728:7;:19;1736:10;1728:19;;;;;;;;;;;;;;;;1710:15;:37;;;;:::i;:::-;1709:45;;;;:::i;:::-;1694:60;;1786:14;1850:4;1837:10;;1803:19;:31;1823:10;1803:31;;;;;;;;;;;;;;;;:44;;;;:::i;:::-;:51;;;;:::i;:::-;1786:68;;1910:6;1898:9;;:18;;;;:::i;:::-;1886:9;:30;;;;1960:6;;;;;;;;;;:15;;;1976:10;1988:7;1960:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2016:44;2052:7;2016:19;:31;2036:10;2016:31;;;;;;;;;;;;;;;;:35;;:44;;;;:::i;:::-;;2120:1;2098:7;:19;2106:10;2098:19;;;;;;;;;;;;;;;:23;;;;2169:9;;2156;;:22;2152:78;;2189:12;;;;;;;;;;;:21;;;2211:10;2223:6;2189:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2152:78;2267:10;2258:37;;;2279:7;2288:6;2258:37;;;;;;;:::i;:::-;;;;;;;;1456:847;;1413:890;:::o;2311:243::-;2359:7;2379:12;2436:3;2413:7;:19;2421:10;2413:19;;;;;;;;;;;;;;;;2395:15;:37;;;;:::i;:::-;2394:45;;;;:::i;:::-;2379:60;;2527:4;2514:10;;2480:19;:31;2500:10;2480:31;;;;;;;;;;;;;;;;:44;;;;:::i;:::-;:51;;;;:::i;:::-;2473:58;;;2311:243;:::o;2562:110::-;2606:7;2633:19;:31;2653:10;2633:31;;;;;;;;;;;;;;;;2626:38;;2562:110;:::o;819:586::-;889:1;879:7;:11;871:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1002:7;970:6;;;;;;;;;;:16;;;987:10;970:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;;962:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1077:6;;;;;;;;;;:19;;;1097:10;1117:4;1124:7;1077:55;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1209:44;1245:7;1209:19;:31;1229:10;1209:31;;;;;;;;;;;;;;;;:35;;:44;;;;:::i;:::-;1175:19;:31;1195:10;1175:31;;;;;;;;;;;;;;;:78;;;;1313:15;1291:7;:19;1299:10;1291:19;;;;;;;;;;;;;;;:37;;;;1377:10;1370:27;;;1389:7;1370:27;;;;;;:::i;:::-;;;;;;;;819:586;:::o;3122:96:1:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;7:126:3:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:139::-;548:9;581:37;612:5;581:37;:::i;:::-;568:50;;485:139;;;:::o;630:157::-;730:50;774:5;730:50;:::i;:::-;725:3;718:63;630:157;;:::o;793:248::-;899:4;937:2;926:9;922:18;914:26;;950:84;1031:1;1020:9;1016:17;1007:6;950:84;:::i;:::-;793:248;;;;:::o;1128:117::-;1237:1;1234;1227:12;1374:77;1411:7;1440:5;1429:16;;1374:77;;;:::o;1457:122::-;1530:24;1548:5;1530:24;:::i;:::-;1523:5;1520:35;1510:63;;1569:1;1566;1559:12;1510:63;1457:122;:::o;1585:139::-;1631:5;1669:6;1656:20;1647:29;;1685:33;1712:5;1685:33;:::i;:::-;1585:139;;;;:::o;1730:329::-;1789:6;1838:2;1826:9;1817:7;1813:23;1809:32;1806:119;;;1844:79;;:::i;:::-;1806:119;1964:1;1989:53;2034:7;2025:6;2014:9;2010:22;1989:53;:::i;:::-;1979:63;;1935:117;1730:329;;;;:::o;2065:118::-;2152:24;2170:5;2152:24;:::i;:::-;2147:3;2140:37;2065:118;;:::o;2189:222::-;2282:4;2320:2;2309:9;2305:18;2297:26;;2333:71;2401:1;2390:9;2386:17;2377:6;2333:71;:::i;:::-;2189:222;;;;:::o;2417:169::-;2501:11;2535:6;2530:3;2523:19;2575:4;2570:3;2566:14;2551:29;;2417:169;;;;:::o;2592:182::-;2732:34;2728:1;2720:6;2716:14;2709:58;2592:182;:::o;2780:366::-;2922:3;2943:67;3007:2;3002:3;2943:67;:::i;:::-;2936:74;;3019:93;3108:3;3019:93;:::i;:::-;3137:2;3132:3;3128:12;3121:19;;2780:366;;;:::o;3152:419::-;3318:4;3356:2;3345:9;3341:18;3333:26;;3405:9;3399:4;3395:20;3391:1;3380:9;3376:17;3369:47;3433:131;3559:4;3433:131;:::i;:::-;3425:139;;3152:419;;;:::o;3577:177::-;3717:29;3713:1;3705:6;3701:14;3694:53;3577:177;:::o;3760:366::-;3902:3;3923:67;3987:2;3982:3;3923:67;:::i;:::-;3916:74;;3999:93;4088:3;3999:93;:::i;:::-;4117:2;4112:3;4108:12;4101:19;;3760:366;;;:::o;4132:419::-;4298:4;4336:2;4325:9;4321:18;4313:26;;4385:9;4379:4;4375:20;4371:1;4360:9;4356:17;4349:47;4413:131;4539:4;4413:131;:::i;:::-;4405:139;;4132:419;;;:::o;4557:180::-;4605:77;4602:1;4595:88;4702:4;4699:1;4692:15;4726:4;4723:1;4716:15;4743:194;4783:4;4803:20;4821:1;4803:20;:::i;:::-;4798:25;;4837:20;4855:1;4837:20;:::i;:::-;4832:25;;4881:1;4878;4874:9;4866:17;;4905:1;4899:4;4896:11;4893:37;;;4910:18;;:::i;:::-;4893:37;4743:194;;;;:::o;4943:180::-;4991:77;4988:1;4981:88;5088:4;5085:1;5078:15;5112:4;5109:1;5102:15;5129:185;5169:1;5186:20;5204:1;5186:20;:::i;:::-;5181:25;;5220:20;5238:1;5220:20;:::i;:::-;5215:25;;5259:1;5249:35;;5264:18;;:::i;:::-;5249:35;5306:1;5303;5299:9;5294:14;;5129:185;;;;:::o;5320:410::-;5360:7;5383:20;5401:1;5383:20;:::i;:::-;5378:25;;5417:20;5435:1;5417:20;:::i;:::-;5412:25;;5472:1;5469;5465:9;5494:30;5512:11;5494:30;:::i;:::-;5483:41;;5673:1;5664:7;5660:15;5657:1;5654:22;5634:1;5627:9;5607:83;5584:139;;5703:18;;:::i;:::-;5584:139;5368:362;5320:410;;;;:::o;5736:191::-;5776:3;5795:20;5813:1;5795:20;:::i;:::-;5790:25;;5829:20;5847:1;5829:20;:::i;:::-;5824:25;;5872:1;5869;5865:9;5858:16;;5893:3;5890:1;5887:10;5884:36;;;5900:18;;:::i;:::-;5884:36;5736:191;;;;:::o;5933:96::-;5970:7;5999:24;6017:5;5999:24;:::i;:::-;5988:35;;5933:96;;;:::o;6035:118::-;6122:24;6140:5;6122:24;:::i;:::-;6117:3;6110:37;6035:118;;:::o;6159:332::-;6280:4;6318:2;6307:9;6303:18;6295:26;;6331:71;6399:1;6388:9;6384:17;6375:6;6331:71;:::i;:::-;6412:72;6480:2;6469:9;6465:18;6456:6;6412:72;:::i;:::-;6159:332;;;;;:::o;6497:90::-;6531:7;6574:5;6567:13;6560:21;6549:32;;6497:90;;;:::o;6593:116::-;6663:21;6678:5;6663:21;:::i;:::-;6656:5;6653:32;6643:60;;6699:1;6696;6689:12;6643:60;6593:116;:::o;6715:137::-;6769:5;6800:6;6794:13;6785:22;;6816:30;6840:5;6816:30;:::i;:::-;6715:137;;;;:::o;6858:345::-;6925:6;6974:2;6962:9;6953:7;6949:23;6945:32;6942:119;;;6980:79;;:::i;:::-;6942:119;7100:1;7125:61;7178:7;7169:6;7158:9;7154:22;7125:61;:::i;:::-;7115:71;;7071:125;6858:345;;;;:::o;7209:332::-;7330:4;7368:2;7357:9;7353:18;7345:26;;7381:71;7449:1;7438:9;7434:17;7425:6;7381:71;:::i;:::-;7462:72;7530:2;7519:9;7515:18;7506:6;7462:72;:::i;:::-;7209:332;;;;;:::o;7547:222::-;7640:4;7678:2;7667:9;7663:18;7655:26;;7691:71;7759:1;7748:9;7744:17;7735:6;7691:71;:::i;:::-;7547:222;;;;:::o;7775:143::-;7832:5;7863:6;7857:13;7848:22;;7879:33;7906:5;7879:33;:::i;:::-;7775:143;;;;:::o;7924:351::-;7994:6;8043:2;8031:9;8022:7;8018:23;8014:32;8011:119;;;8049:79;;:::i;:::-;8011:119;8169:1;8194:64;8250:7;8241:6;8230:9;8226:22;8194:64;:::i;:::-;8184:74;;8140:128;7924:351;;;;:::o;8281:170::-;8421:22;8417:1;8409:6;8405:14;8398:46;8281:170;:::o;8457:366::-;8599:3;8620:67;8684:2;8679:3;8620:67;:::i;:::-;8613:74;;8696:93;8785:3;8696:93;:::i;:::-;8814:2;8809:3;8805:12;8798:19;;8457:366;;;:::o;8829:419::-;8995:4;9033:2;9022:9;9018:18;9010:26;;9082:9;9076:4;9072:20;9068:1;9057:9;9053:17;9046:47;9110:131;9236:4;9110:131;:::i;:::-;9102:139;;8829:419;;;:::o;9254:442::-;9403:4;9441:2;9430:9;9426:18;9418:26;;9454:71;9522:1;9511:9;9507:17;9498:6;9454:71;:::i;:::-;9535:72;9603:2;9592:9;9588:18;9579:6;9535:72;:::i;:::-;9617;9685:2;9674:9;9670:18;9661:6;9617:72;:::i;:::-;9254:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "748200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Checkstake()": "2592",
								"calculateReward()": "infinite",
								"stake(uint256)": "infinite",
								"tokenA()": "infinite",
								"tokenAreward()": "infinite",
								"unstake(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 180,
									"end": 2815,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 180,
									"end": 2815,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 180,
									"end": 2815,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 327,
									"end": 338,
									"name": "PUSH",
									"source": 2,
									"value": "2540BE400"
								},
								{
									"begin": 307,
									"end": 338,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 307,
									"end": 338,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 426,
									"end": 429,
									"name": "PUSH",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 405,
									"end": 429,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 405,
									"end": 429,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 698,
									"end": 811,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 698,
									"end": 811,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 698,
									"end": 811,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 698,
									"end": 811,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 811,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 698,
									"end": 811,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 811,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 698,
									"end": 811,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 698,
									"end": 811,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 811,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 698,
									"end": 811,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 698,
									"end": 811,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 698,
									"end": 811,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 698,
									"end": 811,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 698,
									"end": 811,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 698,
									"end": 811,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 698,
									"end": 811,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 698,
									"end": 811,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 698,
									"end": 811,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 698,
									"end": 811,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 698,
									"end": 811,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 698,
									"end": 811,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 698,
									"end": 811,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 698,
									"end": 811,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 698,
									"end": 811,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 698,
									"end": 811,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 698,
									"end": 811,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 698,
									"end": 811,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 698,
									"end": 811,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 698,
									"end": 811,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 698,
									"end": 811,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 698,
									"end": 811,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 698,
									"end": 811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 698,
									"end": 811,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 698,
									"end": 811,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 754,
									"end": 761,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 738,
									"end": 744,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 738,
									"end": 744,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 738,
									"end": 762,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 738,
									"end": 762,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 738,
									"end": 762,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 738,
									"end": 762,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 738,
									"end": 762,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 738,
									"end": 762,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 738,
									"end": 762,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 738,
									"end": 762,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 738,
									"end": 762,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 738,
									"end": 762,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 738,
									"end": 762,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 738,
									"end": 762,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 738,
									"end": 762,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 738,
									"end": 762,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 738,
									"end": 762,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 738,
									"end": 762,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 738,
									"end": 762,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 738,
									"end": 762,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 795,
									"end": 802,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 773,
									"end": 785,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 773,
									"end": 785,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 803,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 773,
									"end": 803,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 773,
									"end": 803,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 773,
									"end": 803,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 773,
									"end": 803,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 773,
									"end": 803,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 773,
									"end": 803,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 773,
									"end": 803,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 773,
									"end": 803,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 773,
									"end": 803,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 773,
									"end": 803,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 773,
									"end": 803,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 773,
									"end": 803,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 773,
									"end": 803,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 773,
									"end": 803,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 773,
									"end": 803,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 773,
									"end": 803,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 773,
									"end": 803,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 698,
									"end": 811,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 180,
									"end": 2815,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 180,
									"end": 2815,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 180,
									"end": 2815,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 180,
									"end": 2815,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 180,
									"end": 2815,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 180,
									"end": 2815,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 180,
									"end": 2815,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 180,
									"end": 2815,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 2815,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 180,
									"end": 2815,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 2815,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220df3f0218023f5d2b2ff3ed31c9a5a9154639c96fc6b05581671ef8e459e301ee64736f6c63430008130033",
									".code": [
										{
											"begin": 180,
											"end": 2815,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "PUSH",
											"source": 2,
											"value": "FC63D10"
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "PUSH",
											"source": 2,
											"value": "1928C749"
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "PUSH",
											"source": 2,
											"value": "2E17DE78"
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "PUSH",
											"source": 2,
											"value": "725CEDD3"
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "PUSH",
											"source": 2,
											"value": "91B780EA"
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "PUSH",
											"source": 2,
											"value": "A694FC3A"
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 180,
											"end": 2815,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 247,
											"end": 267,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 247,
											"end": 267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 247,
											"end": 267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 247,
											"end": 267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 247,
											"end": 267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 247,
											"end": 267,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 247,
											"end": 267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 247,
											"end": 267,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 247,
											"end": 267,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 247,
											"end": 267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 247,
											"end": 267,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 247,
											"end": 267,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 247,
											"end": 267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 247,
											"end": 267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 247,
											"end": 267,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 247,
											"end": 267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 247,
											"end": 267,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 247,
											"end": 267,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 247,
											"end": 267,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 247,
											"end": 267,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 247,
											"end": 267,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 247,
											"end": 267,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 247,
											"end": 267,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 274,
											"end": 300,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 274,
											"end": 300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 274,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 274,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 274,
											"end": 300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 274,
											"end": 300,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 274,
											"end": 300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 274,
											"end": 300,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 274,
											"end": 300,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 274,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 274,
											"end": 300,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 274,
											"end": 300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 274,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 274,
											"end": 300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 274,
											"end": 300,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 274,
											"end": 300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 274,
											"end": 300,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 274,
											"end": 300,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 274,
											"end": 300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 274,
											"end": 300,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 274,
											"end": 300,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 274,
											"end": 300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 274,
											"end": 300,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1413,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1413,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1413,
											"end": 2303,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 2303,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 2303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 2303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1413,
											"end": 2303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1413,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1413,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1413,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1413,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 2303,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2554,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2311,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2311,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2311,
											"end": 2554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2554,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2311,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2554,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2311,
											"end": 2554,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2311,
											"end": 2554,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2311,
											"end": 2554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2554,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2311,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2554,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2311,
											"end": 2554,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2554,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2554,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2554,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2554,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2672,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2562,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2562,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2562,
											"end": 2672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2672,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2562,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2562,
											"end": 2672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2562,
											"end": 2672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2562,
											"end": 2672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2672,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2562,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2562,
											"end": 2672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2672,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 819,
											"end": 1405,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 819,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 819,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 819,
											"end": 1405,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 819,
											"end": 1405,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 819,
											"end": 1405,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 819,
											"end": 1405,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 819,
											"end": 1405,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 819,
											"end": 1405,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 819,
											"end": 1405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 819,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 819,
											"end": 1405,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 819,
											"end": 1405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 819,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 819,
											"end": 1405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 819,
											"end": 1405,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 819,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 819,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 819,
											"end": 1405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 819,
											"end": 1405,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 819,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 819,
											"end": 1405,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 247,
											"end": 267,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 247,
											"end": 267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 247,
											"end": 267,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 267,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 247,
											"end": 267,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 247,
											"end": 267,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 247,
											"end": 267,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 247,
											"end": 267,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 247,
											"end": 267,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 247,
											"end": 267,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 247,
											"end": 267,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 247,
											"end": 267,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 247,
											"end": 267,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 247,
											"end": 267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 274,
											"end": 300,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 274,
											"end": 300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 274,
											"end": 300,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 274,
											"end": 300,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 274,
											"end": 300,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 274,
											"end": 300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 274,
											"end": 300,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 274,
											"end": 300,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 274,
											"end": 300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 274,
											"end": 300,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 274,
											"end": 300,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 274,
											"end": 300,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 274,
											"end": 300,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 274,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1413,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1486,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1475,
											"end": 1482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1486,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1467,
											"end": 1523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1523,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1467,
											"end": 1523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1467,
											"end": 1523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1467,
											"end": 1523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1467,
											"end": 1523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1523,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1467,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1523,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1523,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1523,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1467,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1600,
											"end": 1607,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1584,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1565,
											"end": 1596,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1585,
											"end": 1595,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1596,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1565,
											"end": 1596,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1596,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1565,
											"end": 1596,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1596,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1596,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1565,
											"end": 1596,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1596,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1596,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1596,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1565,
											"end": 1596,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1596,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1565,
											"end": 1596,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1596,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1607,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1607,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1557,
											"end": 1639,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1639,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1557,
											"end": 1639,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1639,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1557,
											"end": 1639,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1639,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1639,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1557,
											"end": 1639,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1557,
											"end": 1639,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1557,
											"end": 1639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1639,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1557,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1639,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1557,
											"end": 1639,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1639,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1639,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1639,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1639,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1639,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1639,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1557,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1694,
											"end": 1706,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1751,
											"end": 1754,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1728,
											"end": 1735,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1728,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1746,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1728,
											"end": 1747,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1728,
											"end": 1747,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1747,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1747,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1728,
											"end": 1747,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1747,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1747,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1728,
											"end": 1747,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1747,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1747,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1725,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1710,
											"end": 1747,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1710,
											"end": 1747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1747,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1710,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1709,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1709,
											"end": 1754,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1709,
											"end": 1754,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1709,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1709,
											"end": 1754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1709,
											"end": 1754,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1709,
											"end": 1754,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1694,
											"end": 1754,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1694,
											"end": 1754,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 1800,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1850,
											"end": 1854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1847,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1837,
											"end": 1847,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1803,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1833,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1803,
											"end": 1834,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1803,
											"end": 1834,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1834,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1803,
											"end": 1834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1834,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1803,
											"end": 1834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1803,
											"end": 1834,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1834,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1803,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1803,
											"end": 1854,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1803,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1854,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1803,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 1854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 1854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 1916,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1907,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1898,
											"end": 1907,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1898,
											"end": 1916,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1916,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1898,
											"end": 1916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1916,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1898,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1886,
											"end": 1895,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1886,
											"end": 1916,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1886,
											"end": 1916,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1886,
											"end": 1916,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1886,
											"end": 1916,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1966,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1966,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1966,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1966,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1966,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1960,
											"end": 1966,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1966,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1966,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1966,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 1966,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1975,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 1975,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1975,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1976,
											"end": 1986,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 1995,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1960,
											"end": 1996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1960,
											"end": 1996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2052,
											"end": 2059,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2035,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2016,
											"end": 2047,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2036,
											"end": 2046,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2047,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2016,
											"end": 2047,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2047,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2016,
											"end": 2047,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2047,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2047,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2047,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2047,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2047,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2047,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2047,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2047,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2047,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2047,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2016,
											"end": 2047,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2047,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2016,
											"end": 2051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2060,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2060,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2060,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2016,
											"end": 2060,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2060,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2016,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2060,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2105,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2116,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2178,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2169,
											"end": 2178,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2156,
											"end": 2165,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2178,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2152,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2152,
											"end": 2230,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2201,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2189,
											"end": 2201,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2201,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2201,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2189,
											"end": 2201,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2201,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2201,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2189,
											"end": 2201,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2210,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2189,
											"end": 2210,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2210,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2223,
											"end": 2229,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2189,
											"end": 2230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2189,
											"end": 2230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2152,
											"end": 2230,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2152,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2277,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2295,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2258,
											"end": 2295,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2295,
											"name": "PUSH",
											"source": 2,
											"value": "7FC4727E062E336010F2C282598EF5F14FACB3DE68CF8195C2F23E1454B2B74E"
										},
										{
											"begin": 2279,
											"end": 2286,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2295,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2258,
											"end": 2295,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2258,
											"end": 2295,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2295,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2295,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2258,
											"end": 2295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2295,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2258,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2295,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2258,
											"end": 2295,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2295,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2295,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2295,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2295,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2295,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 1456,
											"end": 2303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1456,
											"end": 2303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 2303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2554,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2311,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2359,
											"end": 2366,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 2391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2436,
											"end": 2439,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2413,
											"end": 2420,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2413,
											"end": 2432,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2421,
											"end": 2431,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2413,
											"end": 2432,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2413,
											"end": 2432,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2413,
											"end": 2432,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2413,
											"end": 2432,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2413,
											"end": 2432,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2413,
											"end": 2432,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2413,
											"end": 2432,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2413,
											"end": 2432,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2413,
											"end": 2432,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2413,
											"end": 2432,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2413,
											"end": 2432,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2413,
											"end": 2432,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2413,
											"end": 2432,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2413,
											"end": 2432,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2413,
											"end": 2432,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2413,
											"end": 2432,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2395,
											"end": 2410,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2395,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2395,
											"end": 2432,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2395,
											"end": 2432,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2395,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2395,
											"end": 2432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2395,
											"end": 2432,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2395,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2394,
											"end": 2439,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2439,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2394,
											"end": 2439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2439,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2394,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2379,
											"end": 2439,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2379,
											"end": 2439,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2527,
											"end": 2531,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2524,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2514,
											"end": 2524,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2480,
											"end": 2511,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2510,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2511,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2480,
											"end": 2511,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2511,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2480,
											"end": 2511,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2511,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2511,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2511,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2480,
											"end": 2511,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2511,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2511,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2511,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2480,
											"end": 2511,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2511,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2511,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2511,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2480,
											"end": 2524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2480,
											"end": 2524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2524,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2480,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2480,
											"end": 2531,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2480,
											"end": 2531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2531,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2480,
											"end": 2531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2473,
											"end": 2531,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2473,
											"end": 2531,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2473,
											"end": 2531,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2672,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2562,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2613,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2652,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2653,
											"end": 2663,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 2664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 2664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 819,
											"end": 1405,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 819,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 889,
											"end": 890,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 879,
											"end": 886,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 879,
											"end": 890,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 871,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 871,
											"end": 927,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 871,
											"end": 927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 871,
											"end": 927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 871,
											"end": 927,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 871,
											"end": 927,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 871,
											"end": 927,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 871,
											"end": 927,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 871,
											"end": 927,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 871,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 871,
											"end": 927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 871,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 871,
											"end": 927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 871,
											"end": 927,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 871,
											"end": 927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 871,
											"end": 927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 871,
											"end": 927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 871,
											"end": 927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 871,
											"end": 927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 871,
											"end": 927,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 871,
											"end": 927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 871,
											"end": 927,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 871,
											"end": 927,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 871,
											"end": 927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1009,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 970,
											"end": 976,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 976,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 970,
											"end": 976,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 970,
											"end": 976,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 970,
											"end": 976,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 970,
											"end": 976,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 970,
											"end": 976,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 970,
											"end": 976,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 970,
											"end": 976,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 970,
											"end": 976,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 970,
											"end": 986,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 970,
											"end": 986,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 970,
											"end": 986,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 987,
											"end": 997,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 970,
											"end": 998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 970,
											"end": 998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 970,
											"end": 998,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 970,
											"end": 1009,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 970,
											"end": 1009,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 962,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 962,
											"end": 1034,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 962,
											"end": 1034,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 1034,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 962,
											"end": 1034,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 962,
											"end": 1034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 962,
											"end": 1034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 962,
											"end": 1034,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 962,
											"end": 1034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 962,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 962,
											"end": 1034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 962,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 962,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 962,
											"end": 1034,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 962,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 962,
											"end": 1034,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 1034,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 962,
											"end": 1034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 962,
											"end": 1034,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 962,
											"end": 1034,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 962,
											"end": 1034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 962,
											"end": 1034,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 962,
											"end": 1034,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 962,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1077,
											"end": 1096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1096,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1097,
											"end": 1107,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1131,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1077,
											"end": 1132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1077,
											"end": 1132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1132,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1245,
											"end": 1252,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1228,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1209,
											"end": 1240,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1239,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1240,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1209,
											"end": 1240,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1240,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1209,
											"end": 1240,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1240,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1240,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1240,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1209,
											"end": 1240,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1240,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1240,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1240,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1240,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1209,
											"end": 1240,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1240,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1209,
											"end": 1240,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1240,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1209,
											"end": 1244,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1253,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1253,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1253,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1209,
											"end": 1253,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1253,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1209,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1194,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1175,
											"end": 1206,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1195,
											"end": 1205,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1206,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1175,
											"end": 1206,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1206,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1175,
											"end": 1206,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1206,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1206,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1206,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1175,
											"end": 1206,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1206,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1206,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1206,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1206,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1175,
											"end": 1206,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1206,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1175,
											"end": 1206,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1253,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1253,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1253,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1313,
											"end": 1328,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1291,
											"end": 1310,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1299,
											"end": 1309,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1310,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1291,
											"end": 1310,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1310,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1291,
											"end": 1310,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1310,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1310,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1310,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1291,
											"end": 1310,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1310,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1310,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1310,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1310,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1291,
											"end": 1310,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1310,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1310,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1328,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1328,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1328,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1328,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1387,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 1397,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1370,
											"end": 1397,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 1397,
											"name": "PUSH",
											"source": 2,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 1389,
											"end": 1396,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 1397,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 1397,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 1397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1370,
											"end": 1397,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 1397,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 1397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1370,
											"end": 1397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 1397,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1370,
											"end": 1397,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 1397,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 1397,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 1397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 1397,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 1397,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 1397,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 1397,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 819,
											"end": 1405,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 819,
											"end": 1405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 199,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 139,
											"end": 199,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 167,
											"end": 170,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 193,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 181,
											"end": 193,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 181,
											"end": 193,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 199,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 347,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 205,
											"end": 347,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 255,
											"end": 264,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 315,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 315,
											"end": 339,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 306,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 306,
											"end": 340,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 288,
											"end": 341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 288,
											"end": 341,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 275,
											"end": 341,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 275,
											"end": 341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 205,
											"end": 347,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 353,
											"end": 479,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 353,
											"end": 479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 403,
											"end": 412,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 436,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 436,
											"end": 473,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 423,
											"end": 473,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 423,
											"end": 473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 353,
											"end": 479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 353,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 485,
											"end": 624,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 485,
											"end": 624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 548,
											"end": 557,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 581,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 612,
											"end": 617,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 581,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 581,
											"end": 618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 581,
											"end": 618,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 581,
											"end": 618,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 618,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 568,
											"end": 618,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 485,
											"end": 624,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 485,
											"end": 624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 485,
											"end": 624,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 485,
											"end": 624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 630,
											"end": 787,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 630,
											"end": 787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 730,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 774,
											"end": 779,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 730,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 730,
											"end": 780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 730,
											"end": 780,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 730,
											"end": 780,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 725,
											"end": 728,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 718,
											"end": 781,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 630,
											"end": 787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 630,
											"end": 787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 630,
											"end": 787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 793,
											"end": 1041,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 793,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 899,
											"end": 903,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 939,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 926,
											"end": 935,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 922,
											"end": 940,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 914,
											"end": 940,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 914,
											"end": 940,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 950,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1031,
											"end": 1032,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1020,
											"end": 1029,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1016,
											"end": 1033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1007,
											"end": 1013,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 950,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 950,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 950,
											"end": 1034,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 950,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 793,
											"end": 1041,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 793,
											"end": 1041,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 793,
											"end": 1041,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 793,
											"end": 1041,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 793,
											"end": 1041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1128,
											"end": 1245,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1128,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1237,
											"end": 1238,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1234,
											"end": 1235,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1239,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1451,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1374,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1411,
											"end": 1418,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1445,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1429,
											"end": 1445,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1429,
											"end": 1445,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1451,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1451,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1451,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 1579,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1457,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1530,
											"end": 1554,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1530,
											"end": 1554,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1530,
											"end": 1554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1530,
											"end": 1554,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1530,
											"end": 1554,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1528,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1520,
											"end": 1555,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1510,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 1510,
											"end": 1573,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1570,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1566,
											"end": 1567,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 1571,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1510,
											"end": 1573,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 1510,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 1579,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 1579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1585,
											"end": 1724,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1585,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1631,
											"end": 1636,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1656,
											"end": 1676,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1647,
											"end": 1676,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1647,
											"end": 1676,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 1712,
											"end": 1717,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1685,
											"end": 1718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1718,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 1685,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1585,
											"end": 1724,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1585,
											"end": 1724,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1585,
											"end": 1724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1585,
											"end": 1724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1585,
											"end": 1724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1730,
											"end": 2059,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1730,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1789,
											"end": 1795,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1838,
											"end": 1840,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1835,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1824,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1813,
											"end": 1836,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1809,
											"end": 1841,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1806,
											"end": 1925,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1806,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1806,
											"end": 1925,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1844,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 1844,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1844,
											"end": 1923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1844,
											"end": 1923,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 1844,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1806,
											"end": 1925,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1806,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1964,
											"end": 1965,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1989,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2034,
											"end": 2041,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2031,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2023,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2032,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1989,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1989,
											"end": 2042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1989,
											"end": 2042,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 1989,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1979,
											"end": 2042,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1979,
											"end": 2042,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1935,
											"end": 2052,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1730,
											"end": 2059,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1730,
											"end": 2059,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1730,
											"end": 2059,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1730,
											"end": 2059,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1730,
											"end": 2059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2183,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2065,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2152,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2170,
											"end": 2175,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2152,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2152,
											"end": 2176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2152,
											"end": 2176,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2152,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2147,
											"end": 2150,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2177,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2183,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2183,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2189,
											"end": 2411,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2189,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2282,
											"end": 2286,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2318,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2305,
											"end": 2323,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2297,
											"end": 2323,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2297,
											"end": 2323,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2333,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2401,
											"end": 2402,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 2399,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2386,
											"end": 2403,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2333,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2333,
											"end": 2404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2333,
											"end": 2404,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2333,
											"end": 2404,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2189,
											"end": 2411,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2189,
											"end": 2411,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2189,
											"end": 2411,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2189,
											"end": 2411,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2189,
											"end": 2411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2417,
											"end": 2586,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2417,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2501,
											"end": 2512,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2535,
											"end": 2541,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2533,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2523,
											"end": 2542,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2575,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2570,
											"end": 2573,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2566,
											"end": 2580,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2551,
											"end": 2580,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2551,
											"end": 2580,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2417,
											"end": 2586,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2417,
											"end": 2586,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2417,
											"end": 2586,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2417,
											"end": 2586,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2417,
											"end": 2586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2774,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2592,
											"end": 2774,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2732,
											"end": 2766,
											"name": "PUSH",
											"source": 3,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 2728,
											"end": 2729,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2720,
											"end": 2726,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2730,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2709,
											"end": 2767,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2774,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2780,
											"end": 3146,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2780,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2922,
											"end": 2925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2943,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 3007,
											"end": 3009,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3002,
											"end": 3005,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2943,
											"end": 3010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 3010,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2943,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2936,
											"end": 3010,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2936,
											"end": 3010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3108,
											"end": 3111,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3019,
											"end": 3112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3112,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3019,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3139,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3132,
											"end": 3135,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3128,
											"end": 3140,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3121,
											"end": 3140,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3121,
											"end": 3140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2780,
											"end": 3146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2780,
											"end": 3146,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2780,
											"end": 3146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2780,
											"end": 3146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3571,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3152,
											"end": 3571,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3318,
											"end": 3322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3356,
											"end": 3358,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3345,
											"end": 3354,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3341,
											"end": 3359,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3333,
											"end": 3359,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3333,
											"end": 3359,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3405,
											"end": 3414,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3403,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3395,
											"end": 3415,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3391,
											"end": 3392,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3380,
											"end": 3389,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3393,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3369,
											"end": 3416,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3433,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3559,
											"end": 3563,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3433,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3433,
											"end": 3564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3433,
											"end": 3564,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3433,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3425,
											"end": 3564,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3425,
											"end": 3564,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3571,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3571,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3571,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3577,
											"end": 3754,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3577,
											"end": 3754,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3717,
											"end": 3746,
											"name": "PUSH",
											"source": 3,
											"value": "496E73756666696369656E74207374616B65642062616C616E63650000000000"
										},
										{
											"begin": 3713,
											"end": 3714,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3711,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3701,
											"end": 3715,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3694,
											"end": 3747,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3577,
											"end": 3754,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3577,
											"end": 3754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3760,
											"end": 4126,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 3760,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 3905,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 3987,
											"end": 3989,
											"name": "PUSH",
											"source": 3,
											"value": "1B"
										},
										{
											"begin": 3982,
											"end": 3985,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3923,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3923,
											"end": 3990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3923,
											"end": 3990,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 3923,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3916,
											"end": 3990,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3916,
											"end": 3990,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3999,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 4088,
											"end": 4091,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3999,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3999,
											"end": 4092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3999,
											"end": 4092,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 3999,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4117,
											"end": 4119,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4115,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4108,
											"end": 4120,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4101,
											"end": 4120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4101,
											"end": 4120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3760,
											"end": 4126,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3760,
											"end": 4126,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3760,
											"end": 4126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3760,
											"end": 4126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4132,
											"end": 4551,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 4132,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4298,
											"end": 4302,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4336,
											"end": 4338,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4325,
											"end": 4334,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4321,
											"end": 4339,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4313,
											"end": 4339,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4313,
											"end": 4339,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4385,
											"end": 4394,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4379,
											"end": 4383,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4395,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4371,
											"end": 4372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4360,
											"end": 4369,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4373,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4349,
											"end": 4396,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 4539,
											"end": 4543,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 4413,
											"end": 4544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4544,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 4413,
											"end": 4544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4405,
											"end": 4544,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4405,
											"end": 4544,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4132,
											"end": 4551,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4132,
											"end": 4551,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4132,
											"end": 4551,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4132,
											"end": 4551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 4737,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 4557,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4605,
											"end": 4682,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4602,
											"end": 4603,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4595,
											"end": 4683,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4702,
											"end": 4706,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 4699,
											"end": 4700,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4692,
											"end": 4707,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4723,
											"end": 4724,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4716,
											"end": 4731,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4743,
											"end": 4937,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 4743,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4783,
											"end": 4787,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4803,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 4821,
											"end": 4822,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4803,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4803,
											"end": 4823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4803,
											"end": 4823,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 4803,
											"end": 4823,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4798,
											"end": 4823,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4798,
											"end": 4823,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 4855,
											"end": 4856,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4837,
											"end": 4857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4857,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 4837,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4832,
											"end": 4857,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4832,
											"end": 4857,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4881,
											"end": 4882,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4878,
											"end": 4879,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4874,
											"end": 4883,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4866,
											"end": 4883,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4866,
											"end": 4883,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4905,
											"end": 4906,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4899,
											"end": 4903,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4896,
											"end": 4907,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4893,
											"end": 4930,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4893,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4893,
											"end": 4930,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 4910,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 4910,
											"end": 4928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4928,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 4910,
											"end": 4928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4893,
											"end": 4930,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4893,
											"end": 4930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4743,
											"end": 4937,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4743,
											"end": 4937,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4743,
											"end": 4937,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4743,
											"end": 4937,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4743,
											"end": 4937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4943,
											"end": 5123,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 4943,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5068,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4988,
											"end": 4989,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4981,
											"end": 5069,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5088,
											"end": 5092,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 5085,
											"end": 5086,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5078,
											"end": 5093,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5112,
											"end": 5116,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5109,
											"end": 5110,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5102,
											"end": 5117,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5129,
											"end": 5314,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5129,
											"end": 5314,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5169,
											"end": 5170,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5186,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 5204,
											"end": 5205,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5186,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5186,
											"end": 5206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5186,
											"end": 5206,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 5186,
											"end": 5206,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5181,
											"end": 5206,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5181,
											"end": 5206,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5220,
											"end": 5240,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 5238,
											"end": 5239,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5220,
											"end": 5240,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5220,
											"end": 5240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5220,
											"end": 5240,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 5220,
											"end": 5240,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5215,
											"end": 5240,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5215,
											"end": 5240,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5259,
											"end": 5260,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5249,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 5249,
											"end": 5284,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5264,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 5264,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 5264,
											"end": 5282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5264,
											"end": 5282,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 5264,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5249,
											"end": 5284,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 5249,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5306,
											"end": 5307,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5303,
											"end": 5304,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5308,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5308,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5129,
											"end": 5314,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5129,
											"end": 5314,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5129,
											"end": 5314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5129,
											"end": 5314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5129,
											"end": 5314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5320,
											"end": 5730,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 5320,
											"end": 5730,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5360,
											"end": 5367,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5383,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 5401,
											"end": 5402,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5383,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5383,
											"end": 5403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5383,
											"end": 5403,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 5383,
											"end": 5403,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5378,
											"end": 5403,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5378,
											"end": 5403,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5417,
											"end": 5437,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 5435,
											"end": 5436,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5417,
											"end": 5437,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5417,
											"end": 5437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5417,
											"end": 5437,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 5417,
											"end": 5437,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5412,
											"end": 5437,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5412,
											"end": 5437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5473,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5469,
											"end": 5470,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5465,
											"end": 5474,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5494,
											"end": 5524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 5512,
											"end": 5523,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5494,
											"end": 5524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5494,
											"end": 5524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5494,
											"end": 5524,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 5494,
											"end": 5524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5483,
											"end": 5524,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5483,
											"end": 5524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5673,
											"end": 5674,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5664,
											"end": 5671,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5660,
											"end": 5675,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5657,
											"end": 5658,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5654,
											"end": 5676,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5634,
											"end": 5635,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5627,
											"end": 5636,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5607,
											"end": 5690,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 5584,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 5584,
											"end": 5723,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5703,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 5703,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 5703,
											"end": 5721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5703,
											"end": 5721,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 5703,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5584,
											"end": 5723,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 5584,
											"end": 5723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5368,
											"end": 5730,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5320,
											"end": 5730,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5320,
											"end": 5730,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5320,
											"end": 5730,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5320,
											"end": 5730,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5320,
											"end": 5730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5736,
											"end": 5927,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 5736,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5776,
											"end": 5779,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5795,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 5813,
											"end": 5814,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5795,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5795,
											"end": 5815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5795,
											"end": 5815,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 5795,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5790,
											"end": 5815,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5790,
											"end": 5815,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 5847,
											"end": 5848,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5829,
											"end": 5849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5824,
											"end": 5849,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5824,
											"end": 5849,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5872,
											"end": 5873,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5869,
											"end": 5870,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5874,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5858,
											"end": 5874,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5858,
											"end": 5874,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5893,
											"end": 5896,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5890,
											"end": 5891,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5887,
											"end": 5897,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5884,
											"end": 5920,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5884,
											"end": 5920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 5884,
											"end": 5920,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 5900,
											"end": 5918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5884,
											"end": 5920,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 5884,
											"end": 5920,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5736,
											"end": 5927,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5736,
											"end": 5927,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5736,
											"end": 5927,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5736,
											"end": 5927,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5736,
											"end": 5927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5933,
											"end": 6029,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 5933,
											"end": 6029,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5970,
											"end": 5977,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5999,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 6017,
											"end": 6022,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5999,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 5999,
											"end": 6023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5999,
											"end": 6023,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 5999,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6023,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6023,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5933,
											"end": 6029,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5933,
											"end": 6029,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5933,
											"end": 6029,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5933,
											"end": 6029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6035,
											"end": 6153,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 6035,
											"end": 6153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6122,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 6140,
											"end": 6145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6122,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 6122,
											"end": 6146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6122,
											"end": 6146,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 6122,
											"end": 6146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6117,
											"end": 6120,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6110,
											"end": 6147,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6035,
											"end": 6153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6035,
											"end": 6153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6035,
											"end": 6153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6159,
											"end": 6491,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 6159,
											"end": 6491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6280,
											"end": 6284,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6318,
											"end": 6320,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6303,
											"end": 6321,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6295,
											"end": 6321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6295,
											"end": 6321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6331,
											"end": 6402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 6399,
											"end": 6400,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6388,
											"end": 6397,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6384,
											"end": 6401,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6375,
											"end": 6381,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6331,
											"end": 6402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 6331,
											"end": 6402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6331,
											"end": 6402,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 6331,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6412,
											"end": 6484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 6480,
											"end": 6482,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6469,
											"end": 6478,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6465,
											"end": 6483,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6456,
											"end": 6462,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6412,
											"end": 6484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 6412,
											"end": 6484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6412,
											"end": 6484,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 6412,
											"end": 6484,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6159,
											"end": 6491,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6159,
											"end": 6491,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6159,
											"end": 6491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6159,
											"end": 6491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6159,
											"end": 6491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6159,
											"end": 6491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6497,
											"end": 6587,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 6497,
											"end": 6587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6531,
											"end": 6538,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6574,
											"end": 6579,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6567,
											"end": 6580,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6560,
											"end": 6581,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6549,
											"end": 6581,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6549,
											"end": 6581,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6497,
											"end": 6587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6497,
											"end": 6587,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6497,
											"end": 6587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6497,
											"end": 6587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6593,
											"end": 6709,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 6593,
											"end": 6709,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6663,
											"end": 6684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 6678,
											"end": 6683,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6663,
											"end": 6684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 6663,
											"end": 6684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6663,
											"end": 6684,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 6663,
											"end": 6684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6656,
											"end": 6661,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6653,
											"end": 6685,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 6703,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 6643,
											"end": 6703,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6699,
											"end": 6700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6696,
											"end": 6697,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6689,
											"end": 6701,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 6703,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 6643,
											"end": 6703,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6593,
											"end": 6709,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6593,
											"end": 6709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6715,
											"end": 6852,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 6715,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6769,
											"end": 6774,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6800,
											"end": 6806,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6794,
											"end": 6807,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6807,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6807,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6816,
											"end": 6846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 6840,
											"end": 6845,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6816,
											"end": 6846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 6816,
											"end": 6846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6816,
											"end": 6846,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 6816,
											"end": 6846,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6715,
											"end": 6852,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6715,
											"end": 6852,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6715,
											"end": 6852,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6715,
											"end": 6852,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6715,
											"end": 6852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6858,
											"end": 7203,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 6858,
											"end": 7203,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6974,
											"end": 6976,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6962,
											"end": 6971,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6953,
											"end": 6960,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6949,
											"end": 6972,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6945,
											"end": 6977,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 6942,
											"end": 7061,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6942,
											"end": 7061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 6942,
											"end": 7061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6980,
											"end": 7059,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 6980,
											"end": 7059,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 6980,
											"end": 7059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6980,
											"end": 7059,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 6980,
											"end": 7059,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6942,
											"end": 7061,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 6942,
											"end": 7061,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7100,
											"end": 7101,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7125,
											"end": 7186,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 7178,
											"end": 7185,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7169,
											"end": 7175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7158,
											"end": 7167,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7154,
											"end": 7176,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7125,
											"end": 7186,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 7125,
											"end": 7186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7125,
											"end": 7186,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 7125,
											"end": 7186,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7115,
											"end": 7186,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7115,
											"end": 7186,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7071,
											"end": 7196,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6858,
											"end": 7203,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6858,
											"end": 7203,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6858,
											"end": 7203,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6858,
											"end": 7203,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6858,
											"end": 7203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7209,
											"end": 7541,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7209,
											"end": 7541,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7330,
											"end": 7334,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7370,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7357,
											"end": 7366,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7353,
											"end": 7371,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7345,
											"end": 7371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7345,
											"end": 7371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7381,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 7449,
											"end": 7450,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7438,
											"end": 7447,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7434,
											"end": 7451,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7425,
											"end": 7431,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7381,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 7381,
											"end": 7452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7381,
											"end": 7452,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 7381,
											"end": 7452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7534,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 7530,
											"end": 7532,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7519,
											"end": 7528,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7515,
											"end": 7533,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7506,
											"end": 7512,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7534,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 7462,
											"end": 7534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7534,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 7462,
											"end": 7534,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7209,
											"end": 7541,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7209,
											"end": 7541,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7209,
											"end": 7541,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7209,
											"end": 7541,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7209,
											"end": 7541,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7209,
											"end": 7541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7547,
											"end": 7769,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 7547,
											"end": 7769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7640,
											"end": 7644,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7678,
											"end": 7680,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7667,
											"end": 7676,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7663,
											"end": 7681,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7681,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7681,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7691,
											"end": 7762,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 7759,
											"end": 7760,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7748,
											"end": 7757,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7735,
											"end": 7741,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7691,
											"end": 7762,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 7691,
											"end": 7762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7691,
											"end": 7762,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 7691,
											"end": 7762,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7547,
											"end": 7769,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7547,
											"end": 7769,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7547,
											"end": 7769,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7547,
											"end": 7769,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7547,
											"end": 7769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7775,
											"end": 7918,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 7775,
											"end": 7918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7832,
											"end": 7837,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7863,
											"end": 7869,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7857,
											"end": 7870,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7848,
											"end": 7870,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7848,
											"end": 7870,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7879,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 7906,
											"end": 7911,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7879,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 7879,
											"end": 7912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7879,
											"end": 7912,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 7879,
											"end": 7912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7775,
											"end": 7918,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7775,
											"end": 7918,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7775,
											"end": 7918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7775,
											"end": 7918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7775,
											"end": 7918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7924,
											"end": 8275,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 7924,
											"end": 8275,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7994,
											"end": 8000,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8043,
											"end": 8045,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8031,
											"end": 8040,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8022,
											"end": 8029,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8018,
											"end": 8041,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8046,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 8011,
											"end": 8130,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8011,
											"end": 8130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 8011,
											"end": 8130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8049,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 8049,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 8049,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8049,
											"end": 8128,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 8049,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8011,
											"end": 8130,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 8011,
											"end": 8130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8169,
											"end": 8170,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8194,
											"end": 8258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 8250,
											"end": 8257,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8241,
											"end": 8247,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8230,
											"end": 8239,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8226,
											"end": 8248,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8194,
											"end": 8258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 8194,
											"end": 8258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8194,
											"end": 8258,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 8194,
											"end": 8258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8184,
											"end": 8258,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8184,
											"end": 8258,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8140,
											"end": 8268,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7924,
											"end": 8275,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7924,
											"end": 8275,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7924,
											"end": 8275,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7924,
											"end": 8275,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7924,
											"end": 8275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8281,
											"end": 8451,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 8281,
											"end": 8451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8421,
											"end": 8443,
											"name": "PUSH",
											"source": 3,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 8417,
											"end": 8418,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8409,
											"end": 8415,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8405,
											"end": 8419,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8398,
											"end": 8444,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8281,
											"end": 8451,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8281,
											"end": 8451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8457,
											"end": 8823,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 8457,
											"end": 8823,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8599,
											"end": 8602,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8620,
											"end": 8687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 8684,
											"end": 8686,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 8679,
											"end": 8682,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8620,
											"end": 8687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 8620,
											"end": 8687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8620,
											"end": 8687,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 8620,
											"end": 8687,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8613,
											"end": 8687,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8613,
											"end": 8687,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8696,
											"end": 8789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 8785,
											"end": 8788,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8696,
											"end": 8789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 8696,
											"end": 8789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8696,
											"end": 8789,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 8696,
											"end": 8789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8814,
											"end": 8816,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8809,
											"end": 8812,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8805,
											"end": 8817,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8798,
											"end": 8817,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8798,
											"end": 8817,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8457,
											"end": 8823,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8457,
											"end": 8823,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8457,
											"end": 8823,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8457,
											"end": 8823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8829,
											"end": 9248,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 8829,
											"end": 9248,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8995,
											"end": 8999,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9033,
											"end": 9035,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9022,
											"end": 9031,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9018,
											"end": 9036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9010,
											"end": 9036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9010,
											"end": 9036,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9082,
											"end": 9091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9076,
											"end": 9080,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9072,
											"end": 9092,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9068,
											"end": 9069,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9057,
											"end": 9066,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9053,
											"end": 9070,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9046,
											"end": 9093,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 9236,
											"end": 9240,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 9110,
											"end": 9241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9241,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 9110,
											"end": 9241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9102,
											"end": 9241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9102,
											"end": 9241,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8829,
											"end": 9248,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8829,
											"end": 9248,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8829,
											"end": 9248,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8829,
											"end": 9248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9254,
											"end": 9696,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 9254,
											"end": 9696,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9403,
											"end": 9407,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9441,
											"end": 9443,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 9430,
											"end": 9439,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9426,
											"end": 9444,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9418,
											"end": 9444,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9418,
											"end": 9444,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9454,
											"end": 9525,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 9522,
											"end": 9523,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9511,
											"end": 9520,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9507,
											"end": 9524,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9498,
											"end": 9504,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9454,
											"end": 9525,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 9454,
											"end": 9525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9454,
											"end": 9525,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 9454,
											"end": 9525,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9535,
											"end": 9607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 9603,
											"end": 9605,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9592,
											"end": 9601,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9588,
											"end": 9606,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9579,
											"end": 9585,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9535,
											"end": 9607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 9535,
											"end": 9607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9535,
											"end": 9607,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 9535,
											"end": 9607,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9617,
											"end": 9689,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 9685,
											"end": 9687,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9674,
											"end": 9683,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9670,
											"end": 9688,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9661,
											"end": 9667,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9617,
											"end": 9689,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 9617,
											"end": 9689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9617,
											"end": 9689,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 9617,
											"end": 9689,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9254,
											"end": 9696,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 9254,
											"end": 9696,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 9254,
											"end": 9696,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9254,
											"end": 9696,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9254,
											"end": 9696,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9254,
											"end": 9696,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9254,
											"end": 9696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/Staketest.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Checkstake()": "91b780ea",
							"calculateReward()": "725cedd3",
							"stake(uint256)": "a694fc3a",
							"tokenA()": "0fc63d10",
							"tokenAreward()": "1928c749",
							"unstake(uint256)": "2e17de78"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Checkstake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenA\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAreward\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staketest.sol\":\"StakingContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/Staketest.sol\":{\"keccak256\":\"0x506bc4ea0e4972cb12be1fc2762d54b4bac58e693c82aed7fd8c70c1f6ff64c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dc527fdf1fb67fb2012ab272328eba67c258620d00ed0a13a2b6957e8b615a5\",\"dweb:/ipfs/QmWCckDaA1QQyZxPEjKcHmbtUyRgfxrBD4LBRWFqLURTjs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 399,
								"contract": "contracts/Staketest.sol:StakingContract",
								"label": "tokenA",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 402,
								"contract": "contracts/Staketest.sol:StakingContract",
								"label": "tokenAreward",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 405,
								"contract": "contracts/Staketest.sol:StakingContract",
								"label": "Maxreward",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 407,
								"contract": "contracts/Staketest.sol:StakingContract",
								"label": "Nowreward",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 410,
								"contract": "contracts/Staketest.sol:StakingContract",
								"label": "rewardRate",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 414,
								"contract": "contracts/Staketest.sol:StakingContract",
								"label": "tokenAstakedAmounts",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 418,
								"contract": "contracts/Staketest.sol:StakingContract",
								"label": "HowLong",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							389
						]
					},
					"id": 390,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 389,
							"linearizedBaseContracts": [
								389
							],
							"name": "SafeMath",
							"nameLocation": "490:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "717:140:1",
										"statements": [
											{
												"id": 110,
												"nodeType": "UncheckedBlock",
												"src": "727:124:1",
												"statements": [
													{
														"assignments": [
															93
														],
														"declarations": [
															{
																"constant": false,
																"id": 93,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 110,
																"src": "751:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 92,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 97,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 94,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "763:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 95,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "767:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 98,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 93,
																"src": "786:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 99,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "790:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 105,
														"nodeType": "IfStatement",
														"src": "782:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 91,
															"id": 104,
															"nodeType": "Return",
															"src": "793:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 107,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "838:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 108,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 91,
														"id": 109,
														"nodeType": "Return",
														"src": "824:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "657:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "668:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "702:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "708:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:1"
									},
									"scope": 389,
									"src": "641:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1078:113:1",
										"statements": [
											{
												"id": 138,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 124,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "1116:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 125,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "1120:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 131,
														"nodeType": "IfStatement",
														"src": "1112:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 123,
															"id": 130,
															"nodeType": "Return",
															"src": "1123:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 133,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "1168:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 134,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "1172:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 136,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 123,
														"id": 137,
														"nodeType": "Return",
														"src": "1154:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1018:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1029:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1063:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:1"
									},
									"scope": 389,
									"src": "1002:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1415:417:1",
										"statements": [
											{
												"id": 180,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 152,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1683:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 159,
														"nodeType": "IfStatement",
														"src": "1679:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 157,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 158,
															"nodeType": "Return",
															"src": "1691:16:1"
														}
													},
													{
														"assignments": [
															161
														],
														"declarations": [
															{
																"constant": false,
																"id": 161,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 180,
																"src": "1721:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 160,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 165,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 162,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1733:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 163,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1737:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 166,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1756:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 167,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "1760:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 169,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1765:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 175,
														"nodeType": "IfStatement",
														"src": "1752:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 174,
															"nodeType": "Return",
															"src": "1768:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 177,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1813:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 178,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 151,
														"id": 179,
														"nodeType": "Return",
														"src": "1799:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1355:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1366:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1400:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1406:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:1"
									},
									"scope": 389,
									"src": "1339:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "2057:114:1",
										"statements": [
											{
												"id": 208,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 194,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "2095:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 201,
														"nodeType": "IfStatement",
														"src": "2091:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 199,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 193,
															"id": 200,
															"nodeType": "Return",
															"src": "2103:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 203,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "2148:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 204,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "2152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 206,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 193,
														"id": 207,
														"nodeType": "Return",
														"src": "2134:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1997:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2042:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2048:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:1"
									},
									"scope": 389,
									"src": "1981:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2406:114:1",
										"statements": [
											{
												"id": 236,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 222,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "2444:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 229,
														"nodeType": "IfStatement",
														"src": "2440:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 227,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 221,
															"id": 228,
															"nodeType": "Return",
															"src": "2452:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 231,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 213,
																		"src": "2497:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 232,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "2501:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 234,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 221,
														"id": 235,
														"nodeType": "Return",
														"src": "2483:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2346:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2357:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2391:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 217,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2397:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:1"
									},
									"scope": 389,
									"src": "2330:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "2822:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 248,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "2839:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 249,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2843:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 247,
												"id": 251,
												"nodeType": "Return",
												"src": "2832:12:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2768:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2779:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:1"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2813:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:1"
									},
									"scope": 389,
									"src": "2755:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "3189:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3206:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 264,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "3210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 262,
												"id": 266,
												"nodeType": "Return",
												"src": "3199:12:1"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3135:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3146:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:1"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3180:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:1"
									},
									"scope": 389,
									"src": "3122:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "3532:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 278,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "3549:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 279,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "3553:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 277,
												"id": 281,
												"nodeType": "Return",
												"src": "3542:12:1"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3478:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3489:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:1"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3523:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:1"
									},
									"scope": 389,
									"src": "3465:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "3917:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 293,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "3934:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 294,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "3938:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 292,
												"id": 296,
												"nodeType": "Return",
												"src": "3927:12:1"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3863:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3874:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3908:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:1"
									},
									"scope": 389,
									"src": "3850:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "4466:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 308,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "4483:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 309,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "4487:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 307,
												"id": 311,
												"nodeType": "Return",
												"src": "4476:12:1"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4412:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4423:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:1"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4457:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:1"
									},
									"scope": 389,
									"src": "4399:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "5084:106:1",
										"statements": [
											{
												"id": 336,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 326,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "5126:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 327,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "5131:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 329,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "5134:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 325,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 331,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "5168:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 333,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "5172:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 324,
														"id": 335,
														"nodeType": "Return",
														"src": "5161:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "4981:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5000:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5019:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 319,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:1"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5075:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:1"
									},
									"scope": 389,
									"src": "4959:231:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "5799:105:1",
										"statements": [
											{
												"id": 361,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 351,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "5841:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 354,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "5848:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 350,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 356,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "5882:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 358,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "5886:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 349,
														"id": 360,
														"nodeType": "Return",
														"src": "5875:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5696:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5715:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5734:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 344,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:1"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5790:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:1"
									},
									"scope": 389,
									"src": "5674:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "6675:105:1",
										"statements": [
											{
												"id": 386,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 376,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "6717:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 379,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "6724:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 375,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 381,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 382,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "6758:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 383,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "6762:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 374,
														"id": 385,
														"nodeType": "Return",
														"src": "6751:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6572:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6591:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6610:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 369,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6666:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:1"
									},
									"scope": 389,
									"src": "6550:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 390,
							"src": "482:6300:1",
							"usedErrors": []
						}
					],
					"src": "107:6676:1"
				},
				"id": 1
			},
			"contracts/Staketest.sol": {
				"ast": {
					"absolutePath": "contracts/Staketest.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"SafeMath": [
							389
						],
						"StakingContract": [
							648
						]
					},
					"id": 649,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 391,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 392,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 649,
							"sourceUnit": 390,
							"src": "61:57:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 649,
							"sourceUnit": 78,
							"src": "120:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StakingContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 648,
							"linearizedBaseContracts": [
								648
							],
							"name": "StakingContract",
							"nameLocation": "189:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 396,
									"libraryName": {
										"id": 394,
										"name": "SafeMath",
										"nameLocations": [
											"218:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 389,
										"src": "218:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "212:27:2",
									"typeName": {
										"id": 395,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "231:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "0fc63d10",
									"id": 399,
									"mutability": "mutable",
									"name": "tokenA",
									"nameLocation": "261:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 648,
									"src": "247:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 398,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 397,
											"name": "IERC20",
											"nameLocations": [
												"247:6:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "247:6:2"
										},
										"referencedDeclaration": 77,
										"src": "247:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1928c749",
									"id": 402,
									"mutability": "mutable",
									"name": "tokenAreward",
									"nameLocation": "288:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 648,
									"src": "274:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 401,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 400,
											"name": "IERC20",
											"nameLocations": [
												"274:6:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "274:6:2"
										},
										"referencedDeclaration": 77,
										"src": "274:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 405,
									"mutability": "mutable",
									"name": "Maxreward",
									"nameLocation": "315:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 648,
									"src": "307:31:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 403,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "307:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030303030303030",
										"id": 404,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "327:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000_by_1",
											"typeString": "int_const 10000000000"
										},
										"value": "10000000000"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 407,
									"mutability": "mutable",
									"name": "Nowreward",
									"nameLocation": "365:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 648,
									"src": "357:17:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 406,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "357:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 410,
									"mutability": "mutable",
									"name": "rewardRate",
									"nameLocation": "413:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 648,
									"src": "405:24:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 408,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "405:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 409,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "426:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 414,
									"mutability": "mutable",
									"name": "tokenAstakedAmounts",
									"nameLocation": "558:19:2",
									"nodeType": "VariableDeclaration",
									"scope": 648,
									"src": "522:55:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 413,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 411,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "530:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "522:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 412,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "541:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 418,
									"mutability": "mutable",
									"name": "HowLong",
									"nameLocation": "641:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 648,
									"src": "605:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 417,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 415,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "613:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "605:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 416,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "624:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 435,
										"nodeType": "Block",
										"src": "727:84:2",
										"statements": [
											{
												"expression": {
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 423,
														"name": "tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "738:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 425,
																"name": "_tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "754:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 424,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "747:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "747:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "738:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "738:24:2"
											},
											{
												"expression": {
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 429,
														"name": "tokenAreward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "773:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 431,
																"name": "_tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "795:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 430,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "788:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "788:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "773:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "773:30:2"
											}
										]
									},
									"id": 436,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "_tokenA",
												"nameLocation": "718:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "710:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "710:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "709:17:2"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "727:0:2"
									},
									"scope": 648,
									"src": "698:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "860:545:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 442,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 438,
																"src": "879:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "889:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "879:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "892:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 441,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "871:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "871:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "871:56:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 451,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "987:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "991:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "987:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 449,
																		"name": "tokenA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 399,
																		"src": "970:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "977:9:2",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 34,
																	"src": "970:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "970:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 454,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 438,
																"src": "1002:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "970:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1011:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 448,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "962:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "962:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "962:72:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 462,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1097:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1101:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1097:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 466,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1117:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingContract_$648",
																		"typeString": "contract StakingContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingContract_$648",
																		"typeString": "contract StakingContract"
																	}
																],
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1109:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 464,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1109:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1109:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "1124:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 459,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "1077:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1084:12:2",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "1077:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1077:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "1077:55:2"
											},
											{
												"expression": {
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 471,
															"name": "tokenAstakedAmounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "1175:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 474,
														"indexExpression": {
															"expression": {
																"id": 472,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1195:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1199:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1195:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1175:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 480,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 438,
																"src": "1245:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 475,
																	"name": "tokenAstakedAmounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "1209:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 478,
																"indexExpression": {
																	"expression": {
																		"id": 476,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1229:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1233:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1229:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1209:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1241:3:2",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 253,
															"src": "1209:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1209:44:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1175:78:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "1175:78:2"
											},
											{
												"expression": {
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 484,
															"name": "HowLong",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "1291:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 487,
														"indexExpression": {
															"expression": {
																"id": 485,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1299:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1303:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1299:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1291:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 488,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1313:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1319:9:2",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1313:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1291:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "1291:37:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 493,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1377:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1381:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1377:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 495,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "1389:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 492,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1370:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1370:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 497,
												"nodeType": "EmitStatement",
												"src": "1365:32:2"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "828:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "842:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "834:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "833:17:2"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "860:0:2"
									},
									"scope": 648,
									"src": "819:586:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "1456:847:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 505,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 501,
																"src": "1475:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1485:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1475:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1488:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 504,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1467:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1467:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "1467:56:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 512,
																	"name": "tokenAstakedAmounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "1565:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 515,
																"indexExpression": {
																	"expression": {
																		"id": 513,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1585:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1589:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1585:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1565:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 516,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 501,
																"src": "1600:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1565:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74207374616b65642062616c616e6365",
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1609:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
																"typeString": "literal_string \"Insufficient staked balance\""
															},
															"value": "Insufficient staked balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
																"typeString": "literal_string \"Insufficient staked balance\""
															}
														],
														"id": 511,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1557:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1557:82:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "1557:82:2"
											},
											{
												"assignments": [
													522
												],
												"declarations": [
													{
														"constant": false,
														"id": 522,
														"mutability": "mutable",
														"name": "time",
														"nameLocation": "1702:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 593,
														"src": "1694:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 521,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1694:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 533,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 523,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1710:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1716:9:2",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1710:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"baseExpression": {
																		"id": 525,
																		"name": "HowLong",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 418,
																		"src": "1728:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 528,
																	"indexExpression": {
																		"expression": {
																			"id": 526,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1736:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1740:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1736:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1728:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1710:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 530,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1709:39:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1751:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1709:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1694:60:2"
											},
											{
												"assignments": [
													535
												],
												"declarations": [
													{
														"constant": false,
														"id": 535,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "1794:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 593,
														"src": "1786:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 534,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1786:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 544,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 536,
																"name": "tokenAstakedAmounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 414,
																"src": "1803:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 539,
															"indexExpression": {
																"expression": {
																	"id": 537,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1823:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1827:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1823:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1803:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 540,
															"name": "rewardRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "1837:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1803:44:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 542,
														"name": "time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "1850:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1803:51:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1786:68:2"
											},
											{
												"expression": {
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 545,
														"name": "Nowreward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "1886:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 546,
															"name": "Nowreward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "1898:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 547,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "1910:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1898:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1886:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "1886:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 554,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1976:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1980:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1976:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 556,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "1988:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 551,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "1960:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1967:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "1960:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1960:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "1960:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 564,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "2052:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 559,
																"name": "tokenAstakedAmounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 414,
																"src": "2016:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 562,
															"indexExpression": {
																"expression": {
																	"id": 560,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2036:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2040:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2036:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2016:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2048:3:2",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "2016:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2016:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "2016:44:2"
											},
											{
												"expression": {
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 567,
															"name": "HowLong",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "2098:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 570,
														"indexExpression": {
															"expression": {
																"id": 568,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2106:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2110:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2106:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2098:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 571,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2120:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2098:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "2098:23:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 574,
														"name": "Maxreward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "2156:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 575,
														"name": "Nowreward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "2169:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2156:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 585,
												"nodeType": "IfStatement",
												"src": "2152:78:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 580,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2211:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2215:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2211:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 582,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "2223:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 577,
																"name": "tokenAreward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "2189:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2202:8:2",
															"memberName": "transfer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 44,
															"src": "2189:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2189:41:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 584,
													"nodeType": "ExpressionStatement",
													"src": "2189:41:2"
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 587,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2267:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2271:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2267:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 589,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "2279:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 590,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "2288:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 586,
														"name": "Unstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "2258:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2258:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "EmitStatement",
												"src": "2253:42:2"
											}
										]
									},
									"functionSelector": "2e17de78",
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstake",
									"nameLocation": "1422:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1438:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "1430:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1430:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1429:17:2"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1456:0:2"
									},
									"scope": 648,
									"src": "1413:890:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "2368:186:2",
										"statements": [
											{
												"assignments": [
													600
												],
												"declarations": [
													{
														"constant": false,
														"id": 600,
														"mutability": "mutable",
														"name": "time",
														"nameLocation": "2387:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 621,
														"src": "2379:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 599,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2379:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 611,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 601,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2395:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2401:9:2",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2395:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"baseExpression": {
																		"id": 603,
																		"name": "HowLong",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 418,
																		"src": "2413:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 606,
																	"indexExpression": {
																		"expression": {
																			"id": 604,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2421:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2425:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2421:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2413:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2395:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 608,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2394:39:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 609,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2436:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "2394:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2379:60:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 617,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 612,
																"name": "tokenAstakedAmounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 414,
																"src": "2480:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 615,
															"indexExpression": {
																"expression": {
																	"id": 613,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2500:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2504:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2500:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2480:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 616,
															"name": "rewardRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "2514:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2480:44:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 618,
														"name": "time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "2527:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2480:51:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 598,
												"id": 620,
												"nodeType": "Return",
												"src": "2473:58:2"
											}
										]
									},
									"functionSelector": "725cedd3",
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "2320:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2335:2:2"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "2359:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2359:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2358:9:2"
									},
									"scope": 648,
									"src": "2311:243:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "2615:57:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 627,
														"name": "tokenAstakedAmounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "2633:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 630,
													"indexExpression": {
														"expression": {
															"id": 628,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2653:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2657:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2653:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2633:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 626,
												"id": 631,
												"nodeType": "Return",
												"src": "2626:38:2"
											}
										]
									},
									"functionSelector": "91b780ea",
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Checkstake",
									"nameLocation": "2571:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2582:2:2"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "2606:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2606:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2605:9:2"
									},
									"scope": 648,
									"src": "2562:110:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 639,
									"name": "Staked",
									"nameLocation": "2686:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2709:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "2693:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2726:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "2718:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2692:41:2"
									},
									"src": "2680:54:2"
								},
								{
									"anonymous": false,
									"eventSelector": "7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e",
									"id": 647,
									"name": "Unstaked",
									"nameLocation": "2746:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2771:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "2755:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2755:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2788:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "2780:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2780:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "2804:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "2796:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2796:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2754:57:2"
									},
									"src": "2740:72:2"
								}
							],
							"scope": 649,
							"src": "180:2635:2",
							"usedErrors": []
						}
					],
					"src": "33:2784:2"
				},
				"id": 2
			}
		}
	}
}